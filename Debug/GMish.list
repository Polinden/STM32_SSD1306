
GMish.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005e90  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000bcc  08006028  08006028  00016028  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006bf4  08006bf4  0002001c  2**0
                  CONTENTS
  4 .ARM          00000008  08006bf4  08006bf4  00016bf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006bfc  08006bfc  0002001c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006bfc  08006bfc  00016bfc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006c00  08006c00  00016c00  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000001c  20000000  08006c04  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00008288  2000001c  08006c20  0002001c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200082a4  08006c20  000282a4  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  0002001c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000a001  00000000  00000000  0002004a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000135a  00000000  00000000  0002a04b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000450  00000000  00000000  0002b3a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000003a8  00000000  00000000  0002b7f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00015c9a  00000000  00000000  0002bba0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000420b  00000000  00000000  0004183a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00085426  00000000  00000000  00045a45  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000d5  00000000  00000000  000cae6b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000f50  00000000  00000000  000caf40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	2000001c 	.word	0x2000001c
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08006010 	.word	0x08006010

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000020 	.word	0x20000020
 80001d4:	08006010 	.word	0x08006010

080001d8 <__aeabi_uldivmod>:
 80001d8:	b953      	cbnz	r3, 80001f0 <__aeabi_uldivmod+0x18>
 80001da:	b94a      	cbnz	r2, 80001f0 <__aeabi_uldivmod+0x18>
 80001dc:	2900      	cmp	r1, #0
 80001de:	bf08      	it	eq
 80001e0:	2800      	cmpeq	r0, #0
 80001e2:	bf1c      	itt	ne
 80001e4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80001e8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80001ec:	f000 b96e 	b.w	80004cc <__aeabi_idiv0>
 80001f0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001f4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001f8:	f000 f806 	bl	8000208 <__udivmoddi4>
 80001fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000200:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000204:	b004      	add	sp, #16
 8000206:	4770      	bx	lr

08000208 <__udivmoddi4>:
 8000208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800020c:	9d08      	ldr	r5, [sp, #32]
 800020e:	4604      	mov	r4, r0
 8000210:	468c      	mov	ip, r1
 8000212:	2b00      	cmp	r3, #0
 8000214:	f040 8083 	bne.w	800031e <__udivmoddi4+0x116>
 8000218:	428a      	cmp	r2, r1
 800021a:	4617      	mov	r7, r2
 800021c:	d947      	bls.n	80002ae <__udivmoddi4+0xa6>
 800021e:	fab2 f282 	clz	r2, r2
 8000222:	b142      	cbz	r2, 8000236 <__udivmoddi4+0x2e>
 8000224:	f1c2 0020 	rsb	r0, r2, #32
 8000228:	fa24 f000 	lsr.w	r0, r4, r0
 800022c:	4091      	lsls	r1, r2
 800022e:	4097      	lsls	r7, r2
 8000230:	ea40 0c01 	orr.w	ip, r0, r1
 8000234:	4094      	lsls	r4, r2
 8000236:	ea4f 4817 	mov.w	r8, r7, lsr #16
 800023a:	0c23      	lsrs	r3, r4, #16
 800023c:	fbbc f6f8 	udiv	r6, ip, r8
 8000240:	fa1f fe87 	uxth.w	lr, r7
 8000244:	fb08 c116 	mls	r1, r8, r6, ip
 8000248:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800024c:	fb06 f10e 	mul.w	r1, r6, lr
 8000250:	4299      	cmp	r1, r3
 8000252:	d909      	bls.n	8000268 <__udivmoddi4+0x60>
 8000254:	18fb      	adds	r3, r7, r3
 8000256:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 800025a:	f080 8119 	bcs.w	8000490 <__udivmoddi4+0x288>
 800025e:	4299      	cmp	r1, r3
 8000260:	f240 8116 	bls.w	8000490 <__udivmoddi4+0x288>
 8000264:	3e02      	subs	r6, #2
 8000266:	443b      	add	r3, r7
 8000268:	1a5b      	subs	r3, r3, r1
 800026a:	b2a4      	uxth	r4, r4
 800026c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000270:	fb08 3310 	mls	r3, r8, r0, r3
 8000274:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000278:	fb00 fe0e 	mul.w	lr, r0, lr
 800027c:	45a6      	cmp	lr, r4
 800027e:	d909      	bls.n	8000294 <__udivmoddi4+0x8c>
 8000280:	193c      	adds	r4, r7, r4
 8000282:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000286:	f080 8105 	bcs.w	8000494 <__udivmoddi4+0x28c>
 800028a:	45a6      	cmp	lr, r4
 800028c:	f240 8102 	bls.w	8000494 <__udivmoddi4+0x28c>
 8000290:	3802      	subs	r0, #2
 8000292:	443c      	add	r4, r7
 8000294:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000298:	eba4 040e 	sub.w	r4, r4, lr
 800029c:	2600      	movs	r6, #0
 800029e:	b11d      	cbz	r5, 80002a8 <__udivmoddi4+0xa0>
 80002a0:	40d4      	lsrs	r4, r2
 80002a2:	2300      	movs	r3, #0
 80002a4:	e9c5 4300 	strd	r4, r3, [r5]
 80002a8:	4631      	mov	r1, r6
 80002aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002ae:	b902      	cbnz	r2, 80002b2 <__udivmoddi4+0xaa>
 80002b0:	deff      	udf	#255	; 0xff
 80002b2:	fab2 f282 	clz	r2, r2
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d150      	bne.n	800035c <__udivmoddi4+0x154>
 80002ba:	1bcb      	subs	r3, r1, r7
 80002bc:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002c0:	fa1f f887 	uxth.w	r8, r7
 80002c4:	2601      	movs	r6, #1
 80002c6:	fbb3 fcfe 	udiv	ip, r3, lr
 80002ca:	0c21      	lsrs	r1, r4, #16
 80002cc:	fb0e 331c 	mls	r3, lr, ip, r3
 80002d0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80002d4:	fb08 f30c 	mul.w	r3, r8, ip
 80002d8:	428b      	cmp	r3, r1
 80002da:	d907      	bls.n	80002ec <__udivmoddi4+0xe4>
 80002dc:	1879      	adds	r1, r7, r1
 80002de:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 80002e2:	d202      	bcs.n	80002ea <__udivmoddi4+0xe2>
 80002e4:	428b      	cmp	r3, r1
 80002e6:	f200 80e9 	bhi.w	80004bc <__udivmoddi4+0x2b4>
 80002ea:	4684      	mov	ip, r0
 80002ec:	1ac9      	subs	r1, r1, r3
 80002ee:	b2a3      	uxth	r3, r4
 80002f0:	fbb1 f0fe 	udiv	r0, r1, lr
 80002f4:	fb0e 1110 	mls	r1, lr, r0, r1
 80002f8:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80002fc:	fb08 f800 	mul.w	r8, r8, r0
 8000300:	45a0      	cmp	r8, r4
 8000302:	d907      	bls.n	8000314 <__udivmoddi4+0x10c>
 8000304:	193c      	adds	r4, r7, r4
 8000306:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 800030a:	d202      	bcs.n	8000312 <__udivmoddi4+0x10a>
 800030c:	45a0      	cmp	r8, r4
 800030e:	f200 80d9 	bhi.w	80004c4 <__udivmoddi4+0x2bc>
 8000312:	4618      	mov	r0, r3
 8000314:	eba4 0408 	sub.w	r4, r4, r8
 8000318:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 800031c:	e7bf      	b.n	800029e <__udivmoddi4+0x96>
 800031e:	428b      	cmp	r3, r1
 8000320:	d909      	bls.n	8000336 <__udivmoddi4+0x12e>
 8000322:	2d00      	cmp	r5, #0
 8000324:	f000 80b1 	beq.w	800048a <__udivmoddi4+0x282>
 8000328:	2600      	movs	r6, #0
 800032a:	e9c5 0100 	strd	r0, r1, [r5]
 800032e:	4630      	mov	r0, r6
 8000330:	4631      	mov	r1, r6
 8000332:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000336:	fab3 f683 	clz	r6, r3
 800033a:	2e00      	cmp	r6, #0
 800033c:	d14a      	bne.n	80003d4 <__udivmoddi4+0x1cc>
 800033e:	428b      	cmp	r3, r1
 8000340:	d302      	bcc.n	8000348 <__udivmoddi4+0x140>
 8000342:	4282      	cmp	r2, r0
 8000344:	f200 80b8 	bhi.w	80004b8 <__udivmoddi4+0x2b0>
 8000348:	1a84      	subs	r4, r0, r2
 800034a:	eb61 0103 	sbc.w	r1, r1, r3
 800034e:	2001      	movs	r0, #1
 8000350:	468c      	mov	ip, r1
 8000352:	2d00      	cmp	r5, #0
 8000354:	d0a8      	beq.n	80002a8 <__udivmoddi4+0xa0>
 8000356:	e9c5 4c00 	strd	r4, ip, [r5]
 800035a:	e7a5      	b.n	80002a8 <__udivmoddi4+0xa0>
 800035c:	f1c2 0320 	rsb	r3, r2, #32
 8000360:	fa20 f603 	lsr.w	r6, r0, r3
 8000364:	4097      	lsls	r7, r2
 8000366:	fa01 f002 	lsl.w	r0, r1, r2
 800036a:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800036e:	40d9      	lsrs	r1, r3
 8000370:	4330      	orrs	r0, r6
 8000372:	0c03      	lsrs	r3, r0, #16
 8000374:	fbb1 f6fe 	udiv	r6, r1, lr
 8000378:	fa1f f887 	uxth.w	r8, r7
 800037c:	fb0e 1116 	mls	r1, lr, r6, r1
 8000380:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000384:	fb06 f108 	mul.w	r1, r6, r8
 8000388:	4299      	cmp	r1, r3
 800038a:	fa04 f402 	lsl.w	r4, r4, r2
 800038e:	d909      	bls.n	80003a4 <__udivmoddi4+0x19c>
 8000390:	18fb      	adds	r3, r7, r3
 8000392:	f106 3cff 	add.w	ip, r6, #4294967295	; 0xffffffff
 8000396:	f080 808d 	bcs.w	80004b4 <__udivmoddi4+0x2ac>
 800039a:	4299      	cmp	r1, r3
 800039c:	f240 808a 	bls.w	80004b4 <__udivmoddi4+0x2ac>
 80003a0:	3e02      	subs	r6, #2
 80003a2:	443b      	add	r3, r7
 80003a4:	1a5b      	subs	r3, r3, r1
 80003a6:	b281      	uxth	r1, r0
 80003a8:	fbb3 f0fe 	udiv	r0, r3, lr
 80003ac:	fb0e 3310 	mls	r3, lr, r0, r3
 80003b0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80003b4:	fb00 f308 	mul.w	r3, r0, r8
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d907      	bls.n	80003cc <__udivmoddi4+0x1c4>
 80003bc:	1879      	adds	r1, r7, r1
 80003be:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80003c2:	d273      	bcs.n	80004ac <__udivmoddi4+0x2a4>
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d971      	bls.n	80004ac <__udivmoddi4+0x2a4>
 80003c8:	3802      	subs	r0, #2
 80003ca:	4439      	add	r1, r7
 80003cc:	1acb      	subs	r3, r1, r3
 80003ce:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 80003d2:	e778      	b.n	80002c6 <__udivmoddi4+0xbe>
 80003d4:	f1c6 0c20 	rsb	ip, r6, #32
 80003d8:	fa03 f406 	lsl.w	r4, r3, r6
 80003dc:	fa22 f30c 	lsr.w	r3, r2, ip
 80003e0:	431c      	orrs	r4, r3
 80003e2:	fa20 f70c 	lsr.w	r7, r0, ip
 80003e6:	fa01 f306 	lsl.w	r3, r1, r6
 80003ea:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80003ee:	fa21 f10c 	lsr.w	r1, r1, ip
 80003f2:	431f      	orrs	r7, r3
 80003f4:	0c3b      	lsrs	r3, r7, #16
 80003f6:	fbb1 f9fe 	udiv	r9, r1, lr
 80003fa:	fa1f f884 	uxth.w	r8, r4
 80003fe:	fb0e 1119 	mls	r1, lr, r9, r1
 8000402:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000406:	fb09 fa08 	mul.w	sl, r9, r8
 800040a:	458a      	cmp	sl, r1
 800040c:	fa02 f206 	lsl.w	r2, r2, r6
 8000410:	fa00 f306 	lsl.w	r3, r0, r6
 8000414:	d908      	bls.n	8000428 <__udivmoddi4+0x220>
 8000416:	1861      	adds	r1, r4, r1
 8000418:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 800041c:	d248      	bcs.n	80004b0 <__udivmoddi4+0x2a8>
 800041e:	458a      	cmp	sl, r1
 8000420:	d946      	bls.n	80004b0 <__udivmoddi4+0x2a8>
 8000422:	f1a9 0902 	sub.w	r9, r9, #2
 8000426:	4421      	add	r1, r4
 8000428:	eba1 010a 	sub.w	r1, r1, sl
 800042c:	b2bf      	uxth	r7, r7
 800042e:	fbb1 f0fe 	udiv	r0, r1, lr
 8000432:	fb0e 1110 	mls	r1, lr, r0, r1
 8000436:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 800043a:	fb00 f808 	mul.w	r8, r0, r8
 800043e:	45b8      	cmp	r8, r7
 8000440:	d907      	bls.n	8000452 <__udivmoddi4+0x24a>
 8000442:	19e7      	adds	r7, r4, r7
 8000444:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8000448:	d22e      	bcs.n	80004a8 <__udivmoddi4+0x2a0>
 800044a:	45b8      	cmp	r8, r7
 800044c:	d92c      	bls.n	80004a8 <__udivmoddi4+0x2a0>
 800044e:	3802      	subs	r0, #2
 8000450:	4427      	add	r7, r4
 8000452:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000456:	eba7 0708 	sub.w	r7, r7, r8
 800045a:	fba0 8902 	umull	r8, r9, r0, r2
 800045e:	454f      	cmp	r7, r9
 8000460:	46c6      	mov	lr, r8
 8000462:	4649      	mov	r1, r9
 8000464:	d31a      	bcc.n	800049c <__udivmoddi4+0x294>
 8000466:	d017      	beq.n	8000498 <__udivmoddi4+0x290>
 8000468:	b15d      	cbz	r5, 8000482 <__udivmoddi4+0x27a>
 800046a:	ebb3 020e 	subs.w	r2, r3, lr
 800046e:	eb67 0701 	sbc.w	r7, r7, r1
 8000472:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000476:	40f2      	lsrs	r2, r6
 8000478:	ea4c 0202 	orr.w	r2, ip, r2
 800047c:	40f7      	lsrs	r7, r6
 800047e:	e9c5 2700 	strd	r2, r7, [r5]
 8000482:	2600      	movs	r6, #0
 8000484:	4631      	mov	r1, r6
 8000486:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800048a:	462e      	mov	r6, r5
 800048c:	4628      	mov	r0, r5
 800048e:	e70b      	b.n	80002a8 <__udivmoddi4+0xa0>
 8000490:	4606      	mov	r6, r0
 8000492:	e6e9      	b.n	8000268 <__udivmoddi4+0x60>
 8000494:	4618      	mov	r0, r3
 8000496:	e6fd      	b.n	8000294 <__udivmoddi4+0x8c>
 8000498:	4543      	cmp	r3, r8
 800049a:	d2e5      	bcs.n	8000468 <__udivmoddi4+0x260>
 800049c:	ebb8 0e02 	subs.w	lr, r8, r2
 80004a0:	eb69 0104 	sbc.w	r1, r9, r4
 80004a4:	3801      	subs	r0, #1
 80004a6:	e7df      	b.n	8000468 <__udivmoddi4+0x260>
 80004a8:	4608      	mov	r0, r1
 80004aa:	e7d2      	b.n	8000452 <__udivmoddi4+0x24a>
 80004ac:	4660      	mov	r0, ip
 80004ae:	e78d      	b.n	80003cc <__udivmoddi4+0x1c4>
 80004b0:	4681      	mov	r9, r0
 80004b2:	e7b9      	b.n	8000428 <__udivmoddi4+0x220>
 80004b4:	4666      	mov	r6, ip
 80004b6:	e775      	b.n	80003a4 <__udivmoddi4+0x19c>
 80004b8:	4630      	mov	r0, r6
 80004ba:	e74a      	b.n	8000352 <__udivmoddi4+0x14a>
 80004bc:	f1ac 0c02 	sub.w	ip, ip, #2
 80004c0:	4439      	add	r1, r7
 80004c2:	e713      	b.n	80002ec <__udivmoddi4+0xe4>
 80004c4:	3802      	subs	r0, #2
 80004c6:	443c      	add	r4, r7
 80004c8:	e724      	b.n	8000314 <__udivmoddi4+0x10c>
 80004ca:	bf00      	nop

080004cc <__aeabi_idiv0>:
 80004cc:	4770      	bx	lr
 80004ce:	bf00      	nop

080004d0 <GUI_X_Config>:
*
* Purpose:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void) {
 80004d0:	b580      	push	{r7, lr}
 80004d2:	af00      	add	r7, sp, #0
  //
  static U32 aMemory[GUI_NUMBYTES / 4];
  //
  // Assign memory to emWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
 80004d4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80004d8:	4803      	ldr	r0, [pc, #12]	; (80004e8 <GUI_X_Config+0x18>)
 80004da:	f002 fba3 	bl	8002c24 <GUI_ALLOC_AssignMemory>
  //
  // Set default font
  //
  GUI_SetDefaultFont(GUI_FONT_6X8);
 80004de:	4803      	ldr	r0, [pc, #12]	; (80004ec <GUI_X_Config+0x1c>)
 80004e0:	f002 f8e2 	bl	80026a8 <GUI_SetDefaultFont>
}
 80004e4:	bf00      	nop
 80004e6:	bd80      	pop	{r7, pc}
 80004e8:	20000038 	.word	0x20000038
 80004ec:	08006094 	.word	0x08006094

080004f0 <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 80004f0:	b480      	push	{r7}
 80004f2:	af00      	add	r7, sp, #0
 80004f4:	bf00      	nop
 80004f6:	46bd      	mov	sp, r7
 80004f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004fc:	4770      	bx	lr

080004fe <LcdWriteReg>:
*       LcdWriteReg
*
* Function description:
*   Sets display register
*/
static void LcdWriteReg(U16 Data) {
 80004fe:	b480      	push	{r7}
 8000500:	b083      	sub	sp, #12
 8000502:	af00      	add	r7, sp, #0
 8000504:	4603      	mov	r3, r0
 8000506:	80fb      	strh	r3, [r7, #6]
  // ... TBD by user
}
 8000508:	bf00      	nop
 800050a:	370c      	adds	r7, #12
 800050c:	46bd      	mov	sp, r7
 800050e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000512:	4770      	bx	lr

08000514 <LcdWriteData>:
*       LcdWriteData
*
* Function description:
*   Writes a value to a display register
*/
static void LcdWriteData(U16 Data) {
 8000514:	b480      	push	{r7}
 8000516:	b083      	sub	sp, #12
 8000518:	af00      	add	r7, sp, #0
 800051a:	4603      	mov	r3, r0
 800051c:	80fb      	strh	r3, [r7, #6]
  // ... TBD by user
}
 800051e:	bf00      	nop
 8000520:	370c      	adds	r7, #12
 8000522:	46bd      	mov	sp, r7
 8000524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000528:	4770      	bx	lr

0800052a <LcdWriteDataMultiple>:
*       LcdWriteDataMultiple
*
* Function description:
*   Writes multiple values to a display register.
*/
static void LcdWriteDataMultiple(U16 * pData, int NumItems) {
 800052a:	b480      	push	{r7}
 800052c:	b083      	sub	sp, #12
 800052e:	af00      	add	r7, sp, #0
 8000530:	6078      	str	r0, [r7, #4]
 8000532:	6039      	str	r1, [r7, #0]
  while (NumItems--) {
 8000534:	bf00      	nop
 8000536:	683b      	ldr	r3, [r7, #0]
 8000538:	1e5a      	subs	r2, r3, #1
 800053a:	603a      	str	r2, [r7, #0]
 800053c:	2b00      	cmp	r3, #0
 800053e:	d1fa      	bne.n	8000536 <LcdWriteDataMultiple+0xc>
    // ... TBD by user
  }
}
 8000540:	bf00      	nop
 8000542:	bf00      	nop
 8000544:	370c      	adds	r7, #12
 8000546:	46bd      	mov	sp, r7
 8000548:	f85d 7b04 	ldr.w	r7, [sp], #4
 800054c:	4770      	bx	lr

0800054e <LcdReadDataMultiple>:
*       LcdReadDataMultiple
*
* Function description:
*   Reads multiple values from a display register.
*/
static void LcdReadDataMultiple(U16 * pData, int NumItems) {
 800054e:	b480      	push	{r7}
 8000550:	b083      	sub	sp, #12
 8000552:	af00      	add	r7, sp, #0
 8000554:	6078      	str	r0, [r7, #4]
 8000556:	6039      	str	r1, [r7, #0]
  while (NumItems--) {
 8000558:	bf00      	nop
 800055a:	683b      	ldr	r3, [r7, #0]
 800055c:	1e5a      	subs	r2, r3, #1
 800055e:	603a      	str	r2, [r7, #0]
 8000560:	2b00      	cmp	r3, #0
 8000562:	d1fa      	bne.n	800055a <LcdReadDataMultiple+0xc>
    // ... TBD by user
  }
}
 8000564:	bf00      	nop
 8000566:	bf00      	nop
 8000568:	370c      	adds	r7, #12
 800056a:	46bd      	mov	sp, r7
 800056c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000570:	4770      	bx	lr
	...

08000574 <LCD_X_Config>:
* Function description:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/
void LCD_X_Config(void) {
 8000574:	b580      	push	{r7, lr}
 8000576:	b0a0      	sub	sp, #128	; 0x80
 8000578:	af00      	add	r7, sp, #0
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 800057a:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800057e:	2200      	movs	r2, #0
 8000580:	601a      	str	r2, [r3, #0]
 8000582:	605a      	str	r2, [r3, #4]
 8000584:	609a      	str	r2, [r3, #8]
 8000586:	60da      	str	r2, [r3, #12]
 8000588:	611a      	str	r2, [r3, #16]
  GUI_PORT_API PortAPI = {0};
 800058a:	463b      	mov	r3, r7
 800058c:	2268      	movs	r2, #104	; 0x68
 800058e:	2100      	movs	r1, #0
 8000590:	4618      	mov	r0, r3
 8000592:	f005 fd35 	bl	8006000 <memset>
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_565, 0, 0);
 8000596:	2300      	movs	r3, #0
 8000598:	2200      	movs	r2, #0
 800059a:	4915      	ldr	r1, [pc, #84]	; (80005f0 <LCD_X_Config+0x7c>)
 800059c:	4815      	ldr	r0, [pc, #84]	; (80005f4 <LCD_X_Config+0x80>)
 800059e:	f002 f819 	bl	80025d4 <GUI_DEVICE_CreateAndLink>
 80005a2:	67f8      	str	r0, [r7, #124]	; 0x7c
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 80005a4:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80005a8:	21f0      	movs	r1, #240	; 0xf0
 80005aa:	2000      	movs	r0, #0
 80005ac:	f001 ff02 	bl	80023b4 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);
 80005b0:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80005b4:	21f0      	movs	r1, #240	; 0xf0
 80005b6:	2000      	movs	r0, #0
 80005b8:	f001 fee4 	bl	8002384 <LCD_SetVSizeEx>
  //
  // Orientation
  //
  Config.Orientation = GUI_SWAP_XY | GUI_MIRROR_Y;
 80005bc:	2306      	movs	r3, #6
 80005be:	673b      	str	r3, [r7, #112]	; 0x70
  GUIDRV_FlexColor_Config(pDevice, &Config);
 80005c0:	f107 0368 	add.w	r3, r7, #104	; 0x68
 80005c4:	4619      	mov	r1, r3
 80005c6:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 80005c8:	f001 fea5 	bl	8002316 <GUIDRV_FlexColor_Config>
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite16_A0  = LcdWriteReg;
 80005cc:	4b0a      	ldr	r3, [pc, #40]	; (80005f8 <LCD_X_Config+0x84>)
 80005ce:	623b      	str	r3, [r7, #32]
  PortAPI.pfWrite16_A1  = LcdWriteData;
 80005d0:	4b0a      	ldr	r3, [pc, #40]	; (80005fc <LCD_X_Config+0x88>)
 80005d2:	627b      	str	r3, [r7, #36]	; 0x24
  PortAPI.pfWriteM16_A1 = LcdWriteDataMultiple;
 80005d4:	4b0a      	ldr	r3, [pc, #40]	; (8000600 <LCD_X_Config+0x8c>)
 80005d6:	62fb      	str	r3, [r7, #44]	; 0x2c
  PortAPI.pfReadM16_A1  = LcdReadDataMultiple;
 80005d8:	4b0a      	ldr	r3, [pc, #40]	; (8000604 <LCD_X_Config+0x90>)
 80005da:	63fb      	str	r3, [r7, #60]	; 0x3c
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66708, GUIDRV_FLEXCOLOR_M16C0B16);
 80005dc:	4639      	mov	r1, r7
 80005de:	4b0a      	ldr	r3, [pc, #40]	; (8000608 <LCD_X_Config+0x94>)
 80005e0:	4a0a      	ldr	r2, [pc, #40]	; (800060c <LCD_X_Config+0x98>)
 80005e2:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 80005e4:	f001 feb5 	bl	8002352 <GUIDRV_FlexColor_SetFunc>
}
 80005e8:	bf00      	nop
 80005ea:	3780      	adds	r7, #128	; 0x80
 80005ec:	46bd      	mov	sp, r7
 80005ee:	bd80      	pop	{r7, pc}
 80005f0:	080067d4 	.word	0x080067d4
 80005f4:	08006798 	.word	0x08006798
 80005f8:	080004ff 	.word	0x080004ff
 80005fc:	08000515 	.word	0x08000515
 8000600:	0800052b 	.word	0x0800052b
 8000604:	0800054f 	.word	0x0800054f
 8000608:	08001d1d 	.word	0x08001d1d
 800060c:	080016a5 	.word	0x080016a5

08000610 <LCD_X_DisplayDriver>:
* Return Value:
*   < -1 - Error
*     -1 - Command not handled
*      0 - Ok
*/
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
 8000610:	b480      	push	{r7}
 8000612:	b087      	sub	sp, #28
 8000614:	af00      	add	r7, sp, #0
 8000616:	60f8      	str	r0, [r7, #12]
 8000618:	60b9      	str	r1, [r7, #8]
 800061a:	607a      	str	r2, [r7, #4]
  int r;
  (void) LayerIndex;
  (void) pData;
  
  switch (Cmd) {
 800061c:	68bb      	ldr	r3, [r7, #8]
 800061e:	2b01      	cmp	r3, #1
 8000620:	d101      	bne.n	8000626 <LCD_X_DisplayDriver+0x16>
    // display controller and put it into operation. If the display
    // controller is not initialized by any external routine this needs
    // to be adapted by the customer...
    //
    // ...
    return 0;
 8000622:	2300      	movs	r3, #0
 8000624:	e003      	b.n	800062e <LCD_X_DisplayDriver+0x1e>
  }
  default:
    r = -1;
 8000626:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800062a:	617b      	str	r3, [r7, #20]
  }
  return r;
 800062c:	697b      	ldr	r3, [r7, #20]
}
 800062e:	4618      	mov	r0, r3
 8000630:	371c      	adds	r7, #28
 8000632:	46bd      	mov	sp, r7
 8000634:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000638:	4770      	bx	lr

0800063a <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800063a:	b580      	push	{r7, lr}
 800063c:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800063e:	f000 f92f 	bl	80008a0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000642:	f000 f805 	bl	8000650 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000646:	f000 f861 	bl	800070c <MX_GPIO_Init>
  /* USER CODE BEGIN 2 */

  /* USER CODE END 2 */
    GUI_Init();
 800064a:	f002 f89f 	bl	800278c <GUI_Init>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 800064e:	e7fe      	b.n	800064e <main+0x14>

08000650 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000650:	b580      	push	{r7, lr}
 8000652:	b094      	sub	sp, #80	; 0x50
 8000654:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000656:	f107 0320 	add.w	r3, r7, #32
 800065a:	2230      	movs	r2, #48	; 0x30
 800065c:	2100      	movs	r1, #0
 800065e:	4618      	mov	r0, r3
 8000660:	f005 fcce 	bl	8006000 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000664:	f107 030c 	add.w	r3, r7, #12
 8000668:	2200      	movs	r2, #0
 800066a:	601a      	str	r2, [r3, #0]
 800066c:	605a      	str	r2, [r3, #4]
 800066e:	609a      	str	r2, [r3, #8]
 8000670:	60da      	str	r2, [r3, #12]
 8000672:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000674:	2300      	movs	r3, #0
 8000676:	60bb      	str	r3, [r7, #8]
 8000678:	4b22      	ldr	r3, [pc, #136]	; (8000704 <SystemClock_Config+0xb4>)
 800067a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800067c:	4a21      	ldr	r2, [pc, #132]	; (8000704 <SystemClock_Config+0xb4>)
 800067e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000682:	6413      	str	r3, [r2, #64]	; 0x40
 8000684:	4b1f      	ldr	r3, [pc, #124]	; (8000704 <SystemClock_Config+0xb4>)
 8000686:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000688:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800068c:	60bb      	str	r3, [r7, #8]
 800068e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000690:	2300      	movs	r3, #0
 8000692:	607b      	str	r3, [r7, #4]
 8000694:	4b1c      	ldr	r3, [pc, #112]	; (8000708 <SystemClock_Config+0xb8>)
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	4a1b      	ldr	r2, [pc, #108]	; (8000708 <SystemClock_Config+0xb8>)
 800069a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800069e:	6013      	str	r3, [r2, #0]
 80006a0:	4b19      	ldr	r3, [pc, #100]	; (8000708 <SystemClock_Config+0xb8>)
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80006a8:	607b      	str	r3, [r7, #4]
 80006aa:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80006ac:	2302      	movs	r3, #2
 80006ae:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80006b0:	2301      	movs	r3, #1
 80006b2:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80006b4:	2310      	movs	r3, #16
 80006b6:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80006b8:	2300      	movs	r3, #0
 80006ba:	63bb      	str	r3, [r7, #56]	; 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80006bc:	f107 0320 	add.w	r3, r7, #32
 80006c0:	4618      	mov	r0, r3
 80006c2:	f000 fa45 	bl	8000b50 <HAL_RCC_OscConfig>
 80006c6:	4603      	mov	r3, r0
 80006c8:	2b00      	cmp	r3, #0
 80006ca:	d001      	beq.n	80006d0 <SystemClock_Config+0x80>
  {
    Error_Handler();
 80006cc:	f000 f854 	bl	8000778 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80006d0:	230f      	movs	r3, #15
 80006d2:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80006d4:	2300      	movs	r3, #0
 80006d6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80006d8:	2300      	movs	r3, #0
 80006da:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80006dc:	2300      	movs	r3, #0
 80006de:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80006e0:	2300      	movs	r3, #0
 80006e2:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80006e4:	f107 030c 	add.w	r3, r7, #12
 80006e8:	2100      	movs	r1, #0
 80006ea:	4618      	mov	r0, r3
 80006ec:	f000 fca8 	bl	8001040 <HAL_RCC_ClockConfig>
 80006f0:	4603      	mov	r3, r0
 80006f2:	2b00      	cmp	r3, #0
 80006f4:	d001      	beq.n	80006fa <SystemClock_Config+0xaa>
  {
    Error_Handler();
 80006f6:	f000 f83f 	bl	8000778 <Error_Handler>
  }
}
 80006fa:	bf00      	nop
 80006fc:	3750      	adds	r7, #80	; 0x50
 80006fe:	46bd      	mov	sp, r7
 8000700:	bd80      	pop	{r7, pc}
 8000702:	bf00      	nop
 8000704:	40023800 	.word	0x40023800
 8000708:	40007000 	.word	0x40007000

0800070c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800070c:	b480      	push	{r7}
 800070e:	b085      	sub	sp, #20
 8000710:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000712:	2300      	movs	r3, #0
 8000714:	60fb      	str	r3, [r7, #12]
 8000716:	4b17      	ldr	r3, [pc, #92]	; (8000774 <MX_GPIO_Init+0x68>)
 8000718:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800071a:	4a16      	ldr	r2, [pc, #88]	; (8000774 <MX_GPIO_Init+0x68>)
 800071c:	f043 0304 	orr.w	r3, r3, #4
 8000720:	6313      	str	r3, [r2, #48]	; 0x30
 8000722:	4b14      	ldr	r3, [pc, #80]	; (8000774 <MX_GPIO_Init+0x68>)
 8000724:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000726:	f003 0304 	and.w	r3, r3, #4
 800072a:	60fb      	str	r3, [r7, #12]
 800072c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800072e:	2300      	movs	r3, #0
 8000730:	60bb      	str	r3, [r7, #8]
 8000732:	4b10      	ldr	r3, [pc, #64]	; (8000774 <MX_GPIO_Init+0x68>)
 8000734:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000736:	4a0f      	ldr	r2, [pc, #60]	; (8000774 <MX_GPIO_Init+0x68>)
 8000738:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800073c:	6313      	str	r3, [r2, #48]	; 0x30
 800073e:	4b0d      	ldr	r3, [pc, #52]	; (8000774 <MX_GPIO_Init+0x68>)
 8000740:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000742:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000746:	60bb      	str	r3, [r7, #8]
 8000748:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800074a:	2300      	movs	r3, #0
 800074c:	607b      	str	r3, [r7, #4]
 800074e:	4b09      	ldr	r3, [pc, #36]	; (8000774 <MX_GPIO_Init+0x68>)
 8000750:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000752:	4a08      	ldr	r2, [pc, #32]	; (8000774 <MX_GPIO_Init+0x68>)
 8000754:	f043 0301 	orr.w	r3, r3, #1
 8000758:	6313      	str	r3, [r2, #48]	; 0x30
 800075a:	4b06      	ldr	r3, [pc, #24]	; (8000774 <MX_GPIO_Init+0x68>)
 800075c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800075e:	f003 0301 	and.w	r3, r3, #1
 8000762:	607b      	str	r3, [r7, #4]
 8000764:	687b      	ldr	r3, [r7, #4]

}
 8000766:	bf00      	nop
 8000768:	3714      	adds	r7, #20
 800076a:	46bd      	mov	sp, r7
 800076c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000770:	4770      	bx	lr
 8000772:	bf00      	nop
 8000774:	40023800 	.word	0x40023800

08000778 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000778:	b480      	push	{r7}
 800077a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800077c:	b672      	cpsid	i
}
 800077e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000780:	e7fe      	b.n	8000780 <Error_Handler+0x8>
	...

08000784 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000784:	b480      	push	{r7}
 8000786:	b083      	sub	sp, #12
 8000788:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800078a:	2300      	movs	r3, #0
 800078c:	607b      	str	r3, [r7, #4]
 800078e:	4b10      	ldr	r3, [pc, #64]	; (80007d0 <HAL_MspInit+0x4c>)
 8000790:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000792:	4a0f      	ldr	r2, [pc, #60]	; (80007d0 <HAL_MspInit+0x4c>)
 8000794:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000798:	6453      	str	r3, [r2, #68]	; 0x44
 800079a:	4b0d      	ldr	r3, [pc, #52]	; (80007d0 <HAL_MspInit+0x4c>)
 800079c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800079e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80007a2:	607b      	str	r3, [r7, #4]
 80007a4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80007a6:	2300      	movs	r3, #0
 80007a8:	603b      	str	r3, [r7, #0]
 80007aa:	4b09      	ldr	r3, [pc, #36]	; (80007d0 <HAL_MspInit+0x4c>)
 80007ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80007ae:	4a08      	ldr	r2, [pc, #32]	; (80007d0 <HAL_MspInit+0x4c>)
 80007b0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80007b4:	6413      	str	r3, [r2, #64]	; 0x40
 80007b6:	4b06      	ldr	r3, [pc, #24]	; (80007d0 <HAL_MspInit+0x4c>)
 80007b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80007ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80007be:	603b      	str	r3, [r7, #0]
 80007c0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80007c2:	bf00      	nop
 80007c4:	370c      	adds	r7, #12
 80007c6:	46bd      	mov	sp, r7
 80007c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007cc:	4770      	bx	lr
 80007ce:	bf00      	nop
 80007d0:	40023800 	.word	0x40023800

080007d4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80007d4:	b480      	push	{r7}
 80007d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80007d8:	e7fe      	b.n	80007d8 <NMI_Handler+0x4>

080007da <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80007da:	b480      	push	{r7}
 80007dc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80007de:	e7fe      	b.n	80007de <HardFault_Handler+0x4>

080007e0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80007e0:	b480      	push	{r7}
 80007e2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80007e4:	e7fe      	b.n	80007e4 <MemManage_Handler+0x4>

080007e6 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80007e6:	b480      	push	{r7}
 80007e8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80007ea:	e7fe      	b.n	80007ea <BusFault_Handler+0x4>

080007ec <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80007ec:	b480      	push	{r7}
 80007ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80007f0:	e7fe      	b.n	80007f0 <UsageFault_Handler+0x4>

080007f2 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80007f2:	b480      	push	{r7}
 80007f4:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80007f6:	bf00      	nop
 80007f8:	46bd      	mov	sp, r7
 80007fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007fe:	4770      	bx	lr

08000800 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000800:	b480      	push	{r7}
 8000802:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000804:	bf00      	nop
 8000806:	46bd      	mov	sp, r7
 8000808:	f85d 7b04 	ldr.w	r7, [sp], #4
 800080c:	4770      	bx	lr

0800080e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800080e:	b480      	push	{r7}
 8000810:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000812:	bf00      	nop
 8000814:	46bd      	mov	sp, r7
 8000816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800081a:	4770      	bx	lr

0800081c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800081c:	b580      	push	{r7, lr}
 800081e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000820:	f000 f890 	bl	8000944 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000824:	bf00      	nop
 8000826:	bd80      	pop	{r7, pc}

08000828 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000828:	b480      	push	{r7}
 800082a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800082c:	4b06      	ldr	r3, [pc, #24]	; (8000848 <SystemInit+0x20>)
 800082e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000832:	4a05      	ldr	r2, [pc, #20]	; (8000848 <SystemInit+0x20>)
 8000834:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000838:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800083c:	bf00      	nop
 800083e:	46bd      	mov	sp, r7
 8000840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000844:	4770      	bx	lr
 8000846:	bf00      	nop
 8000848:	e000ed00 	.word	0xe000ed00

0800084c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 800084c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000884 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000850:	480d      	ldr	r0, [pc, #52]	; (8000888 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000852:	490e      	ldr	r1, [pc, #56]	; (800088c <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000854:	4a0e      	ldr	r2, [pc, #56]	; (8000890 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000856:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000858:	e002      	b.n	8000860 <LoopCopyDataInit>

0800085a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800085a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800085c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800085e:	3304      	adds	r3, #4

08000860 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000860:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000862:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000864:	d3f9      	bcc.n	800085a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000866:	4a0b      	ldr	r2, [pc, #44]	; (8000894 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000868:	4c0b      	ldr	r4, [pc, #44]	; (8000898 <LoopFillZerobss+0x26>)
  movs r3, #0
 800086a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800086c:	e001      	b.n	8000872 <LoopFillZerobss>

0800086e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800086e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000870:	3204      	adds	r2, #4

08000872 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000872:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000874:	d3fb      	bcc.n	800086e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000876:	f7ff ffd7 	bl	8000828 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800087a:	f005 fb75 	bl	8005f68 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800087e:	f7ff fedc 	bl	800063a <main>
  bx  lr    
 8000882:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8000884:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000888:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800088c:	2000001c 	.word	0x2000001c
  ldr r2, =_sidata
 8000890:	08006c04 	.word	0x08006c04
  ldr r2, =_sbss
 8000894:	2000001c 	.word	0x2000001c
  ldr r4, =_ebss
 8000898:	200082a4 	.word	0x200082a4

0800089c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800089c:	e7fe      	b.n	800089c <ADC_IRQHandler>
	...

080008a0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80008a0:	b580      	push	{r7, lr}
 80008a2:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80008a4:	4b0e      	ldr	r3, [pc, #56]	; (80008e0 <HAL_Init+0x40>)
 80008a6:	681b      	ldr	r3, [r3, #0]
 80008a8:	4a0d      	ldr	r2, [pc, #52]	; (80008e0 <HAL_Init+0x40>)
 80008aa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80008ae:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80008b0:	4b0b      	ldr	r3, [pc, #44]	; (80008e0 <HAL_Init+0x40>)
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	4a0a      	ldr	r2, [pc, #40]	; (80008e0 <HAL_Init+0x40>)
 80008b6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80008ba:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80008bc:	4b08      	ldr	r3, [pc, #32]	; (80008e0 <HAL_Init+0x40>)
 80008be:	681b      	ldr	r3, [r3, #0]
 80008c0:	4a07      	ldr	r2, [pc, #28]	; (80008e0 <HAL_Init+0x40>)
 80008c2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80008c6:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80008c8:	2003      	movs	r0, #3
 80008ca:	f000 f90d 	bl	8000ae8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80008ce:	2000      	movs	r0, #0
 80008d0:	f000 f808 	bl	80008e4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80008d4:	f7ff ff56 	bl	8000784 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80008d8:	2300      	movs	r3, #0
}
 80008da:	4618      	mov	r0, r3
 80008dc:	bd80      	pop	{r7, pc}
 80008de:	bf00      	nop
 80008e0:	40023c00 	.word	0x40023c00

080008e4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80008e4:	b580      	push	{r7, lr}
 80008e6:	b082      	sub	sp, #8
 80008e8:	af00      	add	r7, sp, #0
 80008ea:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80008ec:	4b12      	ldr	r3, [pc, #72]	; (8000938 <HAL_InitTick+0x54>)
 80008ee:	681a      	ldr	r2, [r3, #0]
 80008f0:	4b12      	ldr	r3, [pc, #72]	; (800093c <HAL_InitTick+0x58>)
 80008f2:	781b      	ldrb	r3, [r3, #0]
 80008f4:	4619      	mov	r1, r3
 80008f6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80008fa:	fbb3 f3f1 	udiv	r3, r3, r1
 80008fe:	fbb2 f3f3 	udiv	r3, r2, r3
 8000902:	4618      	mov	r0, r3
 8000904:	f000 f917 	bl	8000b36 <HAL_SYSTICK_Config>
 8000908:	4603      	mov	r3, r0
 800090a:	2b00      	cmp	r3, #0
 800090c:	d001      	beq.n	8000912 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800090e:	2301      	movs	r3, #1
 8000910:	e00e      	b.n	8000930 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000912:	687b      	ldr	r3, [r7, #4]
 8000914:	2b0f      	cmp	r3, #15
 8000916:	d80a      	bhi.n	800092e <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8000918:	2200      	movs	r2, #0
 800091a:	6879      	ldr	r1, [r7, #4]
 800091c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000920:	f000 f8ed 	bl	8000afe <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8000924:	4a06      	ldr	r2, [pc, #24]	; (8000940 <HAL_InitTick+0x5c>)
 8000926:	687b      	ldr	r3, [r7, #4]
 8000928:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800092a:	2300      	movs	r3, #0
 800092c:	e000      	b.n	8000930 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800092e:	2301      	movs	r3, #1
}
 8000930:	4618      	mov	r0, r3
 8000932:	3708      	adds	r7, #8
 8000934:	46bd      	mov	sp, r7
 8000936:	bd80      	pop	{r7, pc}
 8000938:	20000000 	.word	0x20000000
 800093c:	20000008 	.word	0x20000008
 8000940:	20000004 	.word	0x20000004

08000944 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8000944:	b480      	push	{r7}
 8000946:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8000948:	4b06      	ldr	r3, [pc, #24]	; (8000964 <HAL_IncTick+0x20>)
 800094a:	781b      	ldrb	r3, [r3, #0]
 800094c:	461a      	mov	r2, r3
 800094e:	4b06      	ldr	r3, [pc, #24]	; (8000968 <HAL_IncTick+0x24>)
 8000950:	681b      	ldr	r3, [r3, #0]
 8000952:	4413      	add	r3, r2
 8000954:	4a04      	ldr	r2, [pc, #16]	; (8000968 <HAL_IncTick+0x24>)
 8000956:	6013      	str	r3, [r2, #0]
}
 8000958:	bf00      	nop
 800095a:	46bd      	mov	sp, r7
 800095c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000960:	4770      	bx	lr
 8000962:	bf00      	nop
 8000964:	20000008 	.word	0x20000008
 8000968:	20008118 	.word	0x20008118

0800096c <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 800096c:	b480      	push	{r7}
 800096e:	af00      	add	r7, sp, #0
  return uwTick;
 8000970:	4b03      	ldr	r3, [pc, #12]	; (8000980 <HAL_GetTick+0x14>)
 8000972:	681b      	ldr	r3, [r3, #0]
}
 8000974:	4618      	mov	r0, r3
 8000976:	46bd      	mov	sp, r7
 8000978:	f85d 7b04 	ldr.w	r7, [sp], #4
 800097c:	4770      	bx	lr
 800097e:	bf00      	nop
 8000980:	20008118 	.word	0x20008118

08000984 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8000984:	b480      	push	{r7}
 8000986:	b085      	sub	sp, #20
 8000988:	af00      	add	r7, sp, #0
 800098a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800098c:	687b      	ldr	r3, [r7, #4]
 800098e:	f003 0307 	and.w	r3, r3, #7
 8000992:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8000994:	4b0c      	ldr	r3, [pc, #48]	; (80009c8 <__NVIC_SetPriorityGrouping+0x44>)
 8000996:	68db      	ldr	r3, [r3, #12]
 8000998:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800099a:	68ba      	ldr	r2, [r7, #8]
 800099c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80009a0:	4013      	ands	r3, r2
 80009a2:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80009a4:	68fb      	ldr	r3, [r7, #12]
 80009a6:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80009a8:	68bb      	ldr	r3, [r7, #8]
 80009aa:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80009ac:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80009b0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80009b4:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80009b6:	4a04      	ldr	r2, [pc, #16]	; (80009c8 <__NVIC_SetPriorityGrouping+0x44>)
 80009b8:	68bb      	ldr	r3, [r7, #8]
 80009ba:	60d3      	str	r3, [r2, #12]
}
 80009bc:	bf00      	nop
 80009be:	3714      	adds	r7, #20
 80009c0:	46bd      	mov	sp, r7
 80009c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009c6:	4770      	bx	lr
 80009c8:	e000ed00 	.word	0xe000ed00

080009cc <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80009cc:	b480      	push	{r7}
 80009ce:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80009d0:	4b04      	ldr	r3, [pc, #16]	; (80009e4 <__NVIC_GetPriorityGrouping+0x18>)
 80009d2:	68db      	ldr	r3, [r3, #12]
 80009d4:	0a1b      	lsrs	r3, r3, #8
 80009d6:	f003 0307 	and.w	r3, r3, #7
}
 80009da:	4618      	mov	r0, r3
 80009dc:	46bd      	mov	sp, r7
 80009de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009e2:	4770      	bx	lr
 80009e4:	e000ed00 	.word	0xe000ed00

080009e8 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80009e8:	b480      	push	{r7}
 80009ea:	b083      	sub	sp, #12
 80009ec:	af00      	add	r7, sp, #0
 80009ee:	4603      	mov	r3, r0
 80009f0:	6039      	str	r1, [r7, #0]
 80009f2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80009f4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	db0a      	blt.n	8000a12 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80009fc:	683b      	ldr	r3, [r7, #0]
 80009fe:	b2da      	uxtb	r2, r3
 8000a00:	490c      	ldr	r1, [pc, #48]	; (8000a34 <__NVIC_SetPriority+0x4c>)
 8000a02:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000a06:	0112      	lsls	r2, r2, #4
 8000a08:	b2d2      	uxtb	r2, r2
 8000a0a:	440b      	add	r3, r1
 8000a0c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000a10:	e00a      	b.n	8000a28 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000a12:	683b      	ldr	r3, [r7, #0]
 8000a14:	b2da      	uxtb	r2, r3
 8000a16:	4908      	ldr	r1, [pc, #32]	; (8000a38 <__NVIC_SetPriority+0x50>)
 8000a18:	79fb      	ldrb	r3, [r7, #7]
 8000a1a:	f003 030f 	and.w	r3, r3, #15
 8000a1e:	3b04      	subs	r3, #4
 8000a20:	0112      	lsls	r2, r2, #4
 8000a22:	b2d2      	uxtb	r2, r2
 8000a24:	440b      	add	r3, r1
 8000a26:	761a      	strb	r2, [r3, #24]
}
 8000a28:	bf00      	nop
 8000a2a:	370c      	adds	r7, #12
 8000a2c:	46bd      	mov	sp, r7
 8000a2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a32:	4770      	bx	lr
 8000a34:	e000e100 	.word	0xe000e100
 8000a38:	e000ed00 	.word	0xe000ed00

08000a3c <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8000a3c:	b480      	push	{r7}
 8000a3e:	b089      	sub	sp, #36	; 0x24
 8000a40:	af00      	add	r7, sp, #0
 8000a42:	60f8      	str	r0, [r7, #12]
 8000a44:	60b9      	str	r1, [r7, #8]
 8000a46:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8000a48:	68fb      	ldr	r3, [r7, #12]
 8000a4a:	f003 0307 	and.w	r3, r3, #7
 8000a4e:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8000a50:	69fb      	ldr	r3, [r7, #28]
 8000a52:	f1c3 0307 	rsb	r3, r3, #7
 8000a56:	2b04      	cmp	r3, #4
 8000a58:	bf28      	it	cs
 8000a5a:	2304      	movcs	r3, #4
 8000a5c:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8000a5e:	69fb      	ldr	r3, [r7, #28]
 8000a60:	3304      	adds	r3, #4
 8000a62:	2b06      	cmp	r3, #6
 8000a64:	d902      	bls.n	8000a6c <NVIC_EncodePriority+0x30>
 8000a66:	69fb      	ldr	r3, [r7, #28]
 8000a68:	3b03      	subs	r3, #3
 8000a6a:	e000      	b.n	8000a6e <NVIC_EncodePriority+0x32>
 8000a6c:	2300      	movs	r3, #0
 8000a6e:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000a70:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000a74:	69bb      	ldr	r3, [r7, #24]
 8000a76:	fa02 f303 	lsl.w	r3, r2, r3
 8000a7a:	43da      	mvns	r2, r3
 8000a7c:	68bb      	ldr	r3, [r7, #8]
 8000a7e:	401a      	ands	r2, r3
 8000a80:	697b      	ldr	r3, [r7, #20]
 8000a82:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8000a84:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8000a88:	697b      	ldr	r3, [r7, #20]
 8000a8a:	fa01 f303 	lsl.w	r3, r1, r3
 8000a8e:	43d9      	mvns	r1, r3
 8000a90:	687b      	ldr	r3, [r7, #4]
 8000a92:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000a94:	4313      	orrs	r3, r2
         );
}
 8000a96:	4618      	mov	r0, r3
 8000a98:	3724      	adds	r7, #36	; 0x24
 8000a9a:	46bd      	mov	sp, r7
 8000a9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000aa0:	4770      	bx	lr
	...

08000aa4 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8000aa4:	b580      	push	{r7, lr}
 8000aa6:	b082      	sub	sp, #8
 8000aa8:	af00      	add	r7, sp, #0
 8000aaa:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8000aac:	687b      	ldr	r3, [r7, #4]
 8000aae:	3b01      	subs	r3, #1
 8000ab0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000ab4:	d301      	bcc.n	8000aba <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8000ab6:	2301      	movs	r3, #1
 8000ab8:	e00f      	b.n	8000ada <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000aba:	4a0a      	ldr	r2, [pc, #40]	; (8000ae4 <SysTick_Config+0x40>)
 8000abc:	687b      	ldr	r3, [r7, #4]
 8000abe:	3b01      	subs	r3, #1
 8000ac0:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8000ac2:	210f      	movs	r1, #15
 8000ac4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ac8:	f7ff ff8e 	bl	80009e8 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000acc:	4b05      	ldr	r3, [pc, #20]	; (8000ae4 <SysTick_Config+0x40>)
 8000ace:	2200      	movs	r2, #0
 8000ad0:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000ad2:	4b04      	ldr	r3, [pc, #16]	; (8000ae4 <SysTick_Config+0x40>)
 8000ad4:	2207      	movs	r2, #7
 8000ad6:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8000ad8:	2300      	movs	r3, #0
}
 8000ada:	4618      	mov	r0, r3
 8000adc:	3708      	adds	r7, #8
 8000ade:	46bd      	mov	sp, r7
 8000ae0:	bd80      	pop	{r7, pc}
 8000ae2:	bf00      	nop
 8000ae4:	e000e010 	.word	0xe000e010

08000ae8 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8000ae8:	b580      	push	{r7, lr}
 8000aea:	b082      	sub	sp, #8
 8000aec:	af00      	add	r7, sp, #0
 8000aee:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8000af0:	6878      	ldr	r0, [r7, #4]
 8000af2:	f7ff ff47 	bl	8000984 <__NVIC_SetPriorityGrouping>
}
 8000af6:	bf00      	nop
 8000af8:	3708      	adds	r7, #8
 8000afa:	46bd      	mov	sp, r7
 8000afc:	bd80      	pop	{r7, pc}

08000afe <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8000afe:	b580      	push	{r7, lr}
 8000b00:	b086      	sub	sp, #24
 8000b02:	af00      	add	r7, sp, #0
 8000b04:	4603      	mov	r3, r0
 8000b06:	60b9      	str	r1, [r7, #8]
 8000b08:	607a      	str	r2, [r7, #4]
 8000b0a:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8000b0c:	2300      	movs	r3, #0
 8000b0e:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8000b10:	f7ff ff5c 	bl	80009cc <__NVIC_GetPriorityGrouping>
 8000b14:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8000b16:	687a      	ldr	r2, [r7, #4]
 8000b18:	68b9      	ldr	r1, [r7, #8]
 8000b1a:	6978      	ldr	r0, [r7, #20]
 8000b1c:	f7ff ff8e 	bl	8000a3c <NVIC_EncodePriority>
 8000b20:	4602      	mov	r2, r0
 8000b22:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000b26:	4611      	mov	r1, r2
 8000b28:	4618      	mov	r0, r3
 8000b2a:	f7ff ff5d 	bl	80009e8 <__NVIC_SetPriority>
}
 8000b2e:	bf00      	nop
 8000b30:	3718      	adds	r7, #24
 8000b32:	46bd      	mov	sp, r7
 8000b34:	bd80      	pop	{r7, pc}

08000b36 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8000b36:	b580      	push	{r7, lr}
 8000b38:	b082      	sub	sp, #8
 8000b3a:	af00      	add	r7, sp, #0
 8000b3c:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8000b3e:	6878      	ldr	r0, [r7, #4]
 8000b40:	f7ff ffb0 	bl	8000aa4 <SysTick_Config>
 8000b44:	4603      	mov	r3, r0
}
 8000b46:	4618      	mov	r0, r3
 8000b48:	3708      	adds	r7, #8
 8000b4a:	46bd      	mov	sp, r7
 8000b4c:	bd80      	pop	{r7, pc}
	...

08000b50 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8000b50:	b580      	push	{r7, lr}
 8000b52:	b086      	sub	sp, #24
 8000b54:	af00      	add	r7, sp, #0
 8000b56:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8000b58:	687b      	ldr	r3, [r7, #4]
 8000b5a:	2b00      	cmp	r3, #0
 8000b5c:	d101      	bne.n	8000b62 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8000b5e:	2301      	movs	r3, #1
 8000b60:	e264      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8000b62:	687b      	ldr	r3, [r7, #4]
 8000b64:	681b      	ldr	r3, [r3, #0]
 8000b66:	f003 0301 	and.w	r3, r3, #1
 8000b6a:	2b00      	cmp	r3, #0
 8000b6c:	d075      	beq.n	8000c5a <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8000b6e:	4ba3      	ldr	r3, [pc, #652]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000b70:	689b      	ldr	r3, [r3, #8]
 8000b72:	f003 030c 	and.w	r3, r3, #12
 8000b76:	2b04      	cmp	r3, #4
 8000b78:	d00c      	beq.n	8000b94 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8000b7a:	4ba0      	ldr	r3, [pc, #640]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000b7c:	689b      	ldr	r3, [r3, #8]
 8000b7e:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8000b82:	2b08      	cmp	r3, #8
 8000b84:	d112      	bne.n	8000bac <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8000b86:	4b9d      	ldr	r3, [pc, #628]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000b88:	685b      	ldr	r3, [r3, #4]
 8000b8a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8000b8e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8000b92:	d10b      	bne.n	8000bac <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8000b94:	4b99      	ldr	r3, [pc, #612]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000b96:	681b      	ldr	r3, [r3, #0]
 8000b98:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000b9c:	2b00      	cmp	r3, #0
 8000b9e:	d05b      	beq.n	8000c58 <HAL_RCC_OscConfig+0x108>
 8000ba0:	687b      	ldr	r3, [r7, #4]
 8000ba2:	685b      	ldr	r3, [r3, #4]
 8000ba4:	2b00      	cmp	r3, #0
 8000ba6:	d157      	bne.n	8000c58 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8000ba8:	2301      	movs	r3, #1
 8000baa:	e23f      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8000bac:	687b      	ldr	r3, [r7, #4]
 8000bae:	685b      	ldr	r3, [r3, #4]
 8000bb0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8000bb4:	d106      	bne.n	8000bc4 <HAL_RCC_OscConfig+0x74>
 8000bb6:	4b91      	ldr	r3, [pc, #580]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000bb8:	681b      	ldr	r3, [r3, #0]
 8000bba:	4a90      	ldr	r2, [pc, #576]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000bbc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000bc0:	6013      	str	r3, [r2, #0]
 8000bc2:	e01d      	b.n	8000c00 <HAL_RCC_OscConfig+0xb0>
 8000bc4:	687b      	ldr	r3, [r7, #4]
 8000bc6:	685b      	ldr	r3, [r3, #4]
 8000bc8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8000bcc:	d10c      	bne.n	8000be8 <HAL_RCC_OscConfig+0x98>
 8000bce:	4b8b      	ldr	r3, [pc, #556]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000bd0:	681b      	ldr	r3, [r3, #0]
 8000bd2:	4a8a      	ldr	r2, [pc, #552]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000bd4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000bd8:	6013      	str	r3, [r2, #0]
 8000bda:	4b88      	ldr	r3, [pc, #544]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000bdc:	681b      	ldr	r3, [r3, #0]
 8000bde:	4a87      	ldr	r2, [pc, #540]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000be0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000be4:	6013      	str	r3, [r2, #0]
 8000be6:	e00b      	b.n	8000c00 <HAL_RCC_OscConfig+0xb0>
 8000be8:	4b84      	ldr	r3, [pc, #528]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000bea:	681b      	ldr	r3, [r3, #0]
 8000bec:	4a83      	ldr	r2, [pc, #524]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000bee:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000bf2:	6013      	str	r3, [r2, #0]
 8000bf4:	4b81      	ldr	r3, [pc, #516]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000bf6:	681b      	ldr	r3, [r3, #0]
 8000bf8:	4a80      	ldr	r2, [pc, #512]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000bfa:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000bfe:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8000c00:	687b      	ldr	r3, [r7, #4]
 8000c02:	685b      	ldr	r3, [r3, #4]
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	d013      	beq.n	8000c30 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8000c08:	f7ff feb0 	bl	800096c <HAL_GetTick>
 8000c0c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8000c0e:	e008      	b.n	8000c22 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8000c10:	f7ff feac 	bl	800096c <HAL_GetTick>
 8000c14:	4602      	mov	r2, r0
 8000c16:	693b      	ldr	r3, [r7, #16]
 8000c18:	1ad3      	subs	r3, r2, r3
 8000c1a:	2b64      	cmp	r3, #100	; 0x64
 8000c1c:	d901      	bls.n	8000c22 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8000c1e:	2303      	movs	r3, #3
 8000c20:	e204      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8000c22:	4b76      	ldr	r3, [pc, #472]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000c24:	681b      	ldr	r3, [r3, #0]
 8000c26:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000c2a:	2b00      	cmp	r3, #0
 8000c2c:	d0f0      	beq.n	8000c10 <HAL_RCC_OscConfig+0xc0>
 8000c2e:	e014      	b.n	8000c5a <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8000c30:	f7ff fe9c 	bl	800096c <HAL_GetTick>
 8000c34:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8000c36:	e008      	b.n	8000c4a <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8000c38:	f7ff fe98 	bl	800096c <HAL_GetTick>
 8000c3c:	4602      	mov	r2, r0
 8000c3e:	693b      	ldr	r3, [r7, #16]
 8000c40:	1ad3      	subs	r3, r2, r3
 8000c42:	2b64      	cmp	r3, #100	; 0x64
 8000c44:	d901      	bls.n	8000c4a <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8000c46:	2303      	movs	r3, #3
 8000c48:	e1f0      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8000c4a:	4b6c      	ldr	r3, [pc, #432]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000c4c:	681b      	ldr	r3, [r3, #0]
 8000c4e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000c52:	2b00      	cmp	r3, #0
 8000c54:	d1f0      	bne.n	8000c38 <HAL_RCC_OscConfig+0xe8>
 8000c56:	e000      	b.n	8000c5a <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8000c58:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	681b      	ldr	r3, [r3, #0]
 8000c5e:	f003 0302 	and.w	r3, r3, #2
 8000c62:	2b00      	cmp	r3, #0
 8000c64:	d063      	beq.n	8000d2e <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8000c66:	4b65      	ldr	r3, [pc, #404]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000c68:	689b      	ldr	r3, [r3, #8]
 8000c6a:	f003 030c 	and.w	r3, r3, #12
 8000c6e:	2b00      	cmp	r3, #0
 8000c70:	d00b      	beq.n	8000c8a <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8000c72:	4b62      	ldr	r3, [pc, #392]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000c74:	689b      	ldr	r3, [r3, #8]
 8000c76:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8000c7a:	2b08      	cmp	r3, #8
 8000c7c:	d11c      	bne.n	8000cb8 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8000c7e:	4b5f      	ldr	r3, [pc, #380]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000c80:	685b      	ldr	r3, [r3, #4]
 8000c82:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8000c86:	2b00      	cmp	r3, #0
 8000c88:	d116      	bne.n	8000cb8 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8000c8a:	4b5c      	ldr	r3, [pc, #368]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000c8c:	681b      	ldr	r3, [r3, #0]
 8000c8e:	f003 0302 	and.w	r3, r3, #2
 8000c92:	2b00      	cmp	r3, #0
 8000c94:	d005      	beq.n	8000ca2 <HAL_RCC_OscConfig+0x152>
 8000c96:	687b      	ldr	r3, [r7, #4]
 8000c98:	68db      	ldr	r3, [r3, #12]
 8000c9a:	2b01      	cmp	r3, #1
 8000c9c:	d001      	beq.n	8000ca2 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8000c9e:	2301      	movs	r3, #1
 8000ca0:	e1c4      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8000ca2:	4b56      	ldr	r3, [pc, #344]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000ca4:	681b      	ldr	r3, [r3, #0]
 8000ca6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8000caa:	687b      	ldr	r3, [r7, #4]
 8000cac:	691b      	ldr	r3, [r3, #16]
 8000cae:	00db      	lsls	r3, r3, #3
 8000cb0:	4952      	ldr	r1, [pc, #328]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000cb2:	4313      	orrs	r3, r2
 8000cb4:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8000cb6:	e03a      	b.n	8000d2e <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8000cb8:	687b      	ldr	r3, [r7, #4]
 8000cba:	68db      	ldr	r3, [r3, #12]
 8000cbc:	2b00      	cmp	r3, #0
 8000cbe:	d020      	beq.n	8000d02 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8000cc0:	4b4f      	ldr	r3, [pc, #316]	; (8000e00 <HAL_RCC_OscConfig+0x2b0>)
 8000cc2:	2201      	movs	r2, #1
 8000cc4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8000cc6:	f7ff fe51 	bl	800096c <HAL_GetTick>
 8000cca:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8000ccc:	e008      	b.n	8000ce0 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8000cce:	f7ff fe4d 	bl	800096c <HAL_GetTick>
 8000cd2:	4602      	mov	r2, r0
 8000cd4:	693b      	ldr	r3, [r7, #16]
 8000cd6:	1ad3      	subs	r3, r2, r3
 8000cd8:	2b02      	cmp	r3, #2
 8000cda:	d901      	bls.n	8000ce0 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8000cdc:	2303      	movs	r3, #3
 8000cde:	e1a5      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8000ce0:	4b46      	ldr	r3, [pc, #280]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000ce2:	681b      	ldr	r3, [r3, #0]
 8000ce4:	f003 0302 	and.w	r3, r3, #2
 8000ce8:	2b00      	cmp	r3, #0
 8000cea:	d0f0      	beq.n	8000cce <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8000cec:	4b43      	ldr	r3, [pc, #268]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000cee:	681b      	ldr	r3, [r3, #0]
 8000cf0:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	691b      	ldr	r3, [r3, #16]
 8000cf8:	00db      	lsls	r3, r3, #3
 8000cfa:	4940      	ldr	r1, [pc, #256]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000cfc:	4313      	orrs	r3, r2
 8000cfe:	600b      	str	r3, [r1, #0]
 8000d00:	e015      	b.n	8000d2e <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8000d02:	4b3f      	ldr	r3, [pc, #252]	; (8000e00 <HAL_RCC_OscConfig+0x2b0>)
 8000d04:	2200      	movs	r2, #0
 8000d06:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8000d08:	f7ff fe30 	bl	800096c <HAL_GetTick>
 8000d0c:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8000d0e:	e008      	b.n	8000d22 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8000d10:	f7ff fe2c 	bl	800096c <HAL_GetTick>
 8000d14:	4602      	mov	r2, r0
 8000d16:	693b      	ldr	r3, [r7, #16]
 8000d18:	1ad3      	subs	r3, r2, r3
 8000d1a:	2b02      	cmp	r3, #2
 8000d1c:	d901      	bls.n	8000d22 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8000d1e:	2303      	movs	r3, #3
 8000d20:	e184      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8000d22:	4b36      	ldr	r3, [pc, #216]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000d24:	681b      	ldr	r3, [r3, #0]
 8000d26:	f003 0302 	and.w	r3, r3, #2
 8000d2a:	2b00      	cmp	r3, #0
 8000d2c:	d1f0      	bne.n	8000d10 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8000d2e:	687b      	ldr	r3, [r7, #4]
 8000d30:	681b      	ldr	r3, [r3, #0]
 8000d32:	f003 0308 	and.w	r3, r3, #8
 8000d36:	2b00      	cmp	r3, #0
 8000d38:	d030      	beq.n	8000d9c <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8000d3a:	687b      	ldr	r3, [r7, #4]
 8000d3c:	695b      	ldr	r3, [r3, #20]
 8000d3e:	2b00      	cmp	r3, #0
 8000d40:	d016      	beq.n	8000d70 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8000d42:	4b30      	ldr	r3, [pc, #192]	; (8000e04 <HAL_RCC_OscConfig+0x2b4>)
 8000d44:	2201      	movs	r2, #1
 8000d46:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8000d48:	f7ff fe10 	bl	800096c <HAL_GetTick>
 8000d4c:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8000d4e:	e008      	b.n	8000d62 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8000d50:	f7ff fe0c 	bl	800096c <HAL_GetTick>
 8000d54:	4602      	mov	r2, r0
 8000d56:	693b      	ldr	r3, [r7, #16]
 8000d58:	1ad3      	subs	r3, r2, r3
 8000d5a:	2b02      	cmp	r3, #2
 8000d5c:	d901      	bls.n	8000d62 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8000d5e:	2303      	movs	r3, #3
 8000d60:	e164      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8000d62:	4b26      	ldr	r3, [pc, #152]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000d64:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8000d66:	f003 0302 	and.w	r3, r3, #2
 8000d6a:	2b00      	cmp	r3, #0
 8000d6c:	d0f0      	beq.n	8000d50 <HAL_RCC_OscConfig+0x200>
 8000d6e:	e015      	b.n	8000d9c <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8000d70:	4b24      	ldr	r3, [pc, #144]	; (8000e04 <HAL_RCC_OscConfig+0x2b4>)
 8000d72:	2200      	movs	r2, #0
 8000d74:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8000d76:	f7ff fdf9 	bl	800096c <HAL_GetTick>
 8000d7a:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8000d7c:	e008      	b.n	8000d90 <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8000d7e:	f7ff fdf5 	bl	800096c <HAL_GetTick>
 8000d82:	4602      	mov	r2, r0
 8000d84:	693b      	ldr	r3, [r7, #16]
 8000d86:	1ad3      	subs	r3, r2, r3
 8000d88:	2b02      	cmp	r3, #2
 8000d8a:	d901      	bls.n	8000d90 <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
 8000d8c:	2303      	movs	r3, #3
 8000d8e:	e14d      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8000d90:	4b1a      	ldr	r3, [pc, #104]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000d92:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8000d94:	f003 0302 	and.w	r3, r3, #2
 8000d98:	2b00      	cmp	r3, #0
 8000d9a:	d1f0      	bne.n	8000d7e <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8000d9c:	687b      	ldr	r3, [r7, #4]
 8000d9e:	681b      	ldr	r3, [r3, #0]
 8000da0:	f003 0304 	and.w	r3, r3, #4
 8000da4:	2b00      	cmp	r3, #0
 8000da6:	f000 80a0 	beq.w	8000eea <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
 8000daa:	2300      	movs	r3, #0
 8000dac:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8000dae:	4b13      	ldr	r3, [pc, #76]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000db0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000db2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000db6:	2b00      	cmp	r3, #0
 8000db8:	d10f      	bne.n	8000dda <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8000dba:	2300      	movs	r3, #0
 8000dbc:	60bb      	str	r3, [r7, #8]
 8000dbe:	4b0f      	ldr	r3, [pc, #60]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000dc0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000dc2:	4a0e      	ldr	r2, [pc, #56]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000dc4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000dc8:	6413      	str	r3, [r2, #64]	; 0x40
 8000dca:	4b0c      	ldr	r3, [pc, #48]	; (8000dfc <HAL_RCC_OscConfig+0x2ac>)
 8000dcc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000dce:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000dd2:	60bb      	str	r3, [r7, #8]
 8000dd4:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8000dd6:	2301      	movs	r3, #1
 8000dd8:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8000dda:	4b0b      	ldr	r3, [pc, #44]	; (8000e08 <HAL_RCC_OscConfig+0x2b8>)
 8000ddc:	681b      	ldr	r3, [r3, #0]
 8000dde:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000de2:	2b00      	cmp	r3, #0
 8000de4:	d121      	bne.n	8000e2a <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8000de6:	4b08      	ldr	r3, [pc, #32]	; (8000e08 <HAL_RCC_OscConfig+0x2b8>)
 8000de8:	681b      	ldr	r3, [r3, #0]
 8000dea:	4a07      	ldr	r2, [pc, #28]	; (8000e08 <HAL_RCC_OscConfig+0x2b8>)
 8000dec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000df0:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8000df2:	f7ff fdbb 	bl	800096c <HAL_GetTick>
 8000df6:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8000df8:	e011      	b.n	8000e1e <HAL_RCC_OscConfig+0x2ce>
 8000dfa:	bf00      	nop
 8000dfc:	40023800 	.word	0x40023800
 8000e00:	42470000 	.word	0x42470000
 8000e04:	42470e80 	.word	0x42470e80
 8000e08:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8000e0c:	f7ff fdae 	bl	800096c <HAL_GetTick>
 8000e10:	4602      	mov	r2, r0
 8000e12:	693b      	ldr	r3, [r7, #16]
 8000e14:	1ad3      	subs	r3, r2, r3
 8000e16:	2b02      	cmp	r3, #2
 8000e18:	d901      	bls.n	8000e1e <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
 8000e1a:	2303      	movs	r3, #3
 8000e1c:	e106      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8000e1e:	4b85      	ldr	r3, [pc, #532]	; (8001034 <HAL_RCC_OscConfig+0x4e4>)
 8000e20:	681b      	ldr	r3, [r3, #0]
 8000e22:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000e26:	2b00      	cmp	r3, #0
 8000e28:	d0f0      	beq.n	8000e0c <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8000e2a:	687b      	ldr	r3, [r7, #4]
 8000e2c:	689b      	ldr	r3, [r3, #8]
 8000e2e:	2b01      	cmp	r3, #1
 8000e30:	d106      	bne.n	8000e40 <HAL_RCC_OscConfig+0x2f0>
 8000e32:	4b81      	ldr	r3, [pc, #516]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000e34:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000e36:	4a80      	ldr	r2, [pc, #512]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000e38:	f043 0301 	orr.w	r3, r3, #1
 8000e3c:	6713      	str	r3, [r2, #112]	; 0x70
 8000e3e:	e01c      	b.n	8000e7a <HAL_RCC_OscConfig+0x32a>
 8000e40:	687b      	ldr	r3, [r7, #4]
 8000e42:	689b      	ldr	r3, [r3, #8]
 8000e44:	2b05      	cmp	r3, #5
 8000e46:	d10c      	bne.n	8000e62 <HAL_RCC_OscConfig+0x312>
 8000e48:	4b7b      	ldr	r3, [pc, #492]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000e4a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000e4c:	4a7a      	ldr	r2, [pc, #488]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000e4e:	f043 0304 	orr.w	r3, r3, #4
 8000e52:	6713      	str	r3, [r2, #112]	; 0x70
 8000e54:	4b78      	ldr	r3, [pc, #480]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000e56:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000e58:	4a77      	ldr	r2, [pc, #476]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000e5a:	f043 0301 	orr.w	r3, r3, #1
 8000e5e:	6713      	str	r3, [r2, #112]	; 0x70
 8000e60:	e00b      	b.n	8000e7a <HAL_RCC_OscConfig+0x32a>
 8000e62:	4b75      	ldr	r3, [pc, #468]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000e64:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000e66:	4a74      	ldr	r2, [pc, #464]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000e68:	f023 0301 	bic.w	r3, r3, #1
 8000e6c:	6713      	str	r3, [r2, #112]	; 0x70
 8000e6e:	4b72      	ldr	r3, [pc, #456]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000e70:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000e72:	4a71      	ldr	r2, [pc, #452]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000e74:	f023 0304 	bic.w	r3, r3, #4
 8000e78:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8000e7a:	687b      	ldr	r3, [r7, #4]
 8000e7c:	689b      	ldr	r3, [r3, #8]
 8000e7e:	2b00      	cmp	r3, #0
 8000e80:	d015      	beq.n	8000eae <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8000e82:	f7ff fd73 	bl	800096c <HAL_GetTick>
 8000e86:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8000e88:	e00a      	b.n	8000ea0 <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8000e8a:	f7ff fd6f 	bl	800096c <HAL_GetTick>
 8000e8e:	4602      	mov	r2, r0
 8000e90:	693b      	ldr	r3, [r7, #16]
 8000e92:	1ad3      	subs	r3, r2, r3
 8000e94:	f241 3288 	movw	r2, #5000	; 0x1388
 8000e98:	4293      	cmp	r3, r2
 8000e9a:	d901      	bls.n	8000ea0 <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
 8000e9c:	2303      	movs	r3, #3
 8000e9e:	e0c5      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8000ea0:	4b65      	ldr	r3, [pc, #404]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000ea2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000ea4:	f003 0302 	and.w	r3, r3, #2
 8000ea8:	2b00      	cmp	r3, #0
 8000eaa:	d0ee      	beq.n	8000e8a <HAL_RCC_OscConfig+0x33a>
 8000eac:	e014      	b.n	8000ed8 <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8000eae:	f7ff fd5d 	bl	800096c <HAL_GetTick>
 8000eb2:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8000eb4:	e00a      	b.n	8000ecc <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8000eb6:	f7ff fd59 	bl	800096c <HAL_GetTick>
 8000eba:	4602      	mov	r2, r0
 8000ebc:	693b      	ldr	r3, [r7, #16]
 8000ebe:	1ad3      	subs	r3, r2, r3
 8000ec0:	f241 3288 	movw	r2, #5000	; 0x1388
 8000ec4:	4293      	cmp	r3, r2
 8000ec6:	d901      	bls.n	8000ecc <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
 8000ec8:	2303      	movs	r3, #3
 8000eca:	e0af      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8000ecc:	4b5a      	ldr	r3, [pc, #360]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000ece:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000ed0:	f003 0302 	and.w	r3, r3, #2
 8000ed4:	2b00      	cmp	r3, #0
 8000ed6:	d1ee      	bne.n	8000eb6 <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8000ed8:	7dfb      	ldrb	r3, [r7, #23]
 8000eda:	2b01      	cmp	r3, #1
 8000edc:	d105      	bne.n	8000eea <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8000ede:	4b56      	ldr	r3, [pc, #344]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000ee0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000ee2:	4a55      	ldr	r2, [pc, #340]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000ee4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8000ee8:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8000eea:	687b      	ldr	r3, [r7, #4]
 8000eec:	699b      	ldr	r3, [r3, #24]
 8000eee:	2b00      	cmp	r3, #0
 8000ef0:	f000 809b 	beq.w	800102a <HAL_RCC_OscConfig+0x4da>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8000ef4:	4b50      	ldr	r3, [pc, #320]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000ef6:	689b      	ldr	r3, [r3, #8]
 8000ef8:	f003 030c 	and.w	r3, r3, #12
 8000efc:	2b08      	cmp	r3, #8
 8000efe:	d05c      	beq.n	8000fba <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8000f00:	687b      	ldr	r3, [r7, #4]
 8000f02:	699b      	ldr	r3, [r3, #24]
 8000f04:	2b02      	cmp	r3, #2
 8000f06:	d141      	bne.n	8000f8c <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8000f08:	4b4c      	ldr	r3, [pc, #304]	; (800103c <HAL_RCC_OscConfig+0x4ec>)
 8000f0a:	2200      	movs	r2, #0
 8000f0c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8000f0e:	f7ff fd2d 	bl	800096c <HAL_GetTick>
 8000f12:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8000f14:	e008      	b.n	8000f28 <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8000f16:	f7ff fd29 	bl	800096c <HAL_GetTick>
 8000f1a:	4602      	mov	r2, r0
 8000f1c:	693b      	ldr	r3, [r7, #16]
 8000f1e:	1ad3      	subs	r3, r2, r3
 8000f20:	2b02      	cmp	r3, #2
 8000f22:	d901      	bls.n	8000f28 <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
 8000f24:	2303      	movs	r3, #3
 8000f26:	e081      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8000f28:	4b43      	ldr	r3, [pc, #268]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000f30:	2b00      	cmp	r3, #0
 8000f32:	d1f0      	bne.n	8000f16 <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8000f34:	687b      	ldr	r3, [r7, #4]
 8000f36:	69da      	ldr	r2, [r3, #28]
 8000f38:	687b      	ldr	r3, [r7, #4]
 8000f3a:	6a1b      	ldr	r3, [r3, #32]
 8000f3c:	431a      	orrs	r2, r3
 8000f3e:	687b      	ldr	r3, [r7, #4]
 8000f40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000f42:	019b      	lsls	r3, r3, #6
 8000f44:	431a      	orrs	r2, r3
 8000f46:	687b      	ldr	r3, [r7, #4]
 8000f48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000f4a:	085b      	lsrs	r3, r3, #1
 8000f4c:	3b01      	subs	r3, #1
 8000f4e:	041b      	lsls	r3, r3, #16
 8000f50:	431a      	orrs	r2, r3
 8000f52:	687b      	ldr	r3, [r7, #4]
 8000f54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000f56:	061b      	lsls	r3, r3, #24
 8000f58:	4937      	ldr	r1, [pc, #220]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000f5a:	4313      	orrs	r3, r2
 8000f5c:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8000f5e:	4b37      	ldr	r3, [pc, #220]	; (800103c <HAL_RCC_OscConfig+0x4ec>)
 8000f60:	2201      	movs	r2, #1
 8000f62:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8000f64:	f7ff fd02 	bl	800096c <HAL_GetTick>
 8000f68:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8000f6a:	e008      	b.n	8000f7e <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8000f6c:	f7ff fcfe 	bl	800096c <HAL_GetTick>
 8000f70:	4602      	mov	r2, r0
 8000f72:	693b      	ldr	r3, [r7, #16]
 8000f74:	1ad3      	subs	r3, r2, r3
 8000f76:	2b02      	cmp	r3, #2
 8000f78:	d901      	bls.n	8000f7e <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
 8000f7a:	2303      	movs	r3, #3
 8000f7c:	e056      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8000f7e:	4b2e      	ldr	r3, [pc, #184]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000f80:	681b      	ldr	r3, [r3, #0]
 8000f82:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000f86:	2b00      	cmp	r3, #0
 8000f88:	d0f0      	beq.n	8000f6c <HAL_RCC_OscConfig+0x41c>
 8000f8a:	e04e      	b.n	800102a <HAL_RCC_OscConfig+0x4da>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8000f8c:	4b2b      	ldr	r3, [pc, #172]	; (800103c <HAL_RCC_OscConfig+0x4ec>)
 8000f8e:	2200      	movs	r2, #0
 8000f90:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8000f92:	f7ff fceb 	bl	800096c <HAL_GetTick>
 8000f96:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8000f98:	e008      	b.n	8000fac <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8000f9a:	f7ff fce7 	bl	800096c <HAL_GetTick>
 8000f9e:	4602      	mov	r2, r0
 8000fa0:	693b      	ldr	r3, [r7, #16]
 8000fa2:	1ad3      	subs	r3, r2, r3
 8000fa4:	2b02      	cmp	r3, #2
 8000fa6:	d901      	bls.n	8000fac <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
 8000fa8:	2303      	movs	r3, #3
 8000faa:	e03f      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8000fac:	4b22      	ldr	r3, [pc, #136]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000fae:	681b      	ldr	r3, [r3, #0]
 8000fb0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000fb4:	2b00      	cmp	r3, #0
 8000fb6:	d1f0      	bne.n	8000f9a <HAL_RCC_OscConfig+0x44a>
 8000fb8:	e037      	b.n	800102a <HAL_RCC_OscConfig+0x4da>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8000fba:	687b      	ldr	r3, [r7, #4]
 8000fbc:	699b      	ldr	r3, [r3, #24]
 8000fbe:	2b01      	cmp	r3, #1
 8000fc0:	d101      	bne.n	8000fc6 <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
 8000fc2:	2301      	movs	r3, #1
 8000fc4:	e032      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8000fc6:	4b1c      	ldr	r3, [pc, #112]	; (8001038 <HAL_RCC_OscConfig+0x4e8>)
 8000fc8:	685b      	ldr	r3, [r3, #4]
 8000fca:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8000fcc:	687b      	ldr	r3, [r7, #4]
 8000fce:	699b      	ldr	r3, [r3, #24]
 8000fd0:	2b01      	cmp	r3, #1
 8000fd2:	d028      	beq.n	8001026 <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8000fd4:	68fb      	ldr	r3, [r7, #12]
 8000fd6:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8000fda:	687b      	ldr	r3, [r7, #4]
 8000fdc:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8000fde:	429a      	cmp	r2, r3
 8000fe0:	d121      	bne.n	8001026 <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8000fe2:	68fb      	ldr	r3, [r7, #12]
 8000fe4:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8000fe8:	687b      	ldr	r3, [r7, #4]
 8000fea:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8000fec:	429a      	cmp	r2, r3
 8000fee:	d11a      	bne.n	8001026 <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8000ff0:	68fa      	ldr	r2, [r7, #12]
 8000ff2:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8000ff6:	4013      	ands	r3, r2
 8000ff8:	687a      	ldr	r2, [r7, #4]
 8000ffa:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8000ffc:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8000ffe:	4293      	cmp	r3, r2
 8001000:	d111      	bne.n	8001026 <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8001002:	68fb      	ldr	r3, [r7, #12]
 8001004:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8001008:	687b      	ldr	r3, [r7, #4]
 800100a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800100c:	085b      	lsrs	r3, r3, #1
 800100e:	3b01      	subs	r3, #1
 8001010:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8001012:	429a      	cmp	r2, r3
 8001014:	d107      	bne.n	8001026 <HAL_RCC_OscConfig+0x4d6>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8001016:	68fb      	ldr	r3, [r7, #12]
 8001018:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800101c:	687b      	ldr	r3, [r7, #4]
 800101e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001020:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8001022:	429a      	cmp	r2, r3
 8001024:	d001      	beq.n	800102a <HAL_RCC_OscConfig+0x4da>
#endif
        {
          return HAL_ERROR;
 8001026:	2301      	movs	r3, #1
 8001028:	e000      	b.n	800102c <HAL_RCC_OscConfig+0x4dc>
        }
      }
    }
  }
  return HAL_OK;
 800102a:	2300      	movs	r3, #0
}
 800102c:	4618      	mov	r0, r3
 800102e:	3718      	adds	r7, #24
 8001030:	46bd      	mov	sp, r7
 8001032:	bd80      	pop	{r7, pc}
 8001034:	40007000 	.word	0x40007000
 8001038:	40023800 	.word	0x40023800
 800103c:	42470060 	.word	0x42470060

08001040 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8001040:	b580      	push	{r7, lr}
 8001042:	b084      	sub	sp, #16
 8001044:	af00      	add	r7, sp, #0
 8001046:	6078      	str	r0, [r7, #4]
 8001048:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800104a:	687b      	ldr	r3, [r7, #4]
 800104c:	2b00      	cmp	r3, #0
 800104e:	d101      	bne.n	8001054 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8001050:	2301      	movs	r3, #1
 8001052:	e0cc      	b.n	80011ee <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8001054:	4b68      	ldr	r3, [pc, #416]	; (80011f8 <HAL_RCC_ClockConfig+0x1b8>)
 8001056:	681b      	ldr	r3, [r3, #0]
 8001058:	f003 0307 	and.w	r3, r3, #7
 800105c:	683a      	ldr	r2, [r7, #0]
 800105e:	429a      	cmp	r2, r3
 8001060:	d90c      	bls.n	800107c <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001062:	4b65      	ldr	r3, [pc, #404]	; (80011f8 <HAL_RCC_ClockConfig+0x1b8>)
 8001064:	683a      	ldr	r2, [r7, #0]
 8001066:	b2d2      	uxtb	r2, r2
 8001068:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800106a:	4b63      	ldr	r3, [pc, #396]	; (80011f8 <HAL_RCC_ClockConfig+0x1b8>)
 800106c:	681b      	ldr	r3, [r3, #0]
 800106e:	f003 0307 	and.w	r3, r3, #7
 8001072:	683a      	ldr	r2, [r7, #0]
 8001074:	429a      	cmp	r2, r3
 8001076:	d001      	beq.n	800107c <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8001078:	2301      	movs	r3, #1
 800107a:	e0b8      	b.n	80011ee <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800107c:	687b      	ldr	r3, [r7, #4]
 800107e:	681b      	ldr	r3, [r3, #0]
 8001080:	f003 0302 	and.w	r3, r3, #2
 8001084:	2b00      	cmp	r3, #0
 8001086:	d020      	beq.n	80010ca <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001088:	687b      	ldr	r3, [r7, #4]
 800108a:	681b      	ldr	r3, [r3, #0]
 800108c:	f003 0304 	and.w	r3, r3, #4
 8001090:	2b00      	cmp	r3, #0
 8001092:	d005      	beq.n	80010a0 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001094:	4b59      	ldr	r3, [pc, #356]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 8001096:	689b      	ldr	r3, [r3, #8]
 8001098:	4a58      	ldr	r2, [pc, #352]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 800109a:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800109e:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	681b      	ldr	r3, [r3, #0]
 80010a4:	f003 0308 	and.w	r3, r3, #8
 80010a8:	2b00      	cmp	r3, #0
 80010aa:	d005      	beq.n	80010b8 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80010ac:	4b53      	ldr	r3, [pc, #332]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 80010ae:	689b      	ldr	r3, [r3, #8]
 80010b0:	4a52      	ldr	r2, [pc, #328]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 80010b2:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80010b6:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80010b8:	4b50      	ldr	r3, [pc, #320]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 80010ba:	689b      	ldr	r3, [r3, #8]
 80010bc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80010c0:	687b      	ldr	r3, [r7, #4]
 80010c2:	689b      	ldr	r3, [r3, #8]
 80010c4:	494d      	ldr	r1, [pc, #308]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 80010c6:	4313      	orrs	r3, r2
 80010c8:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80010ca:	687b      	ldr	r3, [r7, #4]
 80010cc:	681b      	ldr	r3, [r3, #0]
 80010ce:	f003 0301 	and.w	r3, r3, #1
 80010d2:	2b00      	cmp	r3, #0
 80010d4:	d044      	beq.n	8001160 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	685b      	ldr	r3, [r3, #4]
 80010da:	2b01      	cmp	r3, #1
 80010dc:	d107      	bne.n	80010ee <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80010de:	4b47      	ldr	r3, [pc, #284]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 80010e0:	681b      	ldr	r3, [r3, #0]
 80010e2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80010e6:	2b00      	cmp	r3, #0
 80010e8:	d119      	bne.n	800111e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80010ea:	2301      	movs	r3, #1
 80010ec:	e07f      	b.n	80011ee <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80010ee:	687b      	ldr	r3, [r7, #4]
 80010f0:	685b      	ldr	r3, [r3, #4]
 80010f2:	2b02      	cmp	r3, #2
 80010f4:	d003      	beq.n	80010fe <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 80010f6:	687b      	ldr	r3, [r7, #4]
 80010f8:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80010fa:	2b03      	cmp	r3, #3
 80010fc:	d107      	bne.n	800110e <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80010fe:	4b3f      	ldr	r3, [pc, #252]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 8001100:	681b      	ldr	r3, [r3, #0]
 8001102:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001106:	2b00      	cmp	r3, #0
 8001108:	d109      	bne.n	800111e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800110a:	2301      	movs	r3, #1
 800110c:	e06f      	b.n	80011ee <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800110e:	4b3b      	ldr	r3, [pc, #236]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 8001110:	681b      	ldr	r3, [r3, #0]
 8001112:	f003 0302 	and.w	r3, r3, #2
 8001116:	2b00      	cmp	r3, #0
 8001118:	d101      	bne.n	800111e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800111a:	2301      	movs	r3, #1
 800111c:	e067      	b.n	80011ee <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800111e:	4b37      	ldr	r3, [pc, #220]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 8001120:	689b      	ldr	r3, [r3, #8]
 8001122:	f023 0203 	bic.w	r2, r3, #3
 8001126:	687b      	ldr	r3, [r7, #4]
 8001128:	685b      	ldr	r3, [r3, #4]
 800112a:	4934      	ldr	r1, [pc, #208]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 800112c:	4313      	orrs	r3, r2
 800112e:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8001130:	f7ff fc1c 	bl	800096c <HAL_GetTick>
 8001134:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001136:	e00a      	b.n	800114e <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001138:	f7ff fc18 	bl	800096c <HAL_GetTick>
 800113c:	4602      	mov	r2, r0
 800113e:	68fb      	ldr	r3, [r7, #12]
 8001140:	1ad3      	subs	r3, r2, r3
 8001142:	f241 3288 	movw	r2, #5000	; 0x1388
 8001146:	4293      	cmp	r3, r2
 8001148:	d901      	bls.n	800114e <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800114a:	2303      	movs	r3, #3
 800114c:	e04f      	b.n	80011ee <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800114e:	4b2b      	ldr	r3, [pc, #172]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 8001150:	689b      	ldr	r3, [r3, #8]
 8001152:	f003 020c 	and.w	r2, r3, #12
 8001156:	687b      	ldr	r3, [r7, #4]
 8001158:	685b      	ldr	r3, [r3, #4]
 800115a:	009b      	lsls	r3, r3, #2
 800115c:	429a      	cmp	r2, r3
 800115e:	d1eb      	bne.n	8001138 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8001160:	4b25      	ldr	r3, [pc, #148]	; (80011f8 <HAL_RCC_ClockConfig+0x1b8>)
 8001162:	681b      	ldr	r3, [r3, #0]
 8001164:	f003 0307 	and.w	r3, r3, #7
 8001168:	683a      	ldr	r2, [r7, #0]
 800116a:	429a      	cmp	r2, r3
 800116c:	d20c      	bcs.n	8001188 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800116e:	4b22      	ldr	r3, [pc, #136]	; (80011f8 <HAL_RCC_ClockConfig+0x1b8>)
 8001170:	683a      	ldr	r2, [r7, #0]
 8001172:	b2d2      	uxtb	r2, r2
 8001174:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8001176:	4b20      	ldr	r3, [pc, #128]	; (80011f8 <HAL_RCC_ClockConfig+0x1b8>)
 8001178:	681b      	ldr	r3, [r3, #0]
 800117a:	f003 0307 	and.w	r3, r3, #7
 800117e:	683a      	ldr	r2, [r7, #0]
 8001180:	429a      	cmp	r2, r3
 8001182:	d001      	beq.n	8001188 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8001184:	2301      	movs	r3, #1
 8001186:	e032      	b.n	80011ee <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001188:	687b      	ldr	r3, [r7, #4]
 800118a:	681b      	ldr	r3, [r3, #0]
 800118c:	f003 0304 	and.w	r3, r3, #4
 8001190:	2b00      	cmp	r3, #0
 8001192:	d008      	beq.n	80011a6 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001194:	4b19      	ldr	r3, [pc, #100]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 8001196:	689b      	ldr	r3, [r3, #8]
 8001198:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800119c:	687b      	ldr	r3, [r7, #4]
 800119e:	68db      	ldr	r3, [r3, #12]
 80011a0:	4916      	ldr	r1, [pc, #88]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 80011a2:	4313      	orrs	r3, r2
 80011a4:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80011a6:	687b      	ldr	r3, [r7, #4]
 80011a8:	681b      	ldr	r3, [r3, #0]
 80011aa:	f003 0308 	and.w	r3, r3, #8
 80011ae:	2b00      	cmp	r3, #0
 80011b0:	d009      	beq.n	80011c6 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80011b2:	4b12      	ldr	r3, [pc, #72]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 80011b4:	689b      	ldr	r3, [r3, #8]
 80011b6:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80011ba:	687b      	ldr	r3, [r7, #4]
 80011bc:	691b      	ldr	r3, [r3, #16]
 80011be:	00db      	lsls	r3, r3, #3
 80011c0:	490e      	ldr	r1, [pc, #56]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 80011c2:	4313      	orrs	r3, r2
 80011c4:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80011c6:	f000 f821 	bl	800120c <HAL_RCC_GetSysClockFreq>
 80011ca:	4602      	mov	r2, r0
 80011cc:	4b0b      	ldr	r3, [pc, #44]	; (80011fc <HAL_RCC_ClockConfig+0x1bc>)
 80011ce:	689b      	ldr	r3, [r3, #8]
 80011d0:	091b      	lsrs	r3, r3, #4
 80011d2:	f003 030f 	and.w	r3, r3, #15
 80011d6:	490a      	ldr	r1, [pc, #40]	; (8001200 <HAL_RCC_ClockConfig+0x1c0>)
 80011d8:	5ccb      	ldrb	r3, [r1, r3]
 80011da:	fa22 f303 	lsr.w	r3, r2, r3
 80011de:	4a09      	ldr	r2, [pc, #36]	; (8001204 <HAL_RCC_ClockConfig+0x1c4>)
 80011e0:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 80011e2:	4b09      	ldr	r3, [pc, #36]	; (8001208 <HAL_RCC_ClockConfig+0x1c8>)
 80011e4:	681b      	ldr	r3, [r3, #0]
 80011e6:	4618      	mov	r0, r3
 80011e8:	f7ff fb7c 	bl	80008e4 <HAL_InitTick>

  return HAL_OK;
 80011ec:	2300      	movs	r3, #0
}
 80011ee:	4618      	mov	r0, r3
 80011f0:	3710      	adds	r7, #16
 80011f2:	46bd      	mov	sp, r7
 80011f4:	bd80      	pop	{r7, pc}
 80011f6:	bf00      	nop
 80011f8:	40023c00 	.word	0x40023c00
 80011fc:	40023800 	.word	0x40023800
 8001200:	08006070 	.word	0x08006070
 8001204:	20000000 	.word	0x20000000
 8001208:	20000004 	.word	0x20000004

0800120c <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 800120c:	b5b0      	push	{r4, r5, r7, lr}
 800120e:	b084      	sub	sp, #16
 8001210:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8001212:	2100      	movs	r1, #0
 8001214:	6079      	str	r1, [r7, #4]
 8001216:	2100      	movs	r1, #0
 8001218:	60f9      	str	r1, [r7, #12]
 800121a:	2100      	movs	r1, #0
 800121c:	6039      	str	r1, [r7, #0]
  uint32_t sysclockfreq = 0U;
 800121e:	2100      	movs	r1, #0
 8001220:	60b9      	str	r1, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8001222:	4952      	ldr	r1, [pc, #328]	; (800136c <HAL_RCC_GetSysClockFreq+0x160>)
 8001224:	6889      	ldr	r1, [r1, #8]
 8001226:	f001 010c 	and.w	r1, r1, #12
 800122a:	2908      	cmp	r1, #8
 800122c:	d00d      	beq.n	800124a <HAL_RCC_GetSysClockFreq+0x3e>
 800122e:	2908      	cmp	r1, #8
 8001230:	f200 8094 	bhi.w	800135c <HAL_RCC_GetSysClockFreq+0x150>
 8001234:	2900      	cmp	r1, #0
 8001236:	d002      	beq.n	800123e <HAL_RCC_GetSysClockFreq+0x32>
 8001238:	2904      	cmp	r1, #4
 800123a:	d003      	beq.n	8001244 <HAL_RCC_GetSysClockFreq+0x38>
 800123c:	e08e      	b.n	800135c <HAL_RCC_GetSysClockFreq+0x150>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 800123e:	4b4c      	ldr	r3, [pc, #304]	; (8001370 <HAL_RCC_GetSysClockFreq+0x164>)
 8001240:	60bb      	str	r3, [r7, #8]
       break;
 8001242:	e08e      	b.n	8001362 <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8001244:	4b4b      	ldr	r3, [pc, #300]	; (8001374 <HAL_RCC_GetSysClockFreq+0x168>)
 8001246:	60bb      	str	r3, [r7, #8]
      break;
 8001248:	e08b      	b.n	8001362 <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800124a:	4948      	ldr	r1, [pc, #288]	; (800136c <HAL_RCC_GetSysClockFreq+0x160>)
 800124c:	6849      	ldr	r1, [r1, #4]
 800124e:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8001252:	6079      	str	r1, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8001254:	4945      	ldr	r1, [pc, #276]	; (800136c <HAL_RCC_GetSysClockFreq+0x160>)
 8001256:	6849      	ldr	r1, [r1, #4]
 8001258:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 800125c:	2900      	cmp	r1, #0
 800125e:	d024      	beq.n	80012aa <HAL_RCC_GetSysClockFreq+0x9e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001260:	4942      	ldr	r1, [pc, #264]	; (800136c <HAL_RCC_GetSysClockFreq+0x160>)
 8001262:	6849      	ldr	r1, [r1, #4]
 8001264:	0989      	lsrs	r1, r1, #6
 8001266:	4608      	mov	r0, r1
 8001268:	f04f 0100 	mov.w	r1, #0
 800126c:	f240 14ff 	movw	r4, #511	; 0x1ff
 8001270:	f04f 0500 	mov.w	r5, #0
 8001274:	ea00 0204 	and.w	r2, r0, r4
 8001278:	ea01 0305 	and.w	r3, r1, r5
 800127c:	493d      	ldr	r1, [pc, #244]	; (8001374 <HAL_RCC_GetSysClockFreq+0x168>)
 800127e:	fb01 f003 	mul.w	r0, r1, r3
 8001282:	2100      	movs	r1, #0
 8001284:	fb01 f102 	mul.w	r1, r1, r2
 8001288:	1844      	adds	r4, r0, r1
 800128a:	493a      	ldr	r1, [pc, #232]	; (8001374 <HAL_RCC_GetSysClockFreq+0x168>)
 800128c:	fba2 0101 	umull	r0, r1, r2, r1
 8001290:	1863      	adds	r3, r4, r1
 8001292:	4619      	mov	r1, r3
 8001294:	687b      	ldr	r3, [r7, #4]
 8001296:	461a      	mov	r2, r3
 8001298:	f04f 0300 	mov.w	r3, #0
 800129c:	f7fe ff9c 	bl	80001d8 <__aeabi_uldivmod>
 80012a0:	4602      	mov	r2, r0
 80012a2:	460b      	mov	r3, r1
 80012a4:	4613      	mov	r3, r2
 80012a6:	60fb      	str	r3, [r7, #12]
 80012a8:	e04a      	b.n	8001340 <HAL_RCC_GetSysClockFreq+0x134>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80012aa:	4b30      	ldr	r3, [pc, #192]	; (800136c <HAL_RCC_GetSysClockFreq+0x160>)
 80012ac:	685b      	ldr	r3, [r3, #4]
 80012ae:	099b      	lsrs	r3, r3, #6
 80012b0:	461a      	mov	r2, r3
 80012b2:	f04f 0300 	mov.w	r3, #0
 80012b6:	f240 10ff 	movw	r0, #511	; 0x1ff
 80012ba:	f04f 0100 	mov.w	r1, #0
 80012be:	ea02 0400 	and.w	r4, r2, r0
 80012c2:	ea03 0501 	and.w	r5, r3, r1
 80012c6:	4620      	mov	r0, r4
 80012c8:	4629      	mov	r1, r5
 80012ca:	f04f 0200 	mov.w	r2, #0
 80012ce:	f04f 0300 	mov.w	r3, #0
 80012d2:	014b      	lsls	r3, r1, #5
 80012d4:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 80012d8:	0142      	lsls	r2, r0, #5
 80012da:	4610      	mov	r0, r2
 80012dc:	4619      	mov	r1, r3
 80012de:	1b00      	subs	r0, r0, r4
 80012e0:	eb61 0105 	sbc.w	r1, r1, r5
 80012e4:	f04f 0200 	mov.w	r2, #0
 80012e8:	f04f 0300 	mov.w	r3, #0
 80012ec:	018b      	lsls	r3, r1, #6
 80012ee:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 80012f2:	0182      	lsls	r2, r0, #6
 80012f4:	1a12      	subs	r2, r2, r0
 80012f6:	eb63 0301 	sbc.w	r3, r3, r1
 80012fa:	f04f 0000 	mov.w	r0, #0
 80012fe:	f04f 0100 	mov.w	r1, #0
 8001302:	00d9      	lsls	r1, r3, #3
 8001304:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8001308:	00d0      	lsls	r0, r2, #3
 800130a:	4602      	mov	r2, r0
 800130c:	460b      	mov	r3, r1
 800130e:	1912      	adds	r2, r2, r4
 8001310:	eb45 0303 	adc.w	r3, r5, r3
 8001314:	f04f 0000 	mov.w	r0, #0
 8001318:	f04f 0100 	mov.w	r1, #0
 800131c:	0299      	lsls	r1, r3, #10
 800131e:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 8001322:	0290      	lsls	r0, r2, #10
 8001324:	4602      	mov	r2, r0
 8001326:	460b      	mov	r3, r1
 8001328:	4610      	mov	r0, r2
 800132a:	4619      	mov	r1, r3
 800132c:	687b      	ldr	r3, [r7, #4]
 800132e:	461a      	mov	r2, r3
 8001330:	f04f 0300 	mov.w	r3, #0
 8001334:	f7fe ff50 	bl	80001d8 <__aeabi_uldivmod>
 8001338:	4602      	mov	r2, r0
 800133a:	460b      	mov	r3, r1
 800133c:	4613      	mov	r3, r2
 800133e:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8001340:	4b0a      	ldr	r3, [pc, #40]	; (800136c <HAL_RCC_GetSysClockFreq+0x160>)
 8001342:	685b      	ldr	r3, [r3, #4]
 8001344:	0c1b      	lsrs	r3, r3, #16
 8001346:	f003 0303 	and.w	r3, r3, #3
 800134a:	3301      	adds	r3, #1
 800134c:	005b      	lsls	r3, r3, #1
 800134e:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
 8001350:	68fa      	ldr	r2, [r7, #12]
 8001352:	683b      	ldr	r3, [r7, #0]
 8001354:	fbb2 f3f3 	udiv	r3, r2, r3
 8001358:	60bb      	str	r3, [r7, #8]
      break;
 800135a:	e002      	b.n	8001362 <HAL_RCC_GetSysClockFreq+0x156>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 800135c:	4b04      	ldr	r3, [pc, #16]	; (8001370 <HAL_RCC_GetSysClockFreq+0x164>)
 800135e:	60bb      	str	r3, [r7, #8]
      break;
 8001360:	bf00      	nop
    }
  }
  return sysclockfreq;
 8001362:	68bb      	ldr	r3, [r7, #8]
}
 8001364:	4618      	mov	r0, r3
 8001366:	3710      	adds	r7, #16
 8001368:	46bd      	mov	sp, r7
 800136a:	bdb0      	pop	{r4, r5, r7, pc}
 800136c:	40023800 	.word	0x40023800
 8001370:	00f42400 	.word	0x00f42400
 8001374:	017d7840 	.word	0x017d7840

08001378 <_SetPhysRAMAddr>:
 8001378:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800137a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800137c:	4604      	mov	r4, r0
 800137e:	460e      	mov	r6, r1
 8001380:	4615      	mov	r5, r2
 8001382:	b15b      	cbz	r3, 800139c <_SetPhysRAMAddr+0x24>
 8001384:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8001388:	4798      	blx	r3
 800138a:	4631      	mov	r1, r6
 800138c:	4607      	mov	r7, r0
 800138e:	462a      	mov	r2, r5
 8001390:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 8001394:	4620      	mov	r0, r4
 8001396:	4798      	blx	r3
 8001398:	463e      	mov	r6, r7
 800139a:	4605      	mov	r5, r0
 800139c:	6923      	ldr	r3, [r4, #16]
 800139e:	69a2      	ldr	r2, [r4, #24]
 80013a0:	429e      	cmp	r6, r3
 80013a2:	bfac      	ite	ge
 80013a4:	2300      	movge	r3, #0
 80013a6:	2301      	movlt	r3, #1
 80013a8:	4296      	cmp	r6, r2
 80013aa:	bfd4      	ite	le
 80013ac:	461a      	movle	r2, r3
 80013ae:	f043 0201 	orrgt.w	r2, r3, #1
 80013b2:	6963      	ldr	r3, [r4, #20]
 80013b4:	429d      	cmp	r5, r3
 80013b6:	bfac      	ite	ge
 80013b8:	4613      	movge	r3, r2
 80013ba:	f042 0301 	orrlt.w	r3, r2, #1
 80013be:	b913      	cbnz	r3, 80013c6 <_SetPhysRAMAddr+0x4e>
 80013c0:	69e3      	ldr	r3, [r4, #28]
 80013c2:	429d      	cmp	r5, r3
 80013c4:	dd0a      	ble.n	80013dc <_SetPhysRAMAddr+0x64>
 80013c6:	6862      	ldr	r2, [r4, #4]
 80013c8:	6823      	ldr	r3, [r4, #0]
 80013ca:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80013ce:	3a01      	subs	r2, #1
 80013d0:	2100      	movs	r1, #0
 80013d2:	9200      	str	r2, [sp, #0]
 80013d4:	4620      	mov	r0, r4
 80013d6:	460a      	mov	r2, r1
 80013d8:	3b01      	subs	r3, #1
 80013da:	47b8      	blx	r7
 80013dc:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80013e0:	4620      	mov	r0, r4
 80013e2:	2120      	movs	r1, #32
 80013e4:	4798      	blx	r3
 80013e6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80013e8:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80013ec:	4431      	add	r1, r6
 80013ee:	4620      	mov	r0, r4
 80013f0:	b289      	uxth	r1, r1
 80013f2:	4798      	blx	r3
 80013f4:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80013f8:	4620      	mov	r0, r4
 80013fa:	2121      	movs	r1, #33	; 0x21
 80013fc:	4798      	blx	r3
 80013fe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8001400:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8001404:	4429      	add	r1, r5
 8001406:	4620      	mov	r0, r4
 8001408:	b289      	uxth	r1, r1
 800140a:	4798      	blx	r3
 800140c:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8001410:	4620      	mov	r0, r4
 8001412:	2122      	movs	r1, #34	; 0x22
 8001414:	4798      	blx	r3
 8001416:	b003      	add	sp, #12
 8001418:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800141a <_SetRect>:
 800141a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800141e:	461f      	mov	r7, r3
 8001420:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8001422:	9e08      	ldr	r6, [sp, #32]
 8001424:	4604      	mov	r4, r0
 8001426:	4689      	mov	r9, r1
 8001428:	4690      	mov	r8, r2
 800142a:	2b00      	cmp	r3, #0
 800142c:	d062      	beq.n	80014f4 <_SetRect+0xda>
 800142e:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8001432:	4798      	blx	r3
 8001434:	4639      	mov	r1, r7
 8001436:	4682      	mov	sl, r0
 8001438:	4632      	mov	r2, r6
 800143a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800143e:	4620      	mov	r0, r4
 8001440:	4798      	blx	r3
 8001442:	4649      	mov	r1, r9
 8001444:	4605      	mov	r5, r0
 8001446:	4642      	mov	r2, r8
 8001448:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800144c:	4620      	mov	r0, r4
 800144e:	4798      	blx	r3
 8001450:	4639      	mov	r1, r7
 8001452:	4680      	mov	r8, r0
 8001454:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 8001458:	4632      	mov	r2, r6
 800145a:	4620      	mov	r0, r4
 800145c:	4798      	blx	r3
 800145e:	4555      	cmp	r5, sl
 8001460:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
 8001464:	bfaa      	itet	ge
 8001466:	46a9      	movge	r9, r5
 8001468:	46d1      	movlt	r9, sl
 800146a:	4655      	movge	r5, sl
 800146c:	4540      	cmp	r0, r8
 800146e:	4606      	mov	r6, r0
 8001470:	bfa6      	itte	ge
 8001472:	4607      	movge	r7, r0
 8001474:	4646      	movge	r6, r8
 8001476:	4647      	movlt	r7, r8
 8001478:	b923      	cbnz	r3, 8001484 <_SetRect+0x6a>
 800147a:	6125      	str	r5, [r4, #16]
 800147c:	6166      	str	r6, [r4, #20]
 800147e:	f8c4 9018 	str.w	r9, [r4, #24]
 8001482:	61e7      	str	r7, [r4, #28]
 8001484:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8001488:	4620      	mov	r0, r4
 800148a:	2150      	movs	r1, #80	; 0x50
 800148c:	4798      	blx	r3
 800148e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8001490:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8001494:	4429      	add	r1, r5
 8001496:	4620      	mov	r0, r4
 8001498:	b289      	uxth	r1, r1
 800149a:	4798      	blx	r3
 800149c:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80014a0:	4620      	mov	r0, r4
 80014a2:	2151      	movs	r1, #81	; 0x51
 80014a4:	4798      	blx	r3
 80014a6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80014a8:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80014ac:	4449      	add	r1, r9
 80014ae:	4620      	mov	r0, r4
 80014b0:	b289      	uxth	r1, r1
 80014b2:	4798      	blx	r3
 80014b4:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80014b8:	4620      	mov	r0, r4
 80014ba:	2152      	movs	r1, #82	; 0x52
 80014bc:	4798      	blx	r3
 80014be:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80014c0:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80014c4:	4431      	add	r1, r6
 80014c6:	4620      	mov	r0, r4
 80014c8:	b289      	uxth	r1, r1
 80014ca:	4798      	blx	r3
 80014cc:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80014d0:	4620      	mov	r0, r4
 80014d2:	2153      	movs	r1, #83	; 0x53
 80014d4:	4798      	blx	r3
 80014d6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80014d8:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80014dc:	4439      	add	r1, r7
 80014de:	4620      	mov	r0, r4
 80014e0:	b289      	uxth	r1, r1
 80014e2:	4798      	blx	r3
 80014e4:	2120      	movs	r1, #32
 80014e6:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80014ea:	4620      	mov	r0, r4
 80014ec:	4798      	blx	r3
 80014ee:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80014f0:	4451      	add	r1, sl
 80014f2:	e041      	b.n	8001578 <_SetRect+0x15e>
 80014f4:	f8d0 309c 	ldr.w	r3, [r0, #156]	; 0x9c
 80014f8:	b91b      	cbnz	r3, 8001502 <_SetRect+0xe8>
 80014fa:	6121      	str	r1, [r4, #16]
 80014fc:	6162      	str	r2, [r4, #20]
 80014fe:	6187      	str	r7, [r0, #24]
 8001500:	61c6      	str	r6, [r0, #28]
 8001502:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8001506:	4620      	mov	r0, r4
 8001508:	2150      	movs	r1, #80	; 0x50
 800150a:	4798      	blx	r3
 800150c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800150e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8001512:	fa1f f989 	uxth.w	r9, r9
 8001516:	4449      	add	r1, r9
 8001518:	4620      	mov	r0, r4
 800151a:	b289      	uxth	r1, r1
 800151c:	4798      	blx	r3
 800151e:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8001522:	4620      	mov	r0, r4
 8001524:	2151      	movs	r1, #81	; 0x51
 8001526:	4798      	blx	r3
 8001528:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800152a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800152e:	4439      	add	r1, r7
 8001530:	4620      	mov	r0, r4
 8001532:	b289      	uxth	r1, r1
 8001534:	4798      	blx	r3
 8001536:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800153a:	4620      	mov	r0, r4
 800153c:	2152      	movs	r1, #82	; 0x52
 800153e:	4798      	blx	r3
 8001540:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8001542:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8001546:	fa1f f888 	uxth.w	r8, r8
 800154a:	4441      	add	r1, r8
 800154c:	4620      	mov	r0, r4
 800154e:	b289      	uxth	r1, r1
 8001550:	4798      	blx	r3
 8001552:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8001556:	4620      	mov	r0, r4
 8001558:	2153      	movs	r1, #83	; 0x53
 800155a:	4798      	blx	r3
 800155c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800155e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8001562:	4431      	add	r1, r6
 8001564:	4620      	mov	r0, r4
 8001566:	b289      	uxth	r1, r1
 8001568:	4798      	blx	r3
 800156a:	2120      	movs	r1, #32
 800156c:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8001570:	4620      	mov	r0, r4
 8001572:	4798      	blx	r3
 8001574:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8001576:	4449      	add	r1, r9
 8001578:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800157c:	4620      	mov	r0, r4
 800157e:	b289      	uxth	r1, r1
 8001580:	4798      	blx	r3
 8001582:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8001586:	4620      	mov	r0, r4
 8001588:	2121      	movs	r1, #33	; 0x21
 800158a:	4798      	blx	r3
 800158c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800158e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8001592:	4441      	add	r1, r8
 8001594:	4620      	mov	r0, r4
 8001596:	b289      	uxth	r1, r1
 8001598:	4798      	blx	r3
 800159a:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800159e:	4620      	mov	r0, r4
 80015a0:	2122      	movs	r1, #34	; 0x22
 80015a2:	4798      	blx	r3
 80015a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080015a8 <_SetOrientation>:
 80015a8:	b513      	push	{r0, r1, r4, lr}
 80015aa:	4a0d      	ldr	r2, [pc, #52]	; (80015e0 <_SetOrientation+0x38>)
 80015ac:	4604      	mov	r4, r0
 80015ae:	6851      	ldr	r1, [r2, #4]
 80015b0:	6810      	ldr	r0, [r2, #0]
 80015b2:	466b      	mov	r3, sp
 80015b4:	c303      	stmia	r3!, {r0, r1}
 80015b6:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80015ba:	4620      	mov	r0, r4
 80015bc:	2103      	movs	r1, #3
 80015be:	4798      	blx	r3
 80015c0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80015c2:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 80015c4:	aa02      	add	r2, sp, #8
 80015c6:	4413      	add	r3, r2
 80015c8:	f021 0138 	bic.w	r1, r1, #56	; 0x38
 80015cc:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 80015d0:	4319      	orrs	r1, r3
 80015d2:	4620      	mov	r0, r4
 80015d4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80015d8:	b289      	uxth	r1, r1
 80015da:	4798      	blx	r3
 80015dc:	b002      	add	sp, #8
 80015de:	bd10      	pop	{r4, pc}
 80015e0:	08006028 	.word	0x08006028

080015e4 <_ReadPixel_16bpp_B8>:
 80015e4:	b513      	push	{r0, r1, r4, lr}
 80015e6:	6a01      	ldr	r1, [r0, #32]
 80015e8:	f8d0 3128 	ldr.w	r3, [r0, #296]	; 0x128
 80015ec:	4604      	mov	r4, r0
 80015ee:	3102      	adds	r1, #2
 80015f0:	4668      	mov	r0, sp
 80015f2:	4798      	blx	r3
 80015f4:	6a23      	ldr	r3, [r4, #32]
 80015f6:	aa00      	add	r2, sp, #0
 80015f8:	441a      	add	r2, r3
 80015fa:	f81d 0003 	ldrb.w	r0, [sp, r3]
 80015fe:	7853      	ldrb	r3, [r2, #1]
 8001600:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
 8001604:	b002      	add	sp, #8
 8001606:	bd10      	pop	{r4, pc}

08001608 <_ReadPixel_16bpp_B16>:
 8001608:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800160a:	6a01      	ldr	r1, [r0, #32]
 800160c:	f8d0 3148 	ldr.w	r3, [r0, #328]	; 0x148
 8001610:	4604      	mov	r4, r0
 8001612:	3101      	adds	r1, #1
 8001614:	a801      	add	r0, sp, #4
 8001616:	4798      	blx	r3
 8001618:	6a23      	ldr	r3, [r4, #32]
 800161a:	aa04      	add	r2, sp, #16
 800161c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8001620:	f833 0c0c 	ldrh.w	r0, [r3, #-12]
 8001624:	b004      	add	sp, #16
 8001626:	bd10      	pop	{r4, pc}

08001628 <_SetReg_B8>:
 8001628:	b538      	push	{r3, r4, r5, lr}
 800162a:	4604      	mov	r4, r0
 800162c:	460d      	mov	r5, r1
 800162e:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 8001632:	0a08      	lsrs	r0, r1, #8
 8001634:	4798      	blx	r3
 8001636:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800163a:	b2e8      	uxtb	r0, r5
 800163c:	4798      	blx	r3
 800163e:	bd38      	pop	{r3, r4, r5, pc}

08001640 <_WritePara_B8>:
 8001640:	b538      	push	{r3, r4, r5, lr}
 8001642:	4604      	mov	r4, r0
 8001644:	460d      	mov	r5, r1
 8001646:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 800164a:	0a08      	lsrs	r0, r1, #8
 800164c:	4798      	blx	r3
 800164e:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8001652:	b2e8      	uxtb	r0, r5
 8001654:	4798      	blx	r3
 8001656:	bd38      	pop	{r3, r4, r5, pc}

08001658 <_SetReg_B16>:
 8001658:	b508      	push	{r3, lr}
 800165a:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800165e:	4608      	mov	r0, r1
 8001660:	4798      	blx	r3
 8001662:	bd08      	pop	{r3, pc}

08001664 <_WritePara_B16>:
 8001664:	b508      	push	{r3, lr}
 8001666:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800166a:	4608      	mov	r0, r1
 800166c:	4798      	blx	r3
 800166e:	bd08      	pop	{r3, pc}

08001670 <_SetInterface>:
 8001670:	2908      	cmp	r1, #8
 8001672:	d002      	beq.n	800167a <_SetInterface+0xa>
 8001674:	2910      	cmp	r1, #16
 8001676:	d005      	beq.n	8001684 <_SetInterface+0x14>
 8001678:	4770      	bx	lr
 800167a:	4b06      	ldr	r3, [pc, #24]	; (8001694 <_SetInterface+0x24>)
 800167c:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 8001680:	4b05      	ldr	r3, [pc, #20]	; (8001698 <_SetInterface+0x28>)
 8001682:	e003      	b.n	800168c <_SetInterface+0x1c>
 8001684:	4b05      	ldr	r3, [pc, #20]	; (800169c <_SetInterface+0x2c>)
 8001686:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800168a:	4b05      	ldr	r3, [pc, #20]	; (80016a0 <_SetInterface+0x30>)
 800168c:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
 8001690:	4770      	bx	lr
 8001692:	bf00      	nop
 8001694:	08001629 	.word	0x08001629
 8001698:	08001641 	.word	0x08001641
 800169c:	08001659 	.word	0x08001659
 80016a0:	08001665 	.word	0x08001665

080016a4 <GUIDRV_FlexColor_SetFunc66708>:
 80016a4:	b510      	push	{r4, lr}
 80016a6:	4604      	mov	r4, r0
 80016a8:	f000 fd94 	bl	80021d4 <GUIDRV_FlexColor__InitOnce>
 80016ac:	68a3      	ldr	r3, [r4, #8]
 80016ae:	4a0b      	ldr	r2, [pc, #44]	; (80016dc <GUIDRV_FlexColor_SetFunc66708+0x38>)
 80016b0:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 80016b4:	4a0a      	ldr	r2, [pc, #40]	; (80016e0 <GUIDRV_FlexColor_SetFunc66708+0x3c>)
 80016b6:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 80016ba:	4a0a      	ldr	r2, [pc, #40]	; (80016e4 <GUIDRV_FlexColor_SetFunc66708+0x40>)
 80016bc:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 80016c0:	4a09      	ldr	r2, [pc, #36]	; (80016e8 <GUIDRV_FlexColor_SetFunc66708+0x44>)
 80016c2:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 80016c6:	4a09      	ldr	r2, [pc, #36]	; (80016ec <GUIDRV_FlexColor_SetFunc66708+0x48>)
 80016c8:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 80016cc:	8cda      	ldrh	r2, [r3, #38]	; 0x26
 80016ce:	f022 0203 	bic.w	r2, r2, #3
 80016d2:	84da      	strh	r2, [r3, #38]	; 0x26
 80016d4:	4a06      	ldr	r2, [pc, #24]	; (80016f0 <GUIDRV_FlexColor_SetFunc66708+0x4c>)
 80016d6:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 80016da:	bd10      	pop	{r4, pc}
 80016dc:	08001379 	.word	0x08001379
 80016e0:	0800141b 	.word	0x0800141b
 80016e4:	080015a9 	.word	0x080015a9
 80016e8:	080015e5 	.word	0x080015e5
 80016ec:	08001609 	.word	0x08001609
 80016f0:	08001671 	.word	0x08001671

080016f4 <_ReadData>:
 80016f4:	b508      	push	{r3, lr}
 80016f6:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 80016fa:	4798      	blx	r3
 80016fc:	bd08      	pop	{r3, pc}

080016fe <_WriteData>:
 80016fe:	b508      	push	{r3, lr}
 8001700:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 8001704:	b288      	uxth	r0, r1
 8001706:	4798      	blx	r3
 8001708:	bd08      	pop	{r3, pc}
	...

0800170c <_FillRect>:
 800170c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001710:	4f3d      	ldr	r7, [pc, #244]	; (8001808 <_FillRect+0xfc>)
 8001712:	6884      	ldr	r4, [r0, #8]
 8001714:	4682      	mov	sl, r0
 8001716:	6838      	ldr	r0, [r7, #0]
 8001718:	7c00      	ldrb	r0, [r0, #16]
 800171a:	f010 0f01 	tst.w	r0, #1
 800171e:	b085      	sub	sp, #20
 8001720:	460e      	mov	r6, r1
 8001722:	4615      	mov	r5, r2
 8001724:	4698      	mov	r8, r3
 8001726:	ebc1 0903 	rsb	r9, r1, r3
 800172a:	d045      	beq.n	80017b8 <_FillRect+0xac>
 800172c:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 8001730:	980e      	ldr	r0, [sp, #56]	; 0x38
 8001732:	4285      	cmp	r5, r0
 8001734:	dc65      	bgt.n	8001802 <_FillRect+0xf6>
 8001736:	f8d4 c0c4 	ldr.w	ip, [r4, #196]	; 0xc4
 800173a:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800173c:	f1bc 0f00 	cmp.w	ip, #0
 8001740:	d101      	bne.n	8001746 <_FillRect+0x3a>
 8001742:	46b4      	mov	ip, r6
 8001744:	e007      	b.n	8001756 <_FillRect+0x4a>
 8001746:	e88d 00a0 	stmia.w	sp, {r5, r7}
 800174a:	4650      	mov	r0, sl
 800174c:	4631      	mov	r1, r6
 800174e:	462a      	mov	r2, r5
 8001750:	4643      	mov	r3, r8
 8001752:	47e0      	blx	ip
 8001754:	e011      	b.n	800177a <_FillRect+0x6e>
 8001756:	45c4      	cmp	ip, r8
 8001758:	dc0e      	bgt.n	8001778 <_FillRect+0x6c>
 800175a:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800175e:	f8cd c00c 	str.w	ip, [sp, #12]
 8001762:	4661      	mov	r1, ip
 8001764:	4650      	mov	r0, sl
 8001766:	462a      	mov	r2, r5
 8001768:	4798      	blx	r3
 800176a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800176e:	f827 0b02 	strh.w	r0, [r7], #2
 8001772:	f10c 0c01 	add.w	ip, ip, #1
 8001776:	e7ee      	b.n	8001756 <_FillRect+0x4a>
 8001778:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800177a:	1ebb      	subs	r3, r7, #2
 800177c:	f109 0c01 	add.w	ip, r9, #1
 8001780:	445f      	add	r7, fp
 8001782:	42bb      	cmp	r3, r7
 8001784:	d005      	beq.n	8001792 <_FillRect+0x86>
 8001786:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8001788:	8859      	ldrh	r1, [r3, #2]
 800178a:	404a      	eors	r2, r1
 800178c:	f823 2f02 	strh.w	r2, [r3, #2]!
 8001790:	e7f7      	b.n	8001782 <_FillRect+0x76>
 8001792:	9500      	str	r5, [sp, #0]
 8001794:	462a      	mov	r2, r5
 8001796:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800179a:	f8cd c00c 	str.w	ip, [sp, #12]
 800179e:	4620      	mov	r0, r4
 80017a0:	4631      	mov	r1, r6
 80017a2:	4643      	mov	r3, r8
 80017a4:	47b8      	blx	r7
 80017a6:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80017aa:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 80017ae:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 80017b0:	4661      	mov	r1, ip
 80017b2:	4798      	blx	r3
 80017b4:	3501      	adds	r5, #1
 80017b6:	e7bb      	b.n	8001730 <_FillRect+0x24>
 80017b8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80017ba:	9000      	str	r0, [sp, #0]
 80017bc:	1a85      	subs	r5, r0, r2
 80017be:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 80017c2:	4620      	mov	r0, r4
 80017c4:	47b0      	blx	r6
 80017c6:	683b      	ldr	r3, [r7, #0]
 80017c8:	6ea7      	ldr	r7, [r4, #104]	; 0x68
 80017ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80017cc:	f109 0901 	add.w	r9, r9, #1
 80017d0:	f8d3 8000 	ldr.w	r8, [r3]
 80017d4:	fb05 9509 	mla	r5, r5, r9, r9
 80017d8:	2301      	movs	r3, #1
 80017da:	b195      	cbz	r5, 8001802 <_FillRect+0xf6>
 80017dc:	2dfa      	cmp	r5, #250	; 0xfa
 80017de:	bf34      	ite	cc
 80017e0:	462e      	movcc	r6, r5
 80017e2:	26fa      	movcs	r6, #250	; 0xfa
 80017e4:	b12b      	cbz	r3, 80017f2 <_FillRect+0xe6>
 80017e6:	4638      	mov	r0, r7
 80017e8:	fa1f f188 	uxth.w	r1, r8
 80017ec:	4632      	mov	r2, r6
 80017ee:	f000 fe11 	bl	8002414 <GUI__memset16>
 80017f2:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 80017f6:	4638      	mov	r0, r7
 80017f8:	4631      	mov	r1, r6
 80017fa:	4798      	blx	r3
 80017fc:	1bad      	subs	r5, r5, r6
 80017fe:	2300      	movs	r3, #0
 8001800:	e7eb      	b.n	80017da <_FillRect+0xce>
 8001802:	b005      	add	sp, #20
 8001804:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001808:	2000000c 	.word	0x2000000c

0800180c <_DrawBitmap>:
 800180c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001810:	b08d      	sub	sp, #52	; 0x34
 8001812:	6885      	ldr	r5, [r0, #8]
 8001814:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8001816:	9305      	str	r3, [sp, #20]
 8001818:	1e7b      	subs	r3, r7, #1
 800181a:	2b01      	cmp	r3, #1
 800181c:	9009      	str	r0, [sp, #36]	; 0x24
 800181e:	9108      	str	r1, [sp, #32]
 8001820:	920a      	str	r2, [sp, #40]	; 0x28
 8001822:	950b      	str	r5, [sp, #44]	; 0x2c
 8001824:	d903      	bls.n	800182e <_DrawBitmap+0x22>
 8001826:	2f04      	cmp	r7, #4
 8001828:	d001      	beq.n	800182e <_DrawBitmap+0x22>
 800182a:	2f08      	cmp	r7, #8
 800182c:	d106      	bne.n	800183c <_DrawBitmap+0x30>
 800182e:	4b8f      	ldr	r3, [pc, #572]	; (8001a6c <_DrawBitmap+0x260>)
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	7c1b      	ldrb	r3, [r3, #16]
 8001834:	f003 0303 	and.w	r3, r3, #3
 8001838:	2b02      	cmp	r3, #2
 800183a:	d010      	beq.n	800185e <_DrawBitmap+0x52>
 800183c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800183e:	9f16      	ldr	r7, [sp, #88]	; 0x58
 8001840:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8001842:	9908      	ldr	r1, [sp, #32]
 8001844:	9b05      	ldr	r3, [sp, #20]
 8001846:	443a      	add	r2, r7
 8001848:	4429      	add	r1, r5
 800184a:	3a01      	subs	r2, #1
 800184c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800184e:	9200      	str	r2, [sp, #0]
 8001850:	440b      	add	r3, r1
 8001852:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 8001856:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001858:	4628      	mov	r0, r5
 800185a:	3b01      	subs	r3, #1
 800185c:	47a0      	blx	r4
 800185e:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8001862:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8001864:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8001866:	ebc7 030b 	rsb	r3, r7, fp
 800186a:	42ab      	cmp	r3, r5
 800186c:	f280 8251 	bge.w	8001d12 <_DrawBitmap+0x506>
 8001870:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8001872:	1e7b      	subs	r3, r7, #1
 8001874:	2b0f      	cmp	r3, #15
 8001876:	f200 8245 	bhi.w	8001d04 <_DrawBitmap+0x4f8>
 800187a:	e8df f013 	tbh	[pc, r3, lsl #1]
 800187e:	0010      	.short	0x0010
 8001880:	024300b7 	.word	0x024300b7
 8001884:	02430140 	.word	0x02430140
 8001888:	02430243 	.word	0x02430243
 800188c:	024301d7 	.word	0x024301d7
 8001890:	02430243 	.word	0x02430243
 8001894:	02430243 	.word	0x02430243
 8001898:	02430243 	.word	0x02430243
 800189c:	023d      	.short	0x023d
 800189e:	4b73      	ldr	r3, [pc, #460]	; (8001a6c <_DrawBitmap+0x260>)
 80018a0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80018a2:	681b      	ldr	r3, [r3, #0]
 80018a4:	68ac      	ldr	r4, [r5, #8]
 80018a6:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 80018a8:	7c1b      	ldrb	r3, [r3, #16]
 80018aa:	682f      	ldr	r7, [r5, #0]
 80018ac:	686d      	ldr	r5, [r5, #4]
 80018ae:	9507      	str	r5, [sp, #28]
 80018b0:	f8dd a020 	ldr.w	sl, [sp, #32]
 80018b4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80018b6:	f003 0303 	and.w	r3, r3, #3
 80018ba:	2b02      	cmp	r3, #2
 80018bc:	44aa      	add	sl, r5
 80018be:	d01b      	beq.n	80018f8 <_DrawBitmap+0xec>
 80018c0:	2b03      	cmp	r3, #3
 80018c2:	d06e      	beq.n	80019a2 <_DrawBitmap+0x196>
 80018c4:	2b01      	cmp	r3, #1
 80018c6:	d06c      	beq.n	80019a2 <_DrawBitmap+0x196>
 80018c8:	9e05      	ldr	r6, [sp, #20]
 80018ca:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 80018ce:	f898 1000 	ldrb.w	r1, [r8]
 80018d2:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 80018d6:	2280      	movs	r2, #128	; 0x80
 80018d8:	412a      	asrs	r2, r5
 80018da:	4211      	tst	r1, r2
 80018dc:	bf16      	itet	ne
 80018de:	9907      	ldrne	r1, [sp, #28]
 80018e0:	b2b8      	uxtheq	r0, r7
 80018e2:	b288      	uxthne	r0, r1
 80018e4:	3501      	adds	r5, #1
 80018e6:	4798      	blx	r3
 80018e8:	2d08      	cmp	r5, #8
 80018ea:	bf04      	itt	eq
 80018ec:	f108 0801 	addeq.w	r8, r8, #1
 80018f0:	2500      	moveq	r5, #0
 80018f2:	3e01      	subs	r6, #1
 80018f4:	d1eb      	bne.n	80018ce <_DrawBitmap+0xc2>
 80018f6:	e205      	b.n	8001d04 <_DrawBitmap+0x4f8>
 80018f8:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80018fa:	9506      	str	r5, [sp, #24]
 80018fc:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 8001900:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8001904:	f8cd a00c 	str.w	sl, [sp, #12]
 8001908:	2500      	movs	r5, #0
 800190a:	4656      	mov	r6, sl
 800190c:	462b      	mov	r3, r5
 800190e:	9f06      	ldr	r7, [sp, #24]
 8001910:	f04f 0c80 	mov.w	ip, #128	; 0x80
 8001914:	783a      	ldrb	r2, [r7, #0]
 8001916:	fa4c fc08 	asr.w	ip, ip, r8
 800191a:	ea12 0c0c 	ands.w	ip, r2, ip
 800191e:	d00b      	beq.n	8001938 <_DrawBitmap+0x12c>
 8001920:	b913      	cbnz	r3, 8001928 <_DrawBitmap+0x11c>
 8001922:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 8001926:	9603      	str	r6, [sp, #12]
 8001928:	9f07      	ldr	r7, [sp, #28]
 800192a:	f8a9 7000 	strh.w	r7, [r9]
 800192e:	3501      	adds	r5, #1
 8001930:	f109 0902 	add.w	r9, r9, #2
 8001934:	2301      	movs	r3, #1
 8001936:	e017      	b.n	8001968 <_DrawBitmap+0x15c>
 8001938:	2b01      	cmp	r3, #1
 800193a:	d114      	bne.n	8001966 <_DrawBitmap+0x15a>
 800193c:	f8cd b000 	str.w	fp, [sp]
 8001940:	f8cd c010 	str.w	ip, [sp, #16]
 8001944:	4620      	mov	r0, r4
 8001946:	9903      	ldr	r1, [sp, #12]
 8001948:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800194c:	465a      	mov	r2, fp
 800194e:	1e73      	subs	r3, r6, #1
 8001950:	47b8      	blx	r7
 8001952:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8001956:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001958:	4629      	mov	r1, r5
 800195a:	4798      	blx	r3
 800195c:	f8dd c010 	ldr.w	ip, [sp, #16]
 8001960:	4665      	mov	r5, ip
 8001962:	4663      	mov	r3, ip
 8001964:	e000      	b.n	8001968 <_DrawBitmap+0x15c>
 8001966:	4663      	mov	r3, ip
 8001968:	f108 0801 	add.w	r8, r8, #1
 800196c:	f1b8 0f08 	cmp.w	r8, #8
 8001970:	f106 0601 	add.w	r6, r6, #1
 8001974:	d104      	bne.n	8001980 <_DrawBitmap+0x174>
 8001976:	9f06      	ldr	r7, [sp, #24]
 8001978:	3701      	adds	r7, #1
 800197a:	9706      	str	r7, [sp, #24]
 800197c:	f04f 0800 	mov.w	r8, #0
 8001980:	9a05      	ldr	r2, [sp, #20]
 8001982:	4452      	add	r2, sl
 8001984:	42b2      	cmp	r2, r6
 8001986:	d1c2      	bne.n	800190e <_DrawBitmap+0x102>
 8001988:	9f05      	ldr	r7, [sp, #20]
 800198a:	1e7b      	subs	r3, r7, #1
 800198c:	4453      	add	r3, sl
 800198e:	2d00      	cmp	r5, #0
 8001990:	f000 81b8 	beq.w	8001d04 <_DrawBitmap+0x4f8>
 8001994:	f8cd b000 	str.w	fp, [sp]
 8001998:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800199c:	9903      	ldr	r1, [sp, #12]
 800199e:	4620      	mov	r0, r4
 80019a0:	e13d      	b.n	8001c1e <_DrawBitmap+0x412>
 80019a2:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80019a6:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 80019a8:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80019aa:	f8dd 9014 	ldr.w	r9, [sp, #20]
 80019ae:	782a      	ldrb	r2, [r5, #0]
 80019b0:	2380      	movs	r3, #128	; 0x80
 80019b2:	4133      	asrs	r3, r6
 80019b4:	44d1      	add	r9, sl
 80019b6:	421a      	tst	r2, r3
 80019b8:	ebc8 0909 	rsb	r9, r8, r9
 80019bc:	d00d      	beq.n	80019da <_DrawBitmap+0x1ce>
 80019be:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 80019c2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80019c4:	4649      	mov	r1, r9
 80019c6:	465a      	mov	r2, fp
 80019c8:	4798      	blx	r3
 80019ca:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80019cc:	f8d4 70f0 	ldr.w	r7, [r4, #240]	; 0xf0
 80019d0:	4043      	eors	r3, r0
 80019d2:	4649      	mov	r1, r9
 80019d4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80019d6:	465a      	mov	r2, fp
 80019d8:	47b8      	blx	r7
 80019da:	3601      	adds	r6, #1
 80019dc:	2e08      	cmp	r6, #8
 80019de:	bf04      	itt	eq
 80019e0:	3501      	addeq	r5, #1
 80019e2:	2600      	moveq	r6, #0
 80019e4:	f1b8 0801 	subs.w	r8, r8, #1
 80019e8:	d1df      	bne.n	80019aa <_DrawBitmap+0x19e>
 80019ea:	e18b      	b.n	8001d04 <_DrawBitmap+0x4f8>
 80019ec:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80019ee:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80019f0:	68ac      	ldr	r4, [r5, #8]
 80019f2:	2f00      	cmp	r7, #0
 80019f4:	f000 8186 	beq.w	8001d04 <_DrawBitmap+0x4f8>
 80019f8:	4b1c      	ldr	r3, [pc, #112]	; (8001a6c <_DrawBitmap+0x260>)
 80019fa:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80019fc:	681b      	ldr	r3, [r3, #0]
 80019fe:	f895 a000 	ldrb.w	sl, [r5]
 8001a02:	7c1b      	ldrb	r3, [r3, #16]
 8001a04:	f013 0303 	ands.w	r3, r3, #3
 8001a08:	d011      	beq.n	8001a2e <_DrawBitmap+0x222>
 8001a0a:	2b02      	cmp	r3, #2
 8001a0c:	f040 817a 	bne.w	8001d04 <_DrawBitmap+0x4f8>
 8001a10:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8001a12:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001a16:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8001a18:	9703      	str	r7, [sp, #12]
 8001a1a:	44a9      	add	r9, r5
 8001a1c:	46a8      	mov	r8, r5
 8001a1e:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8001a20:	9507      	str	r5, [sp, #28]
 8001a22:	2500      	movs	r5, #0
 8001a24:	f8cd 9018 	str.w	r9, [sp, #24]
 8001a28:	464e      	mov	r6, r9
 8001a2a:	462b      	mov	r3, r5
 8001a2c:	e040      	b.n	8001ab0 <_DrawBitmap+0x2a4>
 8001a2e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8001a30:	9e05      	ldr	r6, [sp, #20]
 8001a32:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8001a34:	f1c5 0303 	rsb	r3, r5, #3
 8001a38:	005b      	lsls	r3, r3, #1
 8001a3a:	f1c3 0206 	rsb	r2, r3, #6
 8001a3e:	21c0      	movs	r1, #192	; 0xc0
 8001a40:	fa41 f202 	asr.w	r2, r1, r2
 8001a44:	ea02 020a 	and.w	r2, r2, sl
 8001a48:	40da      	lsrs	r2, r3
 8001a4a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8001a4c:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 8001a50:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 8001a54:	3501      	adds	r5, #1
 8001a56:	4798      	blx	r3
 8001a58:	2d04      	cmp	r5, #4
 8001a5a:	d103      	bne.n	8001a64 <_DrawBitmap+0x258>
 8001a5c:	f897 a001 	ldrb.w	sl, [r7, #1]
 8001a60:	2500      	movs	r5, #0
 8001a62:	3701      	adds	r7, #1
 8001a64:	3e01      	subs	r6, #1
 8001a66:	d1e5      	bne.n	8001a34 <_DrawBitmap+0x228>
 8001a68:	e14c      	b.n	8001d04 <_DrawBitmap+0x4f8>
 8001a6a:	bf00      	nop
 8001a6c:	2000000c 	.word	0x2000000c
 8001a70:	b913      	cbnz	r3, 8001a78 <_DrawBitmap+0x26c>
 8001a72:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8001a74:	9703      	str	r7, [sp, #12]
 8001a76:	9606      	str	r6, [sp, #24]
 8001a78:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8001a7a:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 8001a7e:	9f03      	ldr	r7, [sp, #12]
 8001a80:	803b      	strh	r3, [r7, #0]
 8001a82:	3702      	adds	r7, #2
 8001a84:	3501      	adds	r5, #1
 8001a86:	9703      	str	r7, [sp, #12]
 8001a88:	2301      	movs	r3, #1
 8001a8a:	f108 0801 	add.w	r8, r8, #1
 8001a8e:	f1b8 0f04 	cmp.w	r8, #4
 8001a92:	f106 0601 	add.w	r6, r6, #1
 8001a96:	d106      	bne.n	8001aa6 <_DrawBitmap+0x29a>
 8001a98:	9f07      	ldr	r7, [sp, #28]
 8001a9a:	f897 a001 	ldrb.w	sl, [r7, #1]
 8001a9e:	3701      	adds	r7, #1
 8001aa0:	9707      	str	r7, [sp, #28]
 8001aa2:	f04f 0800 	mov.w	r8, #0
 8001aa6:	9a05      	ldr	r2, [sp, #20]
 8001aa8:	444a      	add	r2, r9
 8001aaa:	42b2      	cmp	r2, r6
 8001aac:	f000 80ac 	beq.w	8001c08 <_DrawBitmap+0x3fc>
 8001ab0:	f1c8 0203 	rsb	r2, r8, #3
 8001ab4:	0052      	lsls	r2, r2, #1
 8001ab6:	f1c2 0106 	rsb	r1, r2, #6
 8001aba:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 8001abe:	fa4c fc01 	asr.w	ip, ip, r1
 8001ac2:	ea0c 0c0a 	and.w	ip, ip, sl
 8001ac6:	fa3c fc02 	lsrs.w	ip, ip, r2
 8001aca:	d1d1      	bne.n	8001a70 <_DrawBitmap+0x264>
 8001acc:	2b01      	cmp	r3, #1
 8001ace:	d114      	bne.n	8001afa <_DrawBitmap+0x2ee>
 8001ad0:	f8cd b000 	str.w	fp, [sp]
 8001ad4:	f8cd c010 	str.w	ip, [sp, #16]
 8001ad8:	4620      	mov	r0, r4
 8001ada:	9906      	ldr	r1, [sp, #24]
 8001adc:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8001ae0:	465a      	mov	r2, fp
 8001ae2:	1e73      	subs	r3, r6, #1
 8001ae4:	47b8      	blx	r7
 8001ae6:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8001aea:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001aec:	4629      	mov	r1, r5
 8001aee:	4798      	blx	r3
 8001af0:	f8dd c010 	ldr.w	ip, [sp, #16]
 8001af4:	4665      	mov	r5, ip
 8001af6:	4663      	mov	r3, ip
 8001af8:	e7c7      	b.n	8001a8a <_DrawBitmap+0x27e>
 8001afa:	4663      	mov	r3, ip
 8001afc:	e7c5      	b.n	8001a8a <_DrawBitmap+0x27e>
 8001afe:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8001b00:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8001b02:	68ac      	ldr	r4, [r5, #8]
 8001b04:	2f00      	cmp	r7, #0
 8001b06:	f000 80fd 	beq.w	8001d04 <_DrawBitmap+0x4f8>
 8001b0a:	4b83      	ldr	r3, [pc, #524]	; (8001d18 <_DrawBitmap+0x50c>)
 8001b0c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8001b0e:	681b      	ldr	r3, [r3, #0]
 8001b10:	f895 a000 	ldrb.w	sl, [r5]
 8001b14:	7c1b      	ldrb	r3, [r3, #16]
 8001b16:	f013 0303 	ands.w	r3, r3, #3
 8001b1a:	d011      	beq.n	8001b40 <_DrawBitmap+0x334>
 8001b1c:	2b02      	cmp	r3, #2
 8001b1e:	f040 80f1 	bne.w	8001d04 <_DrawBitmap+0x4f8>
 8001b22:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8001b24:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001b28:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8001b2a:	9703      	str	r7, [sp, #12]
 8001b2c:	44a9      	add	r9, r5
 8001b2e:	46a8      	mov	r8, r5
 8001b30:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8001b32:	9507      	str	r5, [sp, #28]
 8001b34:	2500      	movs	r5, #0
 8001b36:	f8cd 9018 	str.w	r9, [sp, #24]
 8001b3a:	464e      	mov	r6, r9
 8001b3c:	462b      	mov	r3, r5
 8001b3e:	e03c      	b.n	8001bba <_DrawBitmap+0x3ae>
 8001b40:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8001b42:	9e05      	ldr	r6, [sp, #20]
 8001b44:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8001b46:	f1c5 0301 	rsb	r3, r5, #1
 8001b4a:	009b      	lsls	r3, r3, #2
 8001b4c:	f1c3 0204 	rsb	r2, r3, #4
 8001b50:	21f0      	movs	r1, #240	; 0xf0
 8001b52:	fa41 f202 	asr.w	r2, r1, r2
 8001b56:	ea02 020a 	and.w	r2, r2, sl
 8001b5a:	40da      	lsrs	r2, r3
 8001b5c:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8001b5e:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 8001b62:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 8001b66:	3501      	adds	r5, #1
 8001b68:	4798      	blx	r3
 8001b6a:	2d02      	cmp	r5, #2
 8001b6c:	d103      	bne.n	8001b76 <_DrawBitmap+0x36a>
 8001b6e:	f897 a001 	ldrb.w	sl, [r7, #1]
 8001b72:	2500      	movs	r5, #0
 8001b74:	3701      	adds	r7, #1
 8001b76:	3e01      	subs	r6, #1
 8001b78:	d1e5      	bne.n	8001b46 <_DrawBitmap+0x33a>
 8001b7a:	e0c3      	b.n	8001d04 <_DrawBitmap+0x4f8>
 8001b7c:	b913      	cbnz	r3, 8001b84 <_DrawBitmap+0x378>
 8001b7e:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8001b80:	9703      	str	r7, [sp, #12]
 8001b82:	9606      	str	r6, [sp, #24]
 8001b84:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8001b86:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 8001b8a:	9f03      	ldr	r7, [sp, #12]
 8001b8c:	803b      	strh	r3, [r7, #0]
 8001b8e:	3702      	adds	r7, #2
 8001b90:	3501      	adds	r5, #1
 8001b92:	9703      	str	r7, [sp, #12]
 8001b94:	2301      	movs	r3, #1
 8001b96:	f108 0801 	add.w	r8, r8, #1
 8001b9a:	f1b8 0f02 	cmp.w	r8, #2
 8001b9e:	f106 0601 	add.w	r6, r6, #1
 8001ba2:	d106      	bne.n	8001bb2 <_DrawBitmap+0x3a6>
 8001ba4:	9f07      	ldr	r7, [sp, #28]
 8001ba6:	f897 a001 	ldrb.w	sl, [r7, #1]
 8001baa:	3701      	adds	r7, #1
 8001bac:	9707      	str	r7, [sp, #28]
 8001bae:	f04f 0800 	mov.w	r8, #0
 8001bb2:	9a05      	ldr	r2, [sp, #20]
 8001bb4:	444a      	add	r2, r9
 8001bb6:	42b2      	cmp	r2, r6
 8001bb8:	d026      	beq.n	8001c08 <_DrawBitmap+0x3fc>
 8001bba:	f1c8 0201 	rsb	r2, r8, #1
 8001bbe:	0092      	lsls	r2, r2, #2
 8001bc0:	f1c2 0104 	rsb	r1, r2, #4
 8001bc4:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 8001bc8:	fa4c fc01 	asr.w	ip, ip, r1
 8001bcc:	ea0c 0c0a 	and.w	ip, ip, sl
 8001bd0:	fa3c fc02 	lsrs.w	ip, ip, r2
 8001bd4:	d1d2      	bne.n	8001b7c <_DrawBitmap+0x370>
 8001bd6:	2b01      	cmp	r3, #1
 8001bd8:	d114      	bne.n	8001c04 <_DrawBitmap+0x3f8>
 8001bda:	f8cd b000 	str.w	fp, [sp]
 8001bde:	f8cd c010 	str.w	ip, [sp, #16]
 8001be2:	4620      	mov	r0, r4
 8001be4:	9906      	ldr	r1, [sp, #24]
 8001be6:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8001bea:	465a      	mov	r2, fp
 8001bec:	1e73      	subs	r3, r6, #1
 8001bee:	47b8      	blx	r7
 8001bf0:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8001bf4:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001bf6:	4629      	mov	r1, r5
 8001bf8:	4798      	blx	r3
 8001bfa:	f8dd c010 	ldr.w	ip, [sp, #16]
 8001bfe:	4665      	mov	r5, ip
 8001c00:	4663      	mov	r3, ip
 8001c02:	e7c8      	b.n	8001b96 <_DrawBitmap+0x38a>
 8001c04:	4663      	mov	r3, ip
 8001c06:	e7c6      	b.n	8001b96 <_DrawBitmap+0x38a>
 8001c08:	9f05      	ldr	r7, [sp, #20]
 8001c0a:	1e7b      	subs	r3, r7, #1
 8001c0c:	444b      	add	r3, r9
 8001c0e:	2d00      	cmp	r5, #0
 8001c10:	d078      	beq.n	8001d04 <_DrawBitmap+0x4f8>
 8001c12:	f8cd b000 	str.w	fp, [sp]
 8001c16:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8001c1a:	9906      	ldr	r1, [sp, #24]
 8001c1c:	4620      	mov	r0, r4
 8001c1e:	465a      	mov	r2, fp
 8001c20:	47b0      	blx	r6
 8001c22:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8001c26:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001c28:	4629      	mov	r1, r5
 8001c2a:	e06a      	b.n	8001d02 <_DrawBitmap+0x4f6>
 8001c2c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8001c2e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8001c30:	68ac      	ldr	r4, [r5, #8]
 8001c32:	2f00      	cmp	r7, #0
 8001c34:	d066      	beq.n	8001d04 <_DrawBitmap+0x4f8>
 8001c36:	4b38      	ldr	r3, [pc, #224]	; (8001d18 <_DrawBitmap+0x50c>)
 8001c38:	681b      	ldr	r3, [r3, #0]
 8001c3a:	7c1b      	ldrb	r3, [r3, #16]
 8001c3c:	f013 0303 	ands.w	r3, r3, #3
 8001c40:	d009      	beq.n	8001c56 <_DrawBitmap+0x44a>
 8001c42:	2b02      	cmp	r3, #2
 8001c44:	d15e      	bne.n	8001d04 <_DrawBitmap+0x4f8>
 8001c46:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001c4a:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 8001c4e:	2600      	movs	r6, #0
 8001c50:	464f      	mov	r7, r9
 8001c52:	4633      	mov	r3, r6
 8001c54:	e022      	b.n	8001c9c <_DrawBitmap+0x490>
 8001c56:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8001c58:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8001c5a:	9f05      	ldr	r7, [sp, #20]
 8001c5c:	443b      	add	r3, r7
 8001c5e:	1b5b      	subs	r3, r3, r5
 8001c60:	2b00      	cmp	r3, #0
 8001c62:	dd4f      	ble.n	8001d04 <_DrawBitmap+0x4f8>
 8001c64:	f815 2b01 	ldrb.w	r2, [r5], #1
 8001c68:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8001c6a:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 8001c6e:	f837 0022 	ldrh.w	r0, [r7, r2, lsl #2]
 8001c72:	4798      	blx	r3
 8001c74:	e7f0      	b.n	8001c58 <_DrawBitmap+0x44c>
 8001c76:	b913      	cbnz	r3, 8001c7e <_DrawBitmap+0x472>
 8001c78:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 8001c7c:	46b9      	mov	r9, r7
 8001c7e:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8001c80:	f855 302a 	ldr.w	r3, [r5, sl, lsl #2]
 8001c84:	f8a8 3000 	strh.w	r3, [r8]
 8001c88:	3601      	adds	r6, #1
 8001c8a:	f108 0802 	add.w	r8, r8, #2
 8001c8e:	2301      	movs	r3, #1
 8001c90:	9a08      	ldr	r2, [sp, #32]
 8001c92:	9d05      	ldr	r5, [sp, #20]
 8001c94:	3701      	adds	r7, #1
 8001c96:	442a      	add	r2, r5
 8001c98:	42ba      	cmp	r2, r7
 8001c9a:	d01c      	beq.n	8001cd6 <_DrawBitmap+0x4ca>
 8001c9c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8001c9e:	9808      	ldr	r0, [sp, #32]
 8001ca0:	1a2a      	subs	r2, r5, r0
 8001ca2:	f812 a007 	ldrb.w	sl, [r2, r7]
 8001ca6:	f1ba 0f00 	cmp.w	sl, #0
 8001caa:	d1e4      	bne.n	8001c76 <_DrawBitmap+0x46a>
 8001cac:	2b01      	cmp	r3, #1
 8001cae:	d110      	bne.n	8001cd2 <_DrawBitmap+0x4c6>
 8001cb0:	f8cd b000 	str.w	fp, [sp]
 8001cb4:	4620      	mov	r0, r4
 8001cb6:	4649      	mov	r1, r9
 8001cb8:	465a      	mov	r2, fp
 8001cba:	1e7b      	subs	r3, r7, #1
 8001cbc:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 8001cc0:	47a8      	blx	r5
 8001cc2:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8001cc6:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001cc8:	4631      	mov	r1, r6
 8001cca:	4798      	blx	r3
 8001ccc:	4656      	mov	r6, sl
 8001cce:	4653      	mov	r3, sl
 8001cd0:	e7de      	b.n	8001c90 <_DrawBitmap+0x484>
 8001cd2:	4653      	mov	r3, sl
 8001cd4:	e7dc      	b.n	8001c90 <_DrawBitmap+0x484>
 8001cd6:	9f08      	ldr	r7, [sp, #32]
 8001cd8:	1e6b      	subs	r3, r5, #1
 8001cda:	443b      	add	r3, r7
 8001cdc:	b196      	cbz	r6, 8001d04 <_DrawBitmap+0x4f8>
 8001cde:	f8cd b000 	str.w	fp, [sp]
 8001ce2:	4620      	mov	r0, r4
 8001ce4:	4649      	mov	r1, r9
 8001ce6:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 8001cea:	465a      	mov	r2, fp
 8001cec:	47a8      	blx	r5
 8001cee:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8001cf2:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001cf4:	4631      	mov	r1, r6
 8001cf6:	e004      	b.n	8001d02 <_DrawBitmap+0x4f6>
 8001cf8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8001cfa:	9819      	ldr	r0, [sp, #100]	; 0x64
 8001cfc:	f8d5 3138 	ldr.w	r3, [r5, #312]	; 0x138
 8001d00:	9905      	ldr	r1, [sp, #20]
 8001d02:	4798      	blx	r3
 8001d04:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8001d06:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8001d08:	442f      	add	r7, r5
 8001d0a:	9719      	str	r7, [sp, #100]	; 0x64
 8001d0c:	f10b 0b01 	add.w	fp, fp, #1
 8001d10:	e5a7      	b.n	8001862 <_DrawBitmap+0x56>
 8001d12:	b00d      	add	sp, #52	; 0x34
 8001d14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001d18:	2000000c 	.word	0x2000000c

08001d1c <GUIDRV_FlexColor_SetMode16bppC0B16>:
 8001d1c:	b510      	push	{r4, lr}
 8001d1e:	4604      	mov	r4, r0
 8001d20:	f000 fa58 	bl	80021d4 <GUIDRV_FlexColor__InitOnce>
 8001d24:	68a4      	ldr	r4, [r4, #8]
 8001d26:	4b10      	ldr	r3, [pc, #64]	; (8001d68 <GUIDRV_FlexColor_SetMode16bppC0B16+0x4c>)
 8001d28:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
 8001d2c:	4b0f      	ldr	r3, [pc, #60]	; (8001d6c <GUIDRV_FlexColor_SetMode16bppC0B16+0x50>)
 8001d2e:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 8001d32:	4b0f      	ldr	r3, [pc, #60]	; (8001d70 <GUIDRV_FlexColor_SetMode16bppC0B16+0x54>)
 8001d34:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8001d38:	4b0e      	ldr	r3, [pc, #56]	; (8001d74 <GUIDRV_FlexColor_SetMode16bppC0B16+0x58>)
 8001d3a:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 8001d3e:	4b0e      	ldr	r3, [pc, #56]	; (8001d78 <GUIDRV_FlexColor_SetMode16bppC0B16+0x5c>)
 8001d40:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 8001d44:	4b0d      	ldr	r3, [pc, #52]	; (8001d7c <GUIDRV_FlexColor_SetMode16bppC0B16+0x60>)
 8001d46:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 8001d4a:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
 8001d4e:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 8001d52:	4620      	mov	r0, r4
 8001d54:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 8001d58:	2110      	movs	r1, #16
 8001d5a:	4798      	blx	r3
 8001d5c:	2310      	movs	r3, #16
 8001d5e:	63a3      	str	r3, [r4, #56]	; 0x38
 8001d60:	4b07      	ldr	r3, [pc, #28]	; (8001d80 <GUIDRV_FlexColor_SetMode16bppC0B16+0x64>)
 8001d62:	6463      	str	r3, [r4, #68]	; 0x44
 8001d64:	bd10      	pop	{r4, pc}
 8001d66:	bf00      	nop
 8001d68:	0800180d 	.word	0x0800180d
 8001d6c:	0800170d 	.word	0x0800170d
 8001d70:	08002123 	.word	0x08002123
 8001d74:	08002093 	.word	0x08002093
 8001d78:	080016f5 	.word	0x080016f5
 8001d7c:	080016ff 	.word	0x080016ff
 8001d80:	0800682c 	.word	0x0800682c

08001d84 <_Log2PhysX_X0Y0S0>:
 8001d84:	4608      	mov	r0, r1
 8001d86:	4770      	bx	lr

08001d88 <_Log2PhysX_X1Y0S0>:
 8001d88:	6800      	ldr	r0, [r0, #0]
 8001d8a:	1a40      	subs	r0, r0, r1
 8001d8c:	3801      	subs	r0, #1
 8001d8e:	4770      	bx	lr

08001d90 <_Log2PhysX_X0Y1S0>:
 8001d90:	4608      	mov	r0, r1
 8001d92:	4770      	bx	lr

08001d94 <_Log2PhysX_X1Y1S0>:
 8001d94:	6800      	ldr	r0, [r0, #0]
 8001d96:	1a40      	subs	r0, r0, r1
 8001d98:	3801      	subs	r0, #1
 8001d9a:	4770      	bx	lr

08001d9c <_Log2PhysX_X0Y0S1>:
 8001d9c:	4610      	mov	r0, r2
 8001d9e:	4770      	bx	lr

08001da0 <_Log2PhysX_X1Y0S1>:
 8001da0:	6840      	ldr	r0, [r0, #4]
 8001da2:	1a80      	subs	r0, r0, r2
 8001da4:	3801      	subs	r0, #1
 8001da6:	4770      	bx	lr

08001da8 <_Log2PhysX_X0Y1S1>:
 8001da8:	4610      	mov	r0, r2
 8001daa:	4770      	bx	lr

08001dac <_Log2PhysX_X1Y1S1>:
 8001dac:	6840      	ldr	r0, [r0, #4]
 8001dae:	1a80      	subs	r0, r0, r2
 8001db0:	3801      	subs	r0, #1
 8001db2:	4770      	bx	lr

08001db4 <_Log2PhysY_X0Y0S0>:
 8001db4:	4610      	mov	r0, r2
 8001db6:	4770      	bx	lr

08001db8 <_Log2PhysY_X1Y0S0>:
 8001db8:	4610      	mov	r0, r2
 8001dba:	4770      	bx	lr

08001dbc <_Log2PhysY_X0Y1S0>:
 8001dbc:	6840      	ldr	r0, [r0, #4]
 8001dbe:	1a80      	subs	r0, r0, r2
 8001dc0:	3801      	subs	r0, #1
 8001dc2:	4770      	bx	lr

08001dc4 <_Log2PhysY_X1Y1S0>:
 8001dc4:	6840      	ldr	r0, [r0, #4]
 8001dc6:	1a80      	subs	r0, r0, r2
 8001dc8:	3801      	subs	r0, #1
 8001dca:	4770      	bx	lr

08001dcc <_Log2PhysY_X0Y0S1>:
 8001dcc:	4608      	mov	r0, r1
 8001dce:	4770      	bx	lr

08001dd0 <_Log2PhysY_X1Y0S1>:
 8001dd0:	4608      	mov	r0, r1
 8001dd2:	4770      	bx	lr

08001dd4 <_Log2PhysY_X0Y1S1>:
 8001dd4:	6800      	ldr	r0, [r0, #0]
 8001dd6:	1a40      	subs	r0, r0, r1
 8001dd8:	3801      	subs	r0, #1
 8001dda:	4770      	bx	lr

08001ddc <_Log2PhysY_X1Y1S1>:
 8001ddc:	6800      	ldr	r0, [r0, #0]
 8001dde:	1a40      	subs	r0, r0, r1
 8001de0:	3801      	subs	r0, #1
 8001de2:	4770      	bx	lr

08001de4 <_SetPixelIndex>:
 8001de4:	b510      	push	{r4, lr}
 8001de6:	6884      	ldr	r4, [r0, #8]
 8001de8:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 8001dec:	47a0      	blx	r4
 8001dee:	bd10      	pop	{r4, pc}

08001df0 <_GetPixelIndex>:
 8001df0:	b508      	push	{r3, lr}
 8001df2:	6883      	ldr	r3, [r0, #8]
 8001df4:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8001df8:	4798      	blx	r3
 8001dfa:	bd08      	pop	{r3, pc}

08001dfc <_XorPixel>:
 8001dfc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001dfe:	4604      	mov	r4, r0
 8001e00:	460f      	mov	r7, r1
 8001e02:	4616      	mov	r6, r2
 8001e04:	6885      	ldr	r5, [r0, #8]
 8001e06:	f7ff fff3 	bl	8001df0 <_GetPixelIndex>
 8001e0a:	9001      	str	r0, [sp, #4]
 8001e0c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8001e10:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8001e12:	4620      	mov	r0, r4
 8001e14:	4639      	mov	r1, r7
 8001e16:	4632      	mov	r2, r6
 8001e18:	ea8e 0303 	eor.w	r3, lr, r3
 8001e1c:	f7ff ffe2 	bl	8001de4 <_SetPixelIndex>
 8001e20:	b003      	add	sp, #12
 8001e22:	bdf0      	pop	{r4, r5, r6, r7, pc}

08001e24 <_DrawHLine>:
 8001e24:	b513      	push	{r0, r1, r4, lr}
 8001e26:	6884      	ldr	r4, [r0, #8]
 8001e28:	9200      	str	r2, [sp, #0]
 8001e2a:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 8001e2e:	47a0      	blx	r4
 8001e30:	b002      	add	sp, #8
 8001e32:	bd10      	pop	{r4, pc}

08001e34 <_DrawVLine>:
 8001e34:	b513      	push	{r0, r1, r4, lr}
 8001e36:	6884      	ldr	r4, [r0, #8]
 8001e38:	9300      	str	r3, [sp, #0]
 8001e3a:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 8001e3e:	460b      	mov	r3, r1
 8001e40:	47a0      	blx	r4
 8001e42:	b002      	add	sp, #8
 8001e44:	bd10      	pop	{r4, pc}

08001e46 <_FillRect>:
 8001e46:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001e48:	9c06      	ldr	r4, [sp, #24]
 8001e4a:	6885      	ldr	r5, [r0, #8]
 8001e4c:	9400      	str	r4, [sp, #0]
 8001e4e:	f8d5 40e8 	ldr.w	r4, [r5, #232]	; 0xe8
 8001e52:	47a0      	blx	r4
 8001e54:	b003      	add	sp, #12
 8001e56:	bd30      	pop	{r4, r5, pc}

08001e58 <_DrawBitmap>:
 8001e58:	b530      	push	{r4, r5, lr}
 8001e5a:	b087      	sub	sp, #28
 8001e5c:	6885      	ldr	r5, [r0, #8]
 8001e5e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8001e60:	9400      	str	r4, [sp, #0]
 8001e62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8001e64:	9401      	str	r4, [sp, #4]
 8001e66:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8001e68:	9402      	str	r4, [sp, #8]
 8001e6a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8001e6c:	9403      	str	r4, [sp, #12]
 8001e6e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8001e70:	9404      	str	r4, [sp, #16]
 8001e72:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8001e74:	9405      	str	r4, [sp, #20]
 8001e76:	f8d5 40e4 	ldr.w	r4, [r5, #228]	; 0xe4
 8001e7a:	47a0      	blx	r4
 8001e7c:	b007      	add	sp, #28
 8001e7e:	bd30      	pop	{r4, r5, pc}

08001e80 <_GetDevFunc_SetRect>:
 8001e80:	4770      	bx	lr
	...

08001e84 <_GetDevFunc_SetRectOutside>:
 8001e84:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001e86:	9e07      	ldr	r6, [sp, #28]
 8001e88:	6884      	ldr	r4, [r0, #8]
 8001e8a:	4d0c      	ldr	r5, [pc, #48]	; (8001ebc <_GetDevFunc_SetRectOutside+0x38>)
 8001e8c:	b176      	cbz	r6, 8001eac <_GetDevFunc_SetRectOutside+0x28>
 8001e8e:	6828      	ldr	r0, [r5, #0]
 8001e90:	b988      	cbnz	r0, 8001eb6 <_GetDevFunc_SetRectOutside+0x32>
 8001e92:	9806      	ldr	r0, [sp, #24]
 8001e94:	9000      	str	r0, [sp, #0]
 8001e96:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8001e9a:	4620      	mov	r0, r4
 8001e9c:	47b0      	blx	r6
 8001e9e:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
 8001ea2:	602b      	str	r3, [r5, #0]
 8001ea4:	4b06      	ldr	r3, [pc, #24]	; (8001ec0 <_GetDevFunc_SetRectOutside+0x3c>)
 8001ea6:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8001eaa:	e004      	b.n	8001eb6 <_GetDevFunc_SetRectOutside+0x32>
 8001eac:	682b      	ldr	r3, [r5, #0]
 8001eae:	b113      	cbz	r3, 8001eb6 <_GetDevFunc_SetRectOutside+0x32>
 8001eb0:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8001eb4:	602e      	str	r6, [r5, #0]
 8001eb6:	b002      	add	sp, #8
 8001eb8:	bd70      	pop	{r4, r5, r6, pc}
 8001eba:	bf00      	nop
 8001ebc:	20008038 	.word	0x20008038
 8001ec0:	08001e81 	.word	0x08001e81

08001ec4 <_ReadPixelCust_16bpp>:
 8001ec4:	b508      	push	{r3, lr}
 8001ec6:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8001ec8:	f8d0 30d4 	ldr.w	r3, [r0, #212]	; 0xd4
 8001ecc:	6990      	ldr	r0, [r2, #24]
 8001ece:	4798      	blx	r3
 8001ed0:	bd08      	pop	{r3, pc}

08001ed2 <_ReadPixelCust_18bpp>:
 8001ed2:	b508      	push	{r3, lr}
 8001ed4:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8001ed6:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
 8001eda:	6990      	ldr	r0, [r2, #24]
 8001edc:	4798      	blx	r3
 8001ede:	bd08      	pop	{r3, pc}

08001ee0 <_ReadRectCust_16bpp>:
 8001ee0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001ee4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8001ee6:	6884      	ldr	r4, [r0, #8]
 8001ee8:	9500      	str	r5, [sp, #0]
 8001eea:	4617      	mov	r7, r2
 8001eec:	4620      	mov	r0, r4
 8001eee:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8001ef2:	4699      	mov	r9, r3
 8001ef4:	4688      	mov	r8, r1
 8001ef6:	1bed      	subs	r5, r5, r7
 8001ef8:	47b0      	blx	r6
 8001efa:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8001efc:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8001f00:	6988      	ldr	r0, [r1, #24]
 8001f02:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001f04:	ebc8 0809 	rsb	r8, r8, r9
 8001f08:	1c6a      	adds	r2, r5, #1
 8001f0a:	fb08 2202 	mla	r2, r8, r2, r2
 8001f0e:	4798      	blx	r3
 8001f10:	b003      	add	sp, #12
 8001f12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08001f16 <_ReadRectCust_18bpp>:
 8001f16:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001f1a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8001f1c:	6884      	ldr	r4, [r0, #8]
 8001f1e:	9500      	str	r5, [sp, #0]
 8001f20:	4617      	mov	r7, r2
 8001f22:	4620      	mov	r0, r4
 8001f24:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8001f28:	4699      	mov	r9, r3
 8001f2a:	4688      	mov	r8, r1
 8001f2c:	1bed      	subs	r5, r5, r7
 8001f2e:	47b0      	blx	r6
 8001f30:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8001f32:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8001f36:	6988      	ldr	r0, [r1, #24]
 8001f38:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001f3a:	ebc8 0809 	rsb	r8, r8, r9
 8001f3e:	1c6a      	adds	r2, r5, #1
 8001f40:	fb08 2202 	mla	r2, r8, r2, r2
 8001f44:	4798      	blx	r3
 8001f46:	b003      	add	sp, #12
 8001f48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08001f4c <_GetDevFunc>:
 8001f4c:	3901      	subs	r1, #1
 8001f4e:	2917      	cmp	r1, #23
 8001f50:	d824      	bhi.n	8001f9c <_GetDevFunc+0x50>
 8001f52:	e8df f001 	tbb	[pc, r1]
 8001f56:	2310      	.short	0x2310
 8001f58:	23232323 	.word	0x23232323
 8001f5c:	0c232323 	.word	0x0c232323
 8001f60:	23150e25 	.word	0x23150e25
 8001f64:	23232323 	.word	0x23232323
 8001f68:	1f232323 	.word	0x1f232323
 8001f6c:	211a      	.short	0x211a
 8001f6e:	480d      	ldr	r0, [pc, #52]	; (8001fa4 <_GetDevFunc+0x58>)
 8001f70:	4770      	bx	lr
 8001f72:	480d      	ldr	r0, [pc, #52]	; (8001fa8 <_GetDevFunc+0x5c>)
 8001f74:	4770      	bx	lr
 8001f76:	6803      	ldr	r3, [r0, #0]
 8001f78:	689b      	ldr	r3, [r3, #8]
 8001f7a:	f8d3 00fc 	ldr.w	r0, [r3, #252]	; 0xfc
 8001f7e:	4770      	bx	lr
 8001f80:	6803      	ldr	r3, [r0, #0]
 8001f82:	689b      	ldr	r3, [r3, #8]
 8001f84:	f8d3 00f4 	ldr.w	r0, [r3, #244]	; 0xf4
 8001f88:	4770      	bx	lr
 8001f8a:	6803      	ldr	r3, [r0, #0]
 8001f8c:	689b      	ldr	r3, [r3, #8]
 8001f8e:	f8d3 00f8 	ldr.w	r0, [r3, #248]	; 0xf8
 8001f92:	4770      	bx	lr
 8001f94:	4805      	ldr	r0, [pc, #20]	; (8001fac <_GetDevFunc+0x60>)
 8001f96:	4770      	bx	lr
 8001f98:	4805      	ldr	r0, [pc, #20]	; (8001fb0 <_GetDevFunc+0x64>)
 8001f9a:	4770      	bx	lr
 8001f9c:	2000      	movs	r0, #0
 8001f9e:	4770      	bx	lr
 8001fa0:	4804      	ldr	r0, [pc, #16]	; (8001fb4 <_GetDevFunc+0x68>)
 8001fa2:	4770      	bx	lr
 8001fa4:	08002303 	.word	0x08002303
 8001fa8:	080022a5 	.word	0x080022a5
 8001fac:	08002209 	.word	0x08002209
 8001fb0:	08001e85 	.word	0x08001e85
 8001fb4:	080022ef 	.word	0x080022ef

08001fb8 <_GetDevProp>:
 8001fb8:	3901      	subs	r1, #1
 8001fba:	6880      	ldr	r0, [r0, #8]
 8001fbc:	290d      	cmp	r1, #13
 8001fbe:	d823      	bhi.n	8002008 <_GetDevProp+0x50>
 8001fc0:	e8df f001 	tbb	[pc, r1]
 8001fc4:	0f0d0b09 	.word	0x0f0d0b09
 8001fc8:	11222222 	.word	0x11222222
 8001fcc:	13252507 	.word	0x13252507
 8001fd0:	1d18      	.short	0x1d18
 8001fd2:	2000      	movs	r0, #0
 8001fd4:	4770      	bx	lr
 8001fd6:	6800      	ldr	r0, [r0, #0]
 8001fd8:	4770      	bx	lr
 8001fda:	6840      	ldr	r0, [r0, #4]
 8001fdc:	4770      	bx	lr
 8001fde:	6880      	ldr	r0, [r0, #8]
 8001fe0:	4770      	bx	lr
 8001fe2:	68c0      	ldr	r0, [r0, #12]
 8001fe4:	4770      	bx	lr
 8001fe6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8001fe8:	4770      	bx	lr
 8001fea:	b188      	cbz	r0, 8002010 <_GetDevProp+0x58>
 8001fec:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8001fee:	f000 0001 	and.w	r0, r0, #1
 8001ff2:	4770      	bx	lr
 8001ff4:	b160      	cbz	r0, 8002010 <_GetDevProp+0x58>
 8001ff6:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8001ff8:	f3c0 0040 	ubfx	r0, r0, #1, #1
 8001ffc:	4770      	bx	lr
 8001ffe:	b138      	cbz	r0, 8002010 <_GetDevProp+0x58>
 8002000:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8002002:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8002006:	4770      	bx	lr
 8002008:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800200c:	4770      	bx	lr
 800200e:	2001      	movs	r0, #1
 8002010:	4770      	bx	lr

08002012 <_GetDevData>:
 8002012:	6883      	ldr	r3, [r0, #8]
 8002014:	2901      	cmp	r1, #1
 8002016:	bf0c      	ite	eq
 8002018:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 800201a:	2000      	movne	r0, #0
 800201c:	4770      	bx	lr

0800201e <_GetRect>:
 800201e:	6883      	ldr	r3, [r0, #8]
 8002020:	2200      	movs	r2, #0
 8002022:	800a      	strh	r2, [r1, #0]
 8002024:	804a      	strh	r2, [r1, #2]
 8002026:	681a      	ldr	r2, [r3, #0]
 8002028:	685b      	ldr	r3, [r3, #4]
 800202a:	3a01      	subs	r2, #1
 800202c:	3b01      	subs	r3, #1
 800202e:	808a      	strh	r2, [r1, #4]
 8002030:	80cb      	strh	r3, [r1, #6]
 8002032:	4770      	bx	lr

08002034 <GUIDRV_FlexColor__SetLog2Phys>:
 8002034:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002036:	4d10      	ldr	r5, [pc, #64]	; (8002078 <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 8002038:	462e      	mov	r6, r5
 800203a:	4607      	mov	r7, r0
 800203c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800203e:	b091      	sub	sp, #68	; 0x44
 8002040:	466c      	mov	r4, sp
 8002042:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002044:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8002048:	3520      	adds	r5, #32
 800204a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800204e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002050:	ac08      	add	r4, sp, #32
 8002052:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002054:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002058:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800205c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800205e:	aa10      	add	r2, sp, #64	; 0x40
 8002060:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8002064:	f853 2c40 	ldr.w	r2, [r3, #-64]
 8002068:	f8c7 2100 	str.w	r2, [r7, #256]	; 0x100
 800206c:	f853 3c20 	ldr.w	r3, [r3, #-32]
 8002070:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 8002074:	b011      	add	sp, #68	; 0x44
 8002076:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002078:	08006030 	.word	0x08006030

0800207c <_SetOrg>:
 800207c:	b507      	push	{r0, r1, r2, lr}
 800207e:	6980      	ldr	r0, [r0, #24]
 8002080:	e88d 0006 	stmia.w	sp, {r1, r2}
 8002084:	2103      	movs	r1, #3
 8002086:	466a      	mov	r2, sp
 8002088:	f7fe fac2 	bl	8000610 <LCD_X_DisplayDriver>
 800208c:	b003      	add	sp, #12
 800208e:	f85d fb04 	ldr.w	pc, [sp], #4

08002092 <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 8002092:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002096:	6884      	ldr	r4, [r0, #8]
 8002098:	4698      	mov	r8, r3
 800209a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800209c:	079b      	lsls	r3, r3, #30
 800209e:	4689      	mov	r9, r1
 80020a0:	4617      	mov	r7, r2
 80020a2:	d532      	bpl.n	800210a <GUIDRV_FlexColor__SetPixelIndexNoCache+0x78>
 80020a4:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80020a8:	4620      	mov	r0, r4
 80020aa:	4798      	blx	r3
 80020ac:	f8d4 5104 	ldr.w	r5, [r4, #260]	; 0x104
 80020b0:	4606      	mov	r6, r0
 80020b2:	463a      	mov	r2, r7
 80020b4:	4620      	mov	r0, r4
 80020b6:	4649      	mov	r1, r9
 80020b8:	47a8      	blx	r5
 80020ba:	6923      	ldr	r3, [r4, #16]
 80020bc:	69a2      	ldr	r2, [r4, #24]
 80020be:	429e      	cmp	r6, r3
 80020c0:	bfac      	ite	ge
 80020c2:	2300      	movge	r3, #0
 80020c4:	2301      	movlt	r3, #1
 80020c6:	4296      	cmp	r6, r2
 80020c8:	bfd4      	ite	le
 80020ca:	461a      	movle	r2, r3
 80020cc:	f043 0201 	orrgt.w	r2, r3, #1
 80020d0:	6963      	ldr	r3, [r4, #20]
 80020d2:	4298      	cmp	r0, r3
 80020d4:	bfac      	ite	ge
 80020d6:	4613      	movge	r3, r2
 80020d8:	f042 0301 	orrlt.w	r3, r2, #1
 80020dc:	4605      	mov	r5, r0
 80020de:	b913      	cbnz	r3, 80020e6 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x54>
 80020e0:	69e3      	ldr	r3, [r4, #28]
 80020e2:	4298      	cmp	r0, r3
 80020e4:	dd0a      	ble.n	80020fc <GUIDRV_FlexColor__SetPixelIndexNoCache+0x6a>
 80020e6:	6862      	ldr	r2, [r4, #4]
 80020e8:	6823      	ldr	r3, [r4, #0]
 80020ea:	3a01      	subs	r2, #1
 80020ec:	9200      	str	r2, [sp, #0]
 80020ee:	2100      	movs	r1, #0
 80020f0:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80020f4:	4620      	mov	r0, r4
 80020f6:	460a      	mov	r2, r1
 80020f8:	3b01      	subs	r3, #1
 80020fa:	47b8      	blx	r7
 80020fc:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 8002100:	4620      	mov	r0, r4
 8002102:	4631      	mov	r1, r6
 8002104:	462a      	mov	r2, r5
 8002106:	47b8      	blx	r7
 8002108:	e003      	b.n	8002112 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x80>
 800210a:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 800210e:	4620      	mov	r0, r4
 8002110:	47a8      	blx	r5
 8002112:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8002116:	4620      	mov	r0, r4
 8002118:	4641      	mov	r1, r8
 800211a:	4798      	blx	r3
 800211c:	b003      	add	sp, #12
 800211e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08002122 <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 8002122:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002124:	6884      	ldr	r4, [r0, #8]
 8002126:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8002128:	079b      	lsls	r3, r3, #30
 800212a:	460f      	mov	r7, r1
 800212c:	4616      	mov	r6, r2
 800212e:	d545      	bpl.n	80021bc <GUIDRV_FlexColor__GetPixelIndexNoCache+0x9a>
 8002130:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002134:	4620      	mov	r0, r4
 8002136:	4798      	blx	r3
 8002138:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800213c:	4632      	mov	r2, r6
 800213e:	4605      	mov	r5, r0
 8002140:	4639      	mov	r1, r7
 8002142:	4620      	mov	r0, r4
 8002144:	4798      	blx	r3
 8002146:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800214a:	4606      	mov	r6, r0
 800214c:	b11b      	cbz	r3, 8002156 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
 800214e:	4620      	mov	r0, r4
 8002150:	2101      	movs	r1, #1
 8002152:	2200      	movs	r2, #0
 8002154:	4798      	blx	r3
 8002156:	6923      	ldr	r3, [r4, #16]
 8002158:	69a2      	ldr	r2, [r4, #24]
 800215a:	429d      	cmp	r5, r3
 800215c:	bfac      	ite	ge
 800215e:	2300      	movge	r3, #0
 8002160:	2301      	movlt	r3, #1
 8002162:	4295      	cmp	r5, r2
 8002164:	bfd4      	ite	le
 8002166:	461a      	movle	r2, r3
 8002168:	f043 0201 	orrgt.w	r2, r3, #1
 800216c:	6963      	ldr	r3, [r4, #20]
 800216e:	429e      	cmp	r6, r3
 8002170:	bfac      	ite	ge
 8002172:	4613      	movge	r3, r2
 8002174:	f042 0301 	orrlt.w	r3, r2, #1
 8002178:	b913      	cbnz	r3, 8002180 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5e>
 800217a:	69e3      	ldr	r3, [r4, #28]
 800217c:	429e      	cmp	r6, r3
 800217e:	dd0a      	ble.n	8002196 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x74>
 8002180:	6862      	ldr	r2, [r4, #4]
 8002182:	6823      	ldr	r3, [r4, #0]
 8002184:	3a01      	subs	r2, #1
 8002186:	9200      	str	r2, [sp, #0]
 8002188:	2100      	movs	r1, #0
 800218a:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800218e:	4620      	mov	r0, r4
 8002190:	460a      	mov	r2, r1
 8002192:	3b01      	subs	r3, #1
 8002194:	47b8      	blx	r7
 8002196:	4629      	mov	r1, r5
 8002198:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800219c:	4620      	mov	r0, r4
 800219e:	4632      	mov	r2, r6
 80021a0:	4798      	blx	r3
 80021a2:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 80021a6:	4620      	mov	r0, r4
 80021a8:	4798      	blx	r3
 80021aa:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 80021ae:	4605      	mov	r5, r0
 80021b0:	b16b      	cbz	r3, 80021ce <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 80021b2:	4620      	mov	r0, r4
 80021b4:	2100      	movs	r1, #0
 80021b6:	2201      	movs	r2, #1
 80021b8:	4798      	blx	r3
 80021ba:	e008      	b.n	80021ce <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 80021bc:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 80021c0:	4620      	mov	r0, r4
 80021c2:	4798      	blx	r3
 80021c4:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 80021c8:	4620      	mov	r0, r4
 80021ca:	4798      	blx	r3
 80021cc:	4605      	mov	r5, r0
 80021ce:	4628      	mov	r0, r5
 80021d0:	b003      	add	sp, #12
 80021d2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080021d4 <GUIDRV_FlexColor__InitOnce>:
 80021d4:	b538      	push	{r3, r4, r5, lr}
 80021d6:	6885      	ldr	r5, [r0, #8]
 80021d8:	4604      	mov	r4, r0
 80021da:	b995      	cbnz	r5, 8002202 <GUIDRV_FlexColor__InitOnce+0x2e>
 80021dc:	f44f 70ba 	mov.w	r0, #372	; 0x174
 80021e0:	f000 fe46 	bl	8002e70 <GUI_ALLOC_GetFixedBlock>
 80021e4:	f44f 72ba 	mov.w	r2, #372	; 0x174
 80021e8:	60a0      	str	r0, [r4, #8]
 80021ea:	4629      	mov	r1, r5
 80021ec:	f000 f940 	bl	8002470 <GUI__memset>
 80021f0:	68a3      	ldr	r3, [r4, #8]
 80021f2:	2202      	movs	r2, #2
 80021f4:	84da      	strh	r2, [r3, #38]	; 0x26
 80021f6:	2201      	movs	r2, #1
 80021f8:	621a      	str	r2, [r3, #32]
 80021fa:	4a02      	ldr	r2, [pc, #8]	; (8002204 <GUIDRV_FlexColor__InitOnce+0x30>)
 80021fc:	641c      	str	r4, [r3, #64]	; 0x40
 80021fe:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
 8002202:	bd38      	pop	{r3, r4, r5, pc}
 8002204:	08002035 	.word	0x08002035

08002208 <_SetDevFunc>:
 8002208:	b570      	push	{r4, r5, r6, lr}
 800220a:	4606      	mov	r6, r0
 800220c:	460d      	mov	r5, r1
 800220e:	4614      	mov	r4, r2
 8002210:	f7ff ffe0 	bl	80021d4 <GUIDRV_FlexColor__InitOnce>
 8002214:	68b3      	ldr	r3, [r6, #8]
 8002216:	2b00      	cmp	r3, #0
 8002218:	d03b      	beq.n	8002292 <_SetDevFunc+0x8a>
 800221a:	2d26      	cmp	r5, #38	; 0x26
 800221c:	d002      	beq.n	8002224 <_SetDevFunc+0x1c>
 800221e:	2d27      	cmp	r5, #39	; 0x27
 8002220:	d016      	beq.n	8002250 <_SetDevFunc+0x48>
 8002222:	bd70      	pop	{r4, r5, r6, pc}
 8002224:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002226:	2a10      	cmp	r2, #16
 8002228:	d002      	beq.n	8002230 <_SetDevFunc+0x28>
 800222a:	2a12      	cmp	r2, #18
 800222c:	d008      	beq.n	8002240 <_SetDevFunc+0x38>
 800222e:	bd70      	pop	{r4, r5, r6, pc}
 8002230:	4a18      	ldr	r2, [pc, #96]	; (8002294 <_SetDevFunc+0x8c>)
 8002232:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 8002236:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800223a:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 800223e:	bd70      	pop	{r4, r5, r6, pc}
 8002240:	4a15      	ldr	r2, [pc, #84]	; (8002298 <_SetDevFunc+0x90>)
 8002242:	f8c3 40d8 	str.w	r4, [r3, #216]	; 0xd8
 8002246:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800224a:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800224e:	bd70      	pop	{r4, r5, r6, pc}
 8002250:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002252:	2a10      	cmp	r2, #16
 8002254:	d002      	beq.n	800225c <_SetDevFunc+0x54>
 8002256:	2a12      	cmp	r2, #18
 8002258:	d00e      	beq.n	8002278 <_SetDevFunc+0x70>
 800225a:	bd70      	pop	{r4, r5, r6, pc}
 800225c:	b13c      	cbz	r4, 800226e <_SetDevFunc+0x66>
 800225e:	4a0f      	ldr	r2, [pc, #60]	; (800229c <_SetDevFunc+0x94>)
 8002260:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 8002264:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 8002268:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800226c:	bd70      	pop	{r4, r5, r6, pc}
 800226e:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 8002272:	f8c3 40c4 	str.w	r4, [r3, #196]	; 0xc4
 8002276:	bd70      	pop	{r4, r5, r6, pc}
 8002278:	b13c      	cbz	r4, 800228a <_SetDevFunc+0x82>
 800227a:	4a09      	ldr	r2, [pc, #36]	; (80022a0 <_SetDevFunc+0x98>)
 800227c:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 8002280:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 8002284:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 8002288:	bd70      	pop	{r4, r5, r6, pc}
 800228a:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 800228e:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 8002292:	bd70      	pop	{r4, r5, r6, pc}
 8002294:	08001ec5 	.word	0x08001ec5
 8002298:	08001ed3 	.word	0x08001ed3
 800229c:	08001ee1 	.word	0x08001ee1
 80022a0:	08001f17 	.word	0x08001f17

080022a4 <_GetDevFunc_Init>:
 80022a4:	b538      	push	{r3, r4, r5, lr}
 80022a6:	4605      	mov	r5, r0
 80022a8:	f7ff ff94 	bl	80021d4 <GUIDRV_FlexColor__InitOnce>
 80022ac:	68ac      	ldr	r4, [r5, #8]
 80022ae:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80022b2:	f000 fddd 	bl	8002e70 <GUI_ALLOC_GetFixedBlock>
 80022b6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80022b8:	66a0      	str	r0, [r4, #104]	; 0x68
 80022ba:	3307      	adds	r3, #7
 80022bc:	10d8      	asrs	r0, r3, #3
 80022be:	6823      	ldr	r3, [r4, #0]
 80022c0:	4358      	muls	r0, r3
 80022c2:	f000 fdd5 	bl	8002e70 <GUI_ALLOC_GetFixedBlock>
 80022c6:	2101      	movs	r1, #1
 80022c8:	2200      	movs	r2, #0
 80022ca:	66e0      	str	r0, [r4, #108]	; 0x6c
 80022cc:	69a8      	ldr	r0, [r5, #24]
 80022ce:	f7fe f99f 	bl	8000610 <LCD_X_DisplayDriver>
 80022d2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80022d6:	4605      	mov	r5, r0
 80022d8:	4620      	mov	r0, r4
 80022da:	4798      	blx	r3
 80022dc:	4620      	mov	r0, r4
 80022de:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 80022e2:	4798      	blx	r3
 80022e4:	2d00      	cmp	r5, #0
 80022e6:	bfd4      	ite	le
 80022e8:	2000      	movle	r0, #0
 80022ea:	2001      	movgt	r0, #1
 80022ec:	bd38      	pop	{r3, r4, r5, pc}

080022ee <_GetDevFunc_SetSize>:
 80022ee:	b570      	push	{r4, r5, r6, lr}
 80022f0:	4604      	mov	r4, r0
 80022f2:	460d      	mov	r5, r1
 80022f4:	4616      	mov	r6, r2
 80022f6:	f7ff ff6d 	bl	80021d4 <GUIDRV_FlexColor__InitOnce>
 80022fa:	68a3      	ldr	r3, [r4, #8]
 80022fc:	e883 0060 	stmia.w	r3, {r5, r6}
 8002300:	bd70      	pop	{r4, r5, r6, pc}

08002302 <_GetDevFunc_SetVSize>:
 8002302:	b570      	push	{r4, r5, r6, lr}
 8002304:	4604      	mov	r4, r0
 8002306:	460d      	mov	r5, r1
 8002308:	4616      	mov	r6, r2
 800230a:	f7ff ff63 	bl	80021d4 <GUIDRV_FlexColor__InitOnce>
 800230e:	68a3      	ldr	r3, [r4, #8]
 8002310:	609d      	str	r5, [r3, #8]
 8002312:	60de      	str	r6, [r3, #12]
 8002314:	bd70      	pop	{r4, r5, r6, pc}

08002316 <GUIDRV_FlexColor_Config>:
 8002316:	b538      	push	{r3, r4, r5, lr}
 8002318:	4605      	mov	r5, r0
 800231a:	460c      	mov	r4, r1
 800231c:	f7ff ff5a 	bl	80021d4 <GUIDRV_FlexColor__InitOnce>
 8002320:	68ab      	ldr	r3, [r5, #8]
 8002322:	6822      	ldr	r2, [r4, #0]
 8002324:	62da      	str	r2, [r3, #44]	; 0x2c
 8002326:	6862      	ldr	r2, [r4, #4]
 8002328:	631a      	str	r2, [r3, #48]	; 0x30
 800232a:	68a2      	ldr	r2, [r4, #8]
 800232c:	635a      	str	r2, [r3, #52]	; 0x34
 800232e:	0752      	lsls	r2, r2, #29
 8002330:	d507      	bpl.n	8002342 <GUIDRV_FlexColor_Config+0x2c>
 8002332:	e893 0006 	ldmia.w	r3, {r1, r2}
 8002336:	601a      	str	r2, [r3, #0]
 8002338:	6059      	str	r1, [r3, #4]
 800233a:	68da      	ldr	r2, [r3, #12]
 800233c:	6899      	ldr	r1, [r3, #8]
 800233e:	60d9      	str	r1, [r3, #12]
 8002340:	609a      	str	r2, [r3, #8]
 8002342:	89a2      	ldrh	r2, [r4, #12]
 8002344:	849a      	strh	r2, [r3, #36]	; 0x24
 8002346:	6922      	ldr	r2, [r4, #16]
 8002348:	b112      	cbz	r2, 8002350 <GUIDRV_FlexColor_Config+0x3a>
 800234a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800234e:	621a      	str	r2, [r3, #32]
 8002350:	bd38      	pop	{r3, r4, r5, pc}

08002352 <GUIDRV_FlexColor_SetFunc>:
 8002352:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002356:	4604      	mov	r4, r0
 8002358:	461f      	mov	r7, r3
 800235a:	4616      	mov	r6, r2
 800235c:	4688      	mov	r8, r1
 800235e:	f7ff ff39 	bl	80021d4 <GUIDRV_FlexColor__InitOnce>
 8002362:	68a5      	ldr	r5, [r4, #8]
 8002364:	4641      	mov	r1, r8
 8002366:	2268      	movs	r2, #104	; 0x68
 8002368:	f505 7086 	add.w	r0, r5, #268	; 0x10c
 800236c:	f003 fe20 	bl	8005fb0 <memcpy>
 8002370:	4620      	mov	r0, r4
 8002372:	47b0      	blx	r6
 8002374:	4620      	mov	r0, r4
 8002376:	47b8      	blx	r7
 8002378:	6923      	ldr	r3, [r4, #16]
 800237a:	689b      	ldr	r3, [r3, #8]
 800237c:	4798      	blx	r3
 800237e:	62a8      	str	r0, [r5, #40]	; 0x28
 8002380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002384 <LCD_SetVSizeEx>:
 8002384:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002386:	460d      	mov	r5, r1
 8002388:	4614      	mov	r4, r2
 800238a:	f000 f89b 	bl	80024c4 <GUI_DEVICE__GetpDriver>
 800238e:	9001      	str	r0, [sp, #4]
 8002390:	b908      	cbnz	r0, 8002396 <LCD_SetVSizeEx+0x12>
 8002392:	2001      	movs	r0, #1
 8002394:	e00c      	b.n	80023b0 <LCD_SetVSizeEx+0x2c>
 8002396:	68c3      	ldr	r3, [r0, #12]
 8002398:	210a      	movs	r1, #10
 800239a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800239c:	a801      	add	r0, sp, #4
 800239e:	4798      	blx	r3
 80023a0:	4603      	mov	r3, r0
 80023a2:	2800      	cmp	r0, #0
 80023a4:	d0f5      	beq.n	8002392 <LCD_SetVSizeEx+0xe>
 80023a6:	9801      	ldr	r0, [sp, #4]
 80023a8:	4629      	mov	r1, r5
 80023aa:	4622      	mov	r2, r4
 80023ac:	4798      	blx	r3
 80023ae:	2000      	movs	r0, #0
 80023b0:	b003      	add	sp, #12
 80023b2:	bd30      	pop	{r4, r5, pc}

080023b4 <LCD_SetSizeEx>:
 80023b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80023b6:	460d      	mov	r5, r1
 80023b8:	4614      	mov	r4, r2
 80023ba:	f000 f883 	bl	80024c4 <GUI_DEVICE__GetpDriver>
 80023be:	9001      	str	r0, [sp, #4]
 80023c0:	b908      	cbnz	r0, 80023c6 <LCD_SetSizeEx+0x12>
 80023c2:	2001      	movs	r0, #1
 80023c4:	e00c      	b.n	80023e0 <LCD_SetSizeEx+0x2c>
 80023c6:	68c3      	ldr	r3, [r0, #12]
 80023c8:	210b      	movs	r1, #11
 80023ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023cc:	a801      	add	r0, sp, #4
 80023ce:	4798      	blx	r3
 80023d0:	4603      	mov	r3, r0
 80023d2:	2800      	cmp	r0, #0
 80023d4:	d0f5      	beq.n	80023c2 <LCD_SetSizeEx+0xe>
 80023d6:	9801      	ldr	r0, [sp, #4]
 80023d8:	4629      	mov	r1, r5
 80023da:	4622      	mov	r2, r4
 80023dc:	4798      	blx	r3
 80023de:	2000      	movs	r0, #0
 80023e0:	b003      	add	sp, #12
 80023e2:	bd30      	pop	{r4, r5, pc}

080023e4 <LCD_SetLUTEntryEx>:
 80023e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80023e6:	460d      	mov	r5, r1
 80023e8:	4614      	mov	r4, r2
 80023ea:	f000 f86b 	bl	80024c4 <GUI_DEVICE__GetpDriver>
 80023ee:	9001      	str	r0, [sp, #4]
 80023f0:	b908      	cbnz	r0, 80023f6 <LCD_SetLUTEntryEx+0x12>
 80023f2:	2001      	movs	r0, #1
 80023f4:	e00c      	b.n	8002410 <LCD_SetLUTEntryEx+0x2c>
 80023f6:	68c3      	ldr	r3, [r0, #12]
 80023f8:	2110      	movs	r1, #16
 80023fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023fc:	a801      	add	r0, sp, #4
 80023fe:	4798      	blx	r3
 8002400:	4603      	mov	r3, r0
 8002402:	2800      	cmp	r0, #0
 8002404:	d0f5      	beq.n	80023f2 <LCD_SetLUTEntryEx+0xe>
 8002406:	9801      	ldr	r0, [sp, #4]
 8002408:	4629      	mov	r1, r5
 800240a:	4622      	mov	r2, r4
 800240c:	4798      	blx	r3
 800240e:	2000      	movs	r0, #0
 8002410:	b003      	add	sp, #12
 8002412:	bd30      	pop	{r4, r5, pc}

08002414 <GUI__memset16>:
 8002414:	b570      	push	{r4, r5, r6, lr}
 8002416:	0784      	lsls	r4, r0, #30
 8002418:	d502      	bpl.n	8002420 <GUI__memset16+0xc>
 800241a:	8001      	strh	r1, [r0, #0]
 800241c:	3a01      	subs	r2, #1
 800241e:	3002      	adds	r0, #2
 8002420:	0855      	lsrs	r5, r2, #1
 8002422:	462b      	mov	r3, r5
 8002424:	b305      	cbz	r5, 8002468 <GUI__memset16+0x54>
 8002426:	2d03      	cmp	r5, #3
 8002428:	eb01 4401 	add.w	r4, r1, r1, lsl #16
 800242c:	dc02      	bgt.n	8002434 <GUI__memset16+0x20>
 800242e:	4606      	mov	r6, r0
 8002430:	461d      	mov	r5, r3
 8002432:	e012      	b.n	800245a <GUI__memset16+0x46>
 8002434:	4603      	mov	r3, r0
 8002436:	462e      	mov	r6, r5
 8002438:	3e04      	subs	r6, #4
 800243a:	2e03      	cmp	r6, #3
 800243c:	601c      	str	r4, [r3, #0]
 800243e:	605c      	str	r4, [r3, #4]
 8002440:	609c      	str	r4, [r3, #8]
 8002442:	60dc      	str	r4, [r3, #12]
 8002444:	f103 0310 	add.w	r3, r3, #16
 8002448:	dcf6      	bgt.n	8002438 <GUI__memset16+0x24>
 800244a:	3d04      	subs	r5, #4
 800244c:	08ab      	lsrs	r3, r5, #2
 800244e:	1c5e      	adds	r6, r3, #1
 8002450:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 8002454:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 8002458:	e7e9      	b.n	800242e <GUI__memset16+0x1a>
 800245a:	b11d      	cbz	r5, 8002464 <GUI__memset16+0x50>
 800245c:	f846 4b04 	str.w	r4, [r6], #4
 8002460:	3d01      	subs	r5, #1
 8002462:	e7fa      	b.n	800245a <GUI__memset16+0x46>
 8002464:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8002468:	07d3      	lsls	r3, r2, #31
 800246a:	bf48      	it	mi
 800246c:	8001      	strhmi	r1, [r0, #0]
 800246e:	bd70      	pop	{r4, r5, r6, pc}

08002470 <GUI__memset>:
 8002470:	b570      	push	{r4, r5, r6, lr}
 8002472:	b12a      	cbz	r2, 8002480 <GUI__memset+0x10>
 8002474:	0783      	lsls	r3, r0, #30
 8002476:	d003      	beq.n	8002480 <GUI__memset+0x10>
 8002478:	f800 1b01 	strb.w	r1, [r0], #1
 800247c:	3a01      	subs	r2, #1
 800247e:	e7f8      	b.n	8002472 <GUI__memset+0x2>
 8002480:	0893      	lsrs	r3, r2, #2
 8002482:	d101      	bne.n	8002488 <GUI__memset+0x18>
 8002484:	4402      	add	r2, r0
 8002486:	e017      	b.n	80024b8 <GUI__memset+0x48>
 8002488:	f04f 3401 	mov.w	r4, #16843009	; 0x1010101
 800248c:	f002 0203 	and.w	r2, r2, #3
 8002490:	434c      	muls	r4, r1
 8002492:	2b03      	cmp	r3, #3
 8002494:	4605      	mov	r5, r0
 8002496:	dd06      	ble.n	80024a6 <GUI__memset+0x36>
 8002498:	6004      	str	r4, [r0, #0]
 800249a:	6044      	str	r4, [r0, #4]
 800249c:	6084      	str	r4, [r0, #8]
 800249e:	60c4      	str	r4, [r0, #12]
 80024a0:	3b04      	subs	r3, #4
 80024a2:	3010      	adds	r0, #16
 80024a4:	e7f5      	b.n	8002492 <GUI__memset+0x22>
 80024a6:	461e      	mov	r6, r3
 80024a8:	b11b      	cbz	r3, 80024b2 <GUI__memset+0x42>
 80024aa:	f845 4b04 	str.w	r4, [r5], #4
 80024ae:	3b01      	subs	r3, #1
 80024b0:	e7fa      	b.n	80024a8 <GUI__memset+0x38>
 80024b2:	eb00 0086 	add.w	r0, r0, r6, lsl #2
 80024b6:	e7e5      	b.n	8002484 <GUI__memset+0x14>
 80024b8:	4290      	cmp	r0, r2
 80024ba:	d002      	beq.n	80024c2 <GUI__memset+0x52>
 80024bc:	f800 1b01 	strb.w	r1, [r0], #1
 80024c0:	e7fa      	b.n	80024b8 <GUI__memset+0x48>
 80024c2:	bd70      	pop	{r4, r5, r6, pc}

080024c4 <GUI_DEVICE__GetpDriver>:
 80024c4:	2801      	cmp	r0, #1
 80024c6:	dc09      	bgt.n	80024dc <GUI_DEVICE__GetpDriver+0x18>
 80024c8:	4b05      	ldr	r3, [pc, #20]	; (80024e0 <GUI_DEVICE__GetpDriver+0x1c>)
 80024ca:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80024ce:	b120      	cbz	r0, 80024da <GUI_DEVICE__GetpDriver+0x16>
 80024d0:	68c3      	ldr	r3, [r0, #12]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	b11b      	cbz	r3, 80024de <GUI_DEVICE__GetpDriver+0x1a>
 80024d6:	6800      	ldr	r0, [r0, #0]
 80024d8:	e7f9      	b.n	80024ce <GUI_DEVICE__GetpDriver+0xa>
 80024da:	4770      	bx	lr
 80024dc:	2000      	movs	r0, #0
 80024de:	4770      	bx	lr
 80024e0:	2000814c 	.word	0x2000814c

080024e4 <GUI_DEVICE_Delete>:
 80024e4:	f000 bb64 	b.w	8002bb0 <GUI_ALLOC_FreeFixedBlock>

080024e8 <GUI_DEVICE_Create>:
 80024e8:	2b01      	cmp	r3, #1
 80024ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024ec:	4606      	mov	r6, r0
 80024ee:	460d      	mov	r5, r1
 80024f0:	4617      	mov	r7, r2
 80024f2:	461c      	mov	r4, r3
 80024f4:	dd01      	ble.n	80024fa <GUI_DEVICE_Create+0x12>
 80024f6:	2000      	movs	r0, #0
 80024f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80024fa:	201c      	movs	r0, #28
 80024fc:	f000 fcb8 	bl	8002e70 <GUI_ALLOC_GetFixedBlock>
 8002500:	2800      	cmp	r0, #0
 8002502:	d0f8      	beq.n	80024f6 <GUI_DEVICE_Create+0xe>
 8002504:	b10d      	cbz	r5, 800250a <GUI_DEVICE_Create+0x22>
 8002506:	6105      	str	r5, [r0, #16]
 8002508:	e009      	b.n	800251e <GUI_DEVICE_Create+0x36>
 800250a:	4b09      	ldr	r3, [pc, #36]	; (8002530 <GUI_DEVICE_Create+0x48>)
 800250c:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 8002510:	b129      	cbz	r1, 800251e <GUI_DEVICE_Create+0x36>
 8002512:	680b      	ldr	r3, [r1, #0]
 8002514:	b10b      	cbz	r3, 800251a <GUI_DEVICE_Create+0x32>
 8002516:	4619      	mov	r1, r3
 8002518:	e7fb      	b.n	8002512 <GUI_DEVICE_Create+0x2a>
 800251a:	690b      	ldr	r3, [r1, #16]
 800251c:	6103      	str	r3, [r0, #16]
 800251e:	2300      	movs	r3, #0
 8002520:	6083      	str	r3, [r0, #8]
 8002522:	6184      	str	r4, [r0, #24]
 8002524:	8287      	strh	r7, [r0, #20]
 8002526:	60c6      	str	r6, [r0, #12]
 8002528:	6003      	str	r3, [r0, #0]
 800252a:	6043      	str	r3, [r0, #4]
 800252c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800252e:	bf00      	nop
 8002530:	2000814c 	.word	0x2000814c

08002534 <GUI_DEVICE_Unlink>:
 8002534:	4b09      	ldr	r3, [pc, #36]	; (800255c <GUI_DEVICE_Unlink+0x28>)
 8002536:	6982      	ldr	r2, [r0, #24]
 8002538:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800253c:	4281      	cmp	r1, r0
 800253e:	bf04      	itt	eq
 8002540:	6801      	ldreq	r1, [r0, #0]
 8002542:	f843 1022 	streq.w	r1, [r3, r2, lsl #2]
 8002546:	6843      	ldr	r3, [r0, #4]
 8002548:	b10b      	cbz	r3, 800254e <GUI_DEVICE_Unlink+0x1a>
 800254a:	6802      	ldr	r2, [r0, #0]
 800254c:	601a      	str	r2, [r3, #0]
 800254e:	6802      	ldr	r2, [r0, #0]
 8002550:	b102      	cbz	r2, 8002554 <GUI_DEVICE_Unlink+0x20>
 8002552:	6053      	str	r3, [r2, #4]
 8002554:	2300      	movs	r3, #0
 8002556:	6003      	str	r3, [r0, #0]
 8002558:	6043      	str	r3, [r0, #4]
 800255a:	4770      	bx	lr
 800255c:	2000814c 	.word	0x2000814c

08002560 <GUI_DEVICE_Link>:
 8002560:	b570      	push	{r4, r5, r6, lr}
 8002562:	b338      	cbz	r0, 80025b4 <GUI_DEVICE_Link+0x54>
 8002564:	6982      	ldr	r2, [r0, #24]
 8002566:	2a01      	cmp	r2, #1
 8002568:	dc24      	bgt.n	80025b4 <GUI_DEVICE_Link+0x54>
 800256a:	4919      	ldr	r1, [pc, #100]	; (80025d0 <GUI_DEVICE_Link+0x70>)
 800256c:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 8002570:	460d      	mov	r5, r1
 8002572:	b913      	cbnz	r3, 800257a <GUI_DEVICE_Link+0x1a>
 8002574:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 8002578:	e01a      	b.n	80025b0 <GUI_DEVICE_Link+0x50>
 800257a:	6859      	ldr	r1, [r3, #4]
 800257c:	b109      	cbz	r1, 8002582 <GUI_DEVICE_Link+0x22>
 800257e:	460b      	mov	r3, r1
 8002580:	e7fb      	b.n	800257a <GUI_DEVICE_Link+0x1a>
 8002582:	68c1      	ldr	r1, [r0, #12]
 8002584:	680e      	ldr	r6, [r1, #0]
 8002586:	68d9      	ldr	r1, [r3, #12]
 8002588:	680c      	ldr	r4, [r1, #0]
 800258a:	42b4      	cmp	r4, r6
 800258c:	dd03      	ble.n	8002596 <GUI_DEVICE_Link+0x36>
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	2b00      	cmp	r3, #0
 8002592:	d1f8      	bne.n	8002586 <GUI_DEVICE_Link+0x26>
 8002594:	e00e      	b.n	80025b4 <GUI_DEVICE_Link+0x54>
 8002596:	d102      	bne.n	800259e <GUI_DEVICE_Link+0x3e>
 8002598:	8a81      	ldrh	r1, [r0, #20]
 800259a:	2901      	cmp	r1, #1
 800259c:	d011      	beq.n	80025c2 <GUI_DEVICE_Link+0x62>
 800259e:	6859      	ldr	r1, [r3, #4]
 80025a0:	b199      	cbz	r1, 80025ca <GUI_DEVICE_Link+0x6a>
 80025a2:	6008      	str	r0, [r1, #0]
 80025a4:	6041      	str	r1, [r0, #4]
 80025a6:	6058      	str	r0, [r3, #4]
 80025a8:	4298      	cmp	r0, r3
 80025aa:	bf08      	it	eq
 80025ac:	2300      	moveq	r3, #0
 80025ae:	6003      	str	r3, [r0, #0]
 80025b0:	2000      	movs	r0, #0
 80025b2:	bd70      	pop	{r4, r5, r6, pc}
 80025b4:	2001      	movs	r0, #1
 80025b6:	bd70      	pop	{r4, r5, r6, pc}
 80025b8:	68cb      	ldr	r3, [r1, #12]
 80025ba:	681b      	ldr	r3, [r3, #0]
 80025bc:	42a3      	cmp	r3, r4
 80025be:	460b      	mov	r3, r1
 80025c0:	dbed      	blt.n	800259e <GUI_DEVICE_Link+0x3e>
 80025c2:	6819      	ldr	r1, [r3, #0]
 80025c4:	2900      	cmp	r1, #0
 80025c6:	d1f7      	bne.n	80025b8 <GUI_DEVICE_Link+0x58>
 80025c8:	e7e9      	b.n	800259e <GUI_DEVICE_Link+0x3e>
 80025ca:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 80025ce:	e7ea      	b.n	80025a6 <GUI_DEVICE_Link+0x46>
 80025d0:	2000814c 	.word	0x2000814c

080025d4 <GUI_DEVICE_CreateAndLink>:
 80025d4:	b538      	push	{r3, r4, r5, lr}
 80025d6:	461d      	mov	r5, r3
 80025d8:	f7ff ff86 	bl	80024e8 <GUI_DEVICE_Create>
 80025dc:	4604      	mov	r4, r0
 80025de:	b148      	cbz	r0, 80025f4 <GUI_DEVICE_CreateAndLink+0x20>
 80025e0:	f7ff ffbe 	bl	8002560 <GUI_DEVICE_Link>
 80025e4:	68e3      	ldr	r3, [r4, #12]
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	b923      	cbnz	r3, 80025f4 <GUI_DEVICE_CreateAndLink+0x20>
 80025ea:	4b03      	ldr	r3, [pc, #12]	; (80025f8 <GUI_DEVICE_CreateAndLink+0x24>)
 80025ec:	3516      	adds	r5, #22
 80025ee:	681b      	ldr	r3, [r3, #0]
 80025f0:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 80025f4:	4620      	mov	r0, r4
 80025f6:	bd38      	pop	{r3, r4, r5, pc}
 80025f8:	2000000c 	.word	0x2000000c

080025fc <_OnExit>:
 80025fc:	b510      	push	{r4, lr}
 80025fe:	4b07      	ldr	r3, [pc, #28]	; (800261c <_OnExit+0x20>)
 8002600:	4807      	ldr	r0, [pc, #28]	; (8002620 <_OnExit+0x24>)
 8002602:	2400      	movs	r4, #0
 8002604:	4621      	mov	r1, r4
 8002606:	2270      	movs	r2, #112	; 0x70
 8002608:	601c      	str	r4, [r3, #0]
 800260a:	f7ff ff31 	bl	8002470 <GUI__memset>
 800260e:	4621      	mov	r1, r4
 8002610:	4804      	ldr	r0, [pc, #16]	; (8002624 <_OnExit+0x28>)
 8002612:	2208      	movs	r2, #8
 8002614:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002618:	f7ff bf2a 	b.w	8002470 <GUI__memset>
 800261c:	200080b8 	.word	0x200080b8
 8002620:	20008040 	.word	0x20008040
 8002624:	2000814c 	.word	0x2000814c

08002628 <_InitContext>:
 8002628:	b538      	push	{r3, r4, r5, lr}
 800262a:	4d19      	ldr	r5, [pc, #100]	; (8002690 <_InitContext+0x68>)
 800262c:	682b      	ldr	r3, [r5, #0]
 800262e:	1d1a      	adds	r2, r3, #4
 8002630:	63da      	str	r2, [r3, #60]	; 0x3c
 8002632:	f103 0208 	add.w	r2, r3, #8
 8002636:	639b      	str	r3, [r3, #56]	; 0x38
 8002638:	641b      	str	r3, [r3, #64]	; 0x40
 800263a:	6142      	str	r2, [r0, #20]
 800263c:	7c5a      	ldrb	r2, [r3, #17]
 800263e:	4b15      	ldr	r3, [pc, #84]	; (8002694 <_InitContext+0x6c>)
 8002640:	4604      	mov	r4, r0
 8002642:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002646:	68c3      	ldr	r3, [r0, #12]
 8002648:	f104 0108 	add.w	r1, r4, #8
 800264c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800264e:	4798      	blx	r3
 8002650:	4b11      	ldr	r3, [pc, #68]	; (8002698 <_InitContext+0x70>)
 8002652:	6663      	str	r3, [r4, #100]	; 0x64
 8002654:	4b11      	ldr	r3, [pc, #68]	; (800269c <_InitContext+0x74>)
 8002656:	681b      	ldr	r3, [r3, #0]
 8002658:	61e3      	str	r3, [r4, #28]
 800265a:	682b      	ldr	r3, [r5, #0]
 800265c:	3308      	adds	r3, #8
 800265e:	6163      	str	r3, [r4, #20]
 8002660:	2301      	movs	r3, #1
 8002662:	7623      	strb	r3, [r4, #24]
 8002664:	f000 fd3c 	bl	80030e0 <WM_GetDesktopWindow>
 8002668:	2303      	movs	r3, #3
 800266a:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 800266e:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8002672:	6323      	str	r3, [r4, #48]	; 0x30
 8002674:	6363      	str	r3, [r4, #52]	; 0x34
 8002676:	64a0      	str	r0, [r4, #72]	; 0x48
 8002678:	2000      	movs	r0, #0
 800267a:	f002 fd25 	bl	80050c8 <LCD_SetBkColor>
 800267e:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8002682:	f002 fd29 	bl	80050d8 <LCD_SetColor>
 8002686:	4b06      	ldr	r3, [pc, #24]	; (80026a0 <_InitContext+0x78>)
 8002688:	4a06      	ldr	r2, [pc, #24]	; (80026a4 <_InitContext+0x7c>)
 800268a:	601a      	str	r2, [r3, #0]
 800268c:	bd38      	pop	{r3, r4, r5, pc}
 800268e:	bf00      	nop
 8002690:	2000000c 	.word	0x2000000c
 8002694:	2000814c 	.word	0x2000814c
 8002698:	080067cc 	.word	0x080067cc
 800269c:	20000010 	.word	0x20000010
 80026a0:	20008144 	.word	0x20008144
 80026a4:	08006bcc 	.word	0x08006bcc

080026a8 <GUI_SetDefaultFont>:
 80026a8:	4b01      	ldr	r3, [pc, #4]	; (80026b0 <GUI_SetDefaultFont+0x8>)
 80026aa:	6018      	str	r0, [r3, #0]
 80026ac:	4770      	bx	lr
 80026ae:	bf00      	nop
 80026b0:	20000010 	.word	0x20000010

080026b4 <GUI_ClearRect>:
 80026b4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80026b8:	4607      	mov	r7, r0
 80026ba:	2004      	movs	r0, #4
 80026bc:	469a      	mov	sl, r3
 80026be:	460e      	mov	r6, r1
 80026c0:	4691      	mov	r9, r2
 80026c2:	f002 f9df 	bl	8004a84 <LCD_SetDrawMode>
 80026c6:	4b13      	ldr	r3, [pc, #76]	; (8002714 <GUI_ClearRect+0x60>)
 80026c8:	681c      	ldr	r4, [r3, #0]
 80026ca:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80026cc:	6d24      	ldr	r4, [r4, #80]	; 0x50
 80026ce:	442f      	add	r7, r5
 80026d0:	4426      	add	r6, r4
 80026d2:	4680      	mov	r8, r0
 80026d4:	444d      	add	r5, r9
 80026d6:	4454      	add	r4, sl
 80026d8:	4668      	mov	r0, sp
 80026da:	f8ad 7000 	strh.w	r7, [sp]
 80026de:	f8ad 5004 	strh.w	r5, [sp, #4]
 80026e2:	f8ad 6002 	strh.w	r6, [sp, #2]
 80026e6:	f8ad 4006 	strh.w	r4, [sp, #6]
 80026ea:	f001 f9c9 	bl	8003a80 <WM__InitIVRSearch>
 80026ee:	b928      	cbnz	r0, 80026fc <GUI_ClearRect+0x48>
 80026f0:	4640      	mov	r0, r8
 80026f2:	f002 f9c7 	bl	8004a84 <LCD_SetDrawMode>
 80026f6:	b002      	add	sp, #8
 80026f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80026fc:	4638      	mov	r0, r7
 80026fe:	4631      	mov	r1, r6
 8002700:	462a      	mov	r2, r5
 8002702:	4623      	mov	r3, r4
 8002704:	f002 fa1a 	bl	8004b3c <LCD_FillRect>
 8002708:	f001 f8f8 	bl	80038fc <WM__GetNextIVR>
 800270c:	2800      	cmp	r0, #0
 800270e:	d1f5      	bne.n	80026fc <GUI_ClearRect+0x48>
 8002710:	e7ee      	b.n	80026f0 <GUI_ClearRect+0x3c>
 8002712:	bf00      	nop
 8002714:	2000000c 	.word	0x2000000c

08002718 <GUI_Clear>:
 8002718:	b510      	push	{r4, lr}
 800271a:	2000      	movs	r0, #0
 800271c:	4601      	mov	r1, r0
 800271e:	f002 fde1 	bl	80052e4 <GUI_GotoXY>
 8002722:	4804      	ldr	r0, [pc, #16]	; (8002734 <GUI_Clear+0x1c>)
 8002724:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8002728:	4601      	mov	r1, r0
 800272a:	4613      	mov	r3, r2
 800272c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002730:	f7ff bfc0 	b.w	80026b4 <GUI_ClearRect>
 8002734:	ffffc001 	.word	0xffffc001

08002738 <GUI__RegisterExit>:
 8002738:	b480      	push	{r7}
 800273a:	b083      	sub	sp, #12
 800273c:	af00      	add	r7, sp, #0
 800273e:	6078      	str	r0, [r7, #4]
 8002740:	4b05      	ldr	r3, [pc, #20]	; (8002758 <GUI__RegisterExit+0x20>)
 8002742:	681a      	ldr	r2, [r3, #0]
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	605a      	str	r2, [r3, #4]
 8002748:	4b03      	ldr	r3, [pc, #12]	; (8002758 <GUI__RegisterExit+0x20>)
 800274a:	687a      	ldr	r2, [r7, #4]
 800274c:	601a      	str	r2, [r3, #0]
 800274e:	370c      	adds	r7, #12
 8002750:	46bd      	mov	sp, r7
 8002752:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002756:	4770      	bx	lr
 8002758:	2000803c 	.word	0x2000803c

0800275c <GUI__Config>:
 800275c:	b508      	push	{r3, lr}
 800275e:	4b08      	ldr	r3, [pc, #32]	; (8002780 <GUI__Config+0x24>)
 8002760:	681a      	ldr	r2, [r3, #0]
 8002762:	b962      	cbnz	r2, 800277e <GUI__Config+0x22>
 8002764:	2201      	movs	r2, #1
 8002766:	601a      	str	r2, [r3, #0]
 8002768:	f7fd feb2 	bl	80004d0 <GUI_X_Config>
 800276c:	f7fd ff02 	bl	8000574 <LCD_X_Config>
 8002770:	4804      	ldr	r0, [pc, #16]	; (8002784 <GUI__Config+0x28>)
 8002772:	4b05      	ldr	r3, [pc, #20]	; (8002788 <GUI__Config+0x2c>)
 8002774:	6003      	str	r3, [r0, #0]
 8002776:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800277a:	f7ff bfdd 	b.w	8002738 <GUI__RegisterExit>
 800277e:	bd08      	pop	{r3, pc}
 8002780:	200080b8 	.word	0x200080b8
 8002784:	200080b0 	.word	0x200080b0
 8002788:	080025fd 	.word	0x080025fd

0800278c <GUI_Init>:
 800278c:	b590      	push	{r4, r7, lr}
 800278e:	b083      	sub	sp, #12
 8002790:	af00      	add	r7, sp, #0
 8002792:	4b20      	ldr	r3, [pc, #128]	; (8002814 <GUI_Init+0x88>)
 8002794:	4a1f      	ldr	r2, [pc, #124]	; (8002814 <GUI_Init+0x88>)
 8002796:	6812      	ldr	r2, [r2, #0]
 8002798:	f022 0201 	bic.w	r2, r2, #1
 800279c:	601a      	str	r2, [r3, #0]
 800279e:	4b1e      	ldr	r3, [pc, #120]	; (8002818 <GUI_Init+0x8c>)
 80027a0:	2201      	movs	r2, #1
 80027a2:	601a      	str	r2, [r3, #0]
 80027a4:	4b1d      	ldr	r3, [pc, #116]	; (800281c <GUI_Init+0x90>)
 80027a6:	4a1e      	ldr	r2, [pc, #120]	; (8002820 <GUI_Init+0x94>)
 80027a8:	601a      	str	r2, [r3, #0]
 80027aa:	4b1c      	ldr	r3, [pc, #112]	; (800281c <GUI_Init+0x90>)
 80027ac:	681a      	ldr	r2, [r3, #0]
 80027ae:	4b1d      	ldr	r3, [pc, #116]	; (8002824 <GUI_Init+0x98>)
 80027b0:	429a      	cmp	r2, r3
 80027b2:	d000      	beq.n	80027b6 <GUI_Init+0x2a>
 80027b4:	e7fe      	b.n	80027b4 <GUI_Init+0x28>
 80027b6:	f7ff ffd1 	bl	800275c <GUI__Config>
 80027ba:	4b1b      	ldr	r3, [pc, #108]	; (8002828 <GUI_Init+0x9c>)
 80027bc:	222e      	movs	r2, #46	; 0x2e
 80027be:	701a      	strb	r2, [r3, #0]
 80027c0:	f7fd fe96 	bl	80004f0 <GUI_X_Init>
 80027c4:	4819      	ldr	r0, [pc, #100]	; (800282c <GUI_Init+0xa0>)
 80027c6:	f7ff ff2f 	bl	8002628 <_InitContext>
 80027ca:	f002 fbdb 	bl	8004f84 <emWin_LCD_Init>
 80027ce:	6078      	str	r0, [r7, #4]
 80027d0:	f002 f87e 	bl	80048d0 <LCD_GetXSizeDisplay>
 80027d4:	4603      	mov	r3, r0
 80027d6:	2b00      	cmp	r3, #0
 80027d8:	d004      	beq.n	80027e4 <GUI_Init+0x58>
 80027da:	f002 f87f 	bl	80048dc <LCD_GetYSizeDisplay>
 80027de:	4603      	mov	r3, r0
 80027e0:	2b00      	cmp	r3, #0
 80027e2:	d109      	bne.n	80027f8 <GUI_Init+0x6c>
 80027e4:	f002 f864 	bl	80048b0 <LCD_GetXSizeMax>
 80027e8:	4604      	mov	r4, r0
 80027ea:	f002 f864 	bl	80048b6 <LCD_GetYSizeMax>
 80027ee:	4603      	mov	r3, r0
 80027f0:	4620      	mov	r0, r4
 80027f2:	4619      	mov	r1, r3
 80027f4:	f002 f862 	bl	80048bc <LCD_SetDisplaySize>
 80027f8:	2000      	movs	r0, #0
 80027fa:	2100      	movs	r1, #0
 80027fc:	f002 fcd6 	bl	80051ac <GUI_SetOrg>
 8002800:	f001 fa1c 	bl	8003c3c <WM_Init>
 8002804:	4b0a      	ldr	r3, [pc, #40]	; (8002830 <GUI_Init+0xa4>)
 8002806:	2201      	movs	r2, #1
 8002808:	701a      	strb	r2, [r3, #0]
 800280a:	687b      	ldr	r3, [r7, #4]
 800280c:	4618      	mov	r0, r3
 800280e:	370c      	adds	r7, #12
 8002810:	46bd      	mov	sp, r7
 8002812:	bd90      	pop	{r4, r7, pc}
 8002814:	e0002000 	.word	0xe0002000
 8002818:	40023008 	.word	0x40023008
 800281c:	40023000 	.word	0x40023000
 8002820:	f407a5c2 	.word	0xf407a5c2
 8002824:	b5e8b5cd 	.word	0xb5e8b5cd
 8002828:	2000811e 	.word	0x2000811e
 800282c:	20008040 	.word	0x20008040
 8002830:	2000813c 	.word	0x2000813c

08002834 <GUIMONO_DispChar>:
 8002834:	4b52      	ldr	r3, [pc, #328]	; (8002980 <GUIMONO_DispChar+0x14c>)
 8002836:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	69d9      	ldr	r1, [r3, #28]
 800283e:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 8002840:	69cc      	ldr	r4, [r1, #28]
 8002842:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 8002844:	89a2      	ldrh	r2, [r4, #12]
 8002846:	4290      	cmp	r0, r2
 8002848:	b08b      	sub	sp, #44	; 0x2c
 800284a:	d308      	bcc.n	800285e <GUIMONO_DispChar+0x2a>
 800284c:	89e6      	ldrh	r6, [r4, #14]
 800284e:	4286      	cmp	r6, r0
 8002850:	d305      	bcc.n	800285e <GUIMONO_DispChar+0x2a>
 8002852:	f8d4 9000 	ldr.w	r9, [r4]
 8002856:	1a82      	subs	r2, r0, r2
 8002858:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
 800285c:	e015      	b.n	800288a <GUIMONO_DispChar+0x56>
 800285e:	68a2      	ldr	r2, [r4, #8]
 8002860:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8002864:	2a00      	cmp	r2, #0
 8002866:	f000 8081 	beq.w	800296c <GUIMONO_DispChar+0x138>
 800286a:	8816      	ldrh	r6, [r2, #0]
 800286c:	42b0      	cmp	r0, r6
 800286e:	d37d      	bcc.n	800296c <GUIMONO_DispChar+0x138>
 8002870:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 8002874:	4584      	cmp	ip, r0
 8002876:	d379      	bcc.n	800296c <GUIMONO_DispChar+0x138>
 8002878:	6852      	ldr	r2, [r2, #4]
 800287a:	1b80      	subs	r0, r0, r6
 800287c:	b280      	uxth	r0, r0
 800287e:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 8002882:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 8002886:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 800288a:	1c50      	adds	r0, r2, #1
 800288c:	d06e      	beq.n	800296c <GUIMONO_DispChar+0x138>
 800288e:	f891 8018 	ldrb.w	r8, [r1, #24]
 8002892:	7ca1      	ldrb	r1, [r4, #18]
 8002894:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 8002898:	7c26      	ldrb	r6, [r4, #16]
 800289a:	9206      	str	r2, [sp, #24]
 800289c:	fb18 f101 	smulbb	r1, r8, r1
 80028a0:	9107      	str	r1, [sp, #28]
 80028a2:	fa0f f18a 	sxth.w	r1, sl
 80028a6:	4608      	mov	r0, r1
 80028a8:	9108      	str	r1, [sp, #32]
 80028aa:	f002 f8eb 	bl	8004a84 <LCD_SetDrawMode>
 80028ae:	4934      	ldr	r1, [pc, #208]	; (8002980 <GUIMONO_DispChar+0x14c>)
 80028b0:	9009      	str	r0, [sp, #36]	; 0x24
 80028b2:	680b      	ldr	r3, [r1, #0]
 80028b4:	9a06      	ldr	r2, [sp, #24]
 80028b6:	69d9      	ldr	r1, [r3, #28]
 80028b8:	7e88      	ldrb	r0, [r1, #26]
 80028ba:	9000      	str	r0, [sp, #0]
 80028bc:	7ec9      	ldrb	r1, [r1, #27]
 80028be:	9101      	str	r1, [sp, #4]
 80028c0:	2101      	movs	r1, #1
 80028c2:	9102      	str	r1, [sp, #8]
 80028c4:	7ca1      	ldrb	r1, [r4, #18]
 80028c6:	9103      	str	r1, [sp, #12]
 80028c8:	9907      	ldr	r1, [sp, #28]
 80028ca:	fb01 9202 	mla	r2, r1, r2, r9
 80028ce:	9204      	str	r2, [sp, #16]
 80028d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80028d2:	9305      	str	r3, [sp, #20]
 80028d4:	b23f      	sxth	r7, r7
 80028d6:	b22d      	sxth	r5, r5
 80028d8:	4638      	mov	r0, r7
 80028da:	4629      	mov	r1, r5
 80028dc:	4632      	mov	r2, r6
 80028de:	4643      	mov	r3, r8
 80028e0:	f002 fa34 	bl	8004d4c <LCD_DrawBitmap>
 80028e4:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
 80028e8:	d01b      	beq.n	8002922 <GUIMONO_DispChar+0xee>
 80028ea:	f04a 0002 	orr.w	r0, sl, #2
 80028ee:	b200      	sxth	r0, r0
 80028f0:	f002 f8c8 	bl	8004a84 <LCD_SetDrawMode>
 80028f4:	4a22      	ldr	r2, [pc, #136]	; (8002980 <GUIMONO_DispChar+0x14c>)
 80028f6:	6813      	ldr	r3, [r2, #0]
 80028f8:	69da      	ldr	r2, [r3, #28]
 80028fa:	7e91      	ldrb	r1, [r2, #26]
 80028fc:	9100      	str	r1, [sp, #0]
 80028fe:	7ed2      	ldrb	r2, [r2, #27]
 8002900:	9201      	str	r2, [sp, #4]
 8002902:	2101      	movs	r1, #1
 8002904:	9102      	str	r1, [sp, #8]
 8002906:	9907      	ldr	r1, [sp, #28]
 8002908:	7ca2      	ldrb	r2, [r4, #18]
 800290a:	9203      	str	r2, [sp, #12]
 800290c:	fb01 920b 	mla	r2, r1, fp, r9
 8002910:	9204      	str	r2, [sp, #16]
 8002912:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002914:	9305      	str	r3, [sp, #20]
 8002916:	4638      	mov	r0, r7
 8002918:	4629      	mov	r1, r5
 800291a:	4632      	mov	r2, r6
 800291c:	4643      	mov	r3, r8
 800291e:	f002 fa15 	bl	8004d4c <LCD_DrawBitmap>
 8002922:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8002980 <GUIMONO_DispChar+0x14c>
 8002926:	f8d8 3000 	ldr.w	r3, [r8]
 800292a:	69db      	ldr	r3, [r3, #28]
 800292c:	7e5a      	ldrb	r2, [r3, #25]
 800292e:	7e1b      	ldrb	r3, [r3, #24]
 8002930:	429a      	cmp	r2, r3
 8002932:	d917      	bls.n	8002964 <GUIMONO_DispChar+0x130>
 8002934:	9a08      	ldr	r2, [sp, #32]
 8002936:	2a02      	cmp	r2, #2
 8002938:	d014      	beq.n	8002964 <GUIMONO_DispChar+0x130>
 800293a:	f08a 0004 	eor.w	r0, sl, #4
 800293e:	b200      	sxth	r0, r0
 8002940:	f002 f8a0 	bl	8004a84 <LCD_SetDrawMode>
 8002944:	f8d8 3000 	ldr.w	r3, [r8]
 8002948:	69db      	ldr	r3, [r3, #28]
 800294a:	f893 e018 	ldrb.w	lr, [r3, #24]
 800294e:	7ed9      	ldrb	r1, [r3, #27]
 8002950:	7e9a      	ldrb	r2, [r3, #26]
 8002952:	7e5b      	ldrb	r3, [r3, #25]
 8002954:	4638      	mov	r0, r7
 8002956:	fb0e 5101 	mla	r1, lr, r1, r5
 800295a:	fb06 7202 	mla	r2, r6, r2, r7
 800295e:	442b      	add	r3, r5
 8002960:	f002 f8ec 	bl	8004b3c <LCD_FillRect>
 8002964:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002966:	b2d8      	uxtb	r0, r3
 8002968:	f002 f88c 	bl	8004a84 <LCD_SetDrawMode>
 800296c:	4b04      	ldr	r3, [pc, #16]	; (8002980 <GUIMONO_DispChar+0x14c>)
 800296e:	7c61      	ldrb	r1, [r4, #17]
 8002970:	681b      	ldr	r3, [r3, #0]
 8002972:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 8002974:	440a      	add	r2, r1
 8002976:	845a      	strh	r2, [r3, #34]	; 0x22
 8002978:	b00b      	add	sp, #44	; 0x2c
 800297a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800297e:	bf00      	nop
 8002980:	2000000c 	.word	0x2000000c

08002984 <GUIMONO_GetCharDistX>:
 8002984:	4b04      	ldr	r3, [pc, #16]	; (8002998 <GUIMONO_GetCharDistX+0x14>)
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	69db      	ldr	r3, [r3, #28]
 800298a:	69db      	ldr	r3, [r3, #28]
 800298c:	b109      	cbz	r1, 8002992 <GUIMONO_GetCharDistX+0xe>
 800298e:	7c1a      	ldrb	r2, [r3, #16]
 8002990:	600a      	str	r2, [r1, #0]
 8002992:	7c58      	ldrb	r0, [r3, #17]
 8002994:	4770      	bx	lr
 8002996:	bf00      	nop
 8002998:	2000000c 	.word	0x2000000c

0800299c <GUIMONO_GetFontInfo>:
 800299c:	2302      	movs	r3, #2
 800299e:	800b      	strh	r3, [r1, #0]
 80029a0:	4770      	bx	lr

080029a2 <GUIMONO_IsInFont>:
 80029a2:	69c3      	ldr	r3, [r0, #28]
 80029a4:	899a      	ldrh	r2, [r3, #12]
 80029a6:	428a      	cmp	r2, r1
 80029a8:	d802      	bhi.n	80029b0 <GUIMONO_IsInFont+0xe>
 80029aa:	89da      	ldrh	r2, [r3, #14]
 80029ac:	428a      	cmp	r2, r1
 80029ae:	d20f      	bcs.n	80029d0 <GUIMONO_IsInFont+0x2e>
 80029b0:	6898      	ldr	r0, [r3, #8]
 80029b2:	b180      	cbz	r0, 80029d6 <GUIMONO_IsInFont+0x34>
 80029b4:	8803      	ldrh	r3, [r0, #0]
 80029b6:	4299      	cmp	r1, r3
 80029b8:	d30c      	bcc.n	80029d4 <GUIMONO_IsInFont+0x32>
 80029ba:	8842      	ldrh	r2, [r0, #2]
 80029bc:	428a      	cmp	r2, r1
 80029be:	d309      	bcc.n	80029d4 <GUIMONO_IsInFont+0x32>
 80029c0:	1ac9      	subs	r1, r1, r3
 80029c2:	6842      	ldr	r2, [r0, #4]
 80029c4:	f832 0021 	ldrh.w	r0, [r2, r1, lsl #2]
 80029c8:	43c0      	mvns	r0, r0
 80029ca:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 80029ce:	4770      	bx	lr
 80029d0:	2001      	movs	r0, #1
 80029d2:	4770      	bx	lr
 80029d4:	2000      	movs	r0, #0
 80029d6:	4770      	bx	lr

080029d8 <_PushFreeBlock>:
 80029d8:	4b07      	ldr	r3, [pc, #28]	; (80029f8 <_PushFreeBlock+0x20>)
 80029da:	685a      	ldr	r2, [r3, #4]
 80029dc:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80029de:	3201      	adds	r2, #1
 80029e0:	b510      	push	{r4, lr}
 80029e2:	605a      	str	r2, [r3, #4]
 80029e4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80029e6:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 80029ea:	6061      	str	r1, [r4, #4]
 80029ec:	2100      	movs	r1, #0
 80029ee:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 80029f2:	6258      	str	r0, [r3, #36]	; 0x24
 80029f4:	bd10      	pop	{r4, pc}
 80029f6:	bf00      	nop
 80029f8:	2000815c 	.word	0x2000815c

080029fc <_OnExit>:
 80029fc:	b538      	push	{r3, r4, r5, lr}
 80029fe:	4d0b      	ldr	r5, [pc, #44]	; (8002a2c <_OnExit+0x30>)
 8002a00:	2400      	movs	r4, #0
 8002a02:	f105 0040 	add.w	r0, r5, #64	; 0x40
 8002a06:	4621      	mov	r1, r4
 8002a08:	2280      	movs	r2, #128	; 0x80
 8002a0a:	f885 4028 	strb.w	r4, [r5, #40]	; 0x28
 8002a0e:	f7ff fd2f 	bl	8002470 <GUI__memset>
 8002a12:	4628      	mov	r0, r5
 8002a14:	4621      	mov	r1, r4
 8002a16:	22c0      	movs	r2, #192	; 0xc0
 8002a18:	f7ff fd2a 	bl	8002470 <GUI__memset>
 8002a1c:	4621      	mov	r1, r4
 8002a1e:	4804      	ldr	r0, [pc, #16]	; (8002a30 <_OnExit+0x34>)
 8002a20:	220c      	movs	r2, #12
 8002a22:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002a26:	f7ff bd23 	b.w	8002470 <GUI__memset>
 8002a2a:	bf00      	nop
 8002a2c:	2000815c 	.word	0x2000815c
 8002a30:	200080bc 	.word	0x200080bc

08002a34 <_RemoveFreeBlock>:
 8002a34:	b510      	push	{r4, lr}
 8002a36:	6842      	ldr	r2, [r0, #4]
 8002a38:	230f      	movs	r3, #15
 8002a3a:	490d      	ldr	r1, [pc, #52]	; (8002a70 <_RemoveFreeBlock+0x3c>)
 8002a3c:	eb01 04c3 	add.w	r4, r1, r3, lsl #3
 8002a40:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8002a42:	42a2      	cmp	r2, r4
 8002a44:	d203      	bcs.n	8002a4e <_RemoveFreeBlock+0x1a>
 8002a46:	f113 33ff 	adds.w	r3, r3, #4294967295	; 0xffffffff
 8002a4a:	d2f6      	bcs.n	8002a3a <_RemoveFreeBlock+0x6>
 8002a4c:	bd10      	pop	{r4, pc}
 8002a4e:	2b0f      	cmp	r3, #15
 8002a50:	d80c      	bhi.n	8002a6c <_RemoveFreeBlock+0x38>
 8002a52:	680c      	ldr	r4, [r1, #0]
 8002a54:	1aa2      	subs	r2, r4, r2
 8002a56:	600a      	str	r2, [r1, #0]
 8002a58:	6882      	ldr	r2, [r0, #8]
 8002a5a:	68c0      	ldr	r0, [r0, #12]
 8002a5c:	b102      	cbz	r2, 8002a60 <_RemoveFreeBlock+0x2c>
 8002a5e:	6050      	str	r0, [r2, #4]
 8002a60:	b108      	cbz	r0, 8002a66 <_RemoveFreeBlock+0x32>
 8002a62:	6002      	str	r2, [r0, #0]
 8002a64:	bd10      	pop	{r4, pc}
 8002a66:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8002a6a:	645a      	str	r2, [r3, #68]	; 0x44
 8002a6c:	bd10      	pop	{r4, pc}
 8002a6e:	bf00      	nop
 8002a70:	2000815c 	.word	0x2000815c

08002a74 <_AddFreeMemory>:
 8002a74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a76:	4e26      	ldr	r6, [pc, #152]	; (8002b10 <_AddFreeMemory+0x9c>)
 8002a78:	68f3      	ldr	r3, [r6, #12]
 8002a7a:	1e5a      	subs	r2, r3, #1
 8002a7c:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8002a7e:	4605      	mov	r5, r0
 8002a80:	4413      	add	r3, r2
 8002a82:	1808      	adds	r0, r1, r0
 8002a84:	4298      	cmp	r0, r3
 8002a86:	460c      	mov	r4, r1
 8002a88:	d805      	bhi.n	8002a96 <_AddFreeMemory+0x22>
 8002a8a:	594b      	ldr	r3, [r1, r5]
 8002a8c:	b91b      	cbnz	r3, 8002a96 <_AddFreeMemory+0x22>
 8002a8e:	6843      	ldr	r3, [r0, #4]
 8002a90:	441d      	add	r5, r3
 8002a92:	f7ff ffcf 	bl	8002a34 <_RemoveFreeBlock>
 8002a96:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8002a98:	429c      	cmp	r4, r3
 8002a9a:	d90a      	bls.n	8002ab2 <_AddFreeMemory+0x3e>
 8002a9c:	f854 7c04 	ldr.w	r7, [r4, #-4]
 8002aa0:	1be7      	subs	r7, r4, r7
 8002aa2:	683b      	ldr	r3, [r7, #0]
 8002aa4:	b92b      	cbnz	r3, 8002ab2 <_AddFreeMemory+0x3e>
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	4638      	mov	r0, r7
 8002aaa:	441d      	add	r5, r3
 8002aac:	f7ff ffc2 	bl	8002a34 <_RemoveFreeBlock>
 8002ab0:	463c      	mov	r4, r7
 8002ab2:	230f      	movs	r3, #15
 8002ab4:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8002ab8:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8002aba:	4295      	cmp	r5, r2
 8002abc:	d203      	bcs.n	8002ac6 <_AddFreeMemory+0x52>
 8002abe:	f113 33ff 	adds.w	r3, r3, #4294967295	; 0xffffffff
 8002ac2:	d2f7      	bcs.n	8002ab4 <_AddFreeMemory+0x40>
 8002ac4:	e022      	b.n	8002b0c <_AddFreeMemory+0x98>
 8002ac6:	2b0f      	cmp	r3, #15
 8002ac8:	d820      	bhi.n	8002b0c <_AddFreeMemory+0x98>
 8002aca:	3308      	adds	r3, #8
 8002acc:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8002ad0:	1961      	adds	r1, r4, r5
 8002ad2:	6852      	ldr	r2, [r2, #4]
 8002ad4:	60a2      	str	r2, [r4, #8]
 8002ad6:	2000      	movs	r0, #0
 8002ad8:	e884 0021 	stmia.w	r4, {r0, r5}
 8002adc:	6124      	str	r4, [r4, #16]
 8002ade:	f841 5c04 	str.w	r5, [r1, #-4]
 8002ae2:	f104 0108 	add.w	r1, r4, #8
 8002ae6:	b102      	cbz	r2, 8002aea <_AddFreeMemory+0x76>
 8002ae8:	6051      	str	r1, [r2, #4]
 8002aea:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8002aee:	60e0      	str	r0, [r4, #12]
 8002af0:	6059      	str	r1, [r3, #4]
 8002af2:	6833      	ldr	r3, [r6, #0]
 8002af4:	f896 1029 	ldrb.w	r1, [r6, #41]	; 0x29
 8002af8:	4a05      	ldr	r2, [pc, #20]	; (8002b10 <_AddFreeMemory+0x9c>)
 8002afa:	442b      	add	r3, r5
 8002afc:	6033      	str	r3, [r6, #0]
 8002afe:	b929      	cbnz	r1, 8002b0c <_AddFreeMemory+0x98>
 8002b00:	68d1      	ldr	r1, [r2, #12]
 8002b02:	1acb      	subs	r3, r1, r3
 8002b04:	6891      	ldr	r1, [r2, #8]
 8002b06:	4299      	cmp	r1, r3
 8002b08:	bf38      	it	cc
 8002b0a:	6093      	strcc	r3, [r2, #8]
 8002b0c:	4628      	mov	r0, r5
 8002b0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b10:	2000815c 	.word	0x2000815c

08002b14 <_RemoveHoles>:
 8002b14:	4b25      	ldr	r3, [pc, #148]	; (8002bac <_RemoveHoles+0x98>)
 8002b16:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b1a:	68da      	ldr	r2, [r3, #12]
 8002b1c:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8002b1e:	3a01      	subs	r2, #1
 8002b20:	4682      	mov	sl, r0
 8002b22:	eb02 0904 	add.w	r9, r2, r4
 8002b26:	469b      	mov	fp, r3
 8002b28:	e894 0028 	ldmia.w	r4, {r3, r5}
 8002b2c:	2b00      	cmp	r3, #0
 8002b2e:	d133      	bne.n	8002b98 <_RemoveHoles+0x84>
 8002b30:	eb04 0805 	add.w	r8, r4, r5
 8002b34:	45c8      	cmp	r8, r9
 8002b36:	d22f      	bcs.n	8002b98 <_RemoveHoles+0x84>
 8002b38:	f854 c005 	ldr.w	ip, [r4, r5]
 8002b3c:	f8d8 6004 	ldr.w	r6, [r8, #4]
 8002b40:	f1bc 0f00 	cmp.w	ip, #0
 8002b44:	d028      	beq.n	8002b98 <_RemoveHoles+0x84>
 8002b46:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
 8002b4a:	4f18      	ldr	r7, [pc, #96]	; (8002bac <_RemoveHoles+0x98>)
 8002b4c:	f813 303c 	ldrb.w	r3, [r3, ip, lsl #3]
 8002b50:	2b01      	cmp	r3, #1
 8002b52:	d121      	bne.n	8002b98 <_RemoveHoles+0x84>
 8002b54:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002b56:	4620      	mov	r0, r4
 8002b58:	e88d 1008 	stmia.w	sp, {r3, ip}
 8002b5c:	f7ff ff6a 	bl	8002a34 <_RemoveFreeBlock>
 8002b60:	f8d8 1000 	ldr.w	r1, [r8]
 8002b64:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002b66:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 8002b6a:	4620      	mov	r0, r4
 8002b6c:	6054      	str	r4, [r2, #4]
 8002b6e:	4641      	mov	r1, r8
 8002b70:	4632      	mov	r2, r6
 8002b72:	f003 fa2b 	bl	8005fcc <memmove>
 8002b76:	e89d 1008 	ldmia.w	sp, {r3, ip}
 8002b7a:	459c      	cmp	ip, r3
 8002b7c:	d102      	bne.n	8002b84 <_RemoveHoles+0x70>
 8002b7e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002b80:	1b5b      	subs	r3, r3, r5
 8002b82:	637b      	str	r3, [r7, #52]	; 0x34
 8002b84:	4628      	mov	r0, r5
 8002b86:	19a1      	adds	r1, r4, r6
 8002b88:	f7ff ff74 	bl	8002a74 <_AddFreeMemory>
 8002b8c:	f1ba 0f00 	cmp.w	sl, #0
 8002b90:	d001      	beq.n	8002b96 <_RemoveHoles+0x82>
 8002b92:	4582      	cmp	sl, r0
 8002b94:	d905      	bls.n	8002ba2 <_RemoveHoles+0x8e>
 8002b96:	4635      	mov	r5, r6
 8002b98:	442c      	add	r4, r5
 8002b9a:	454c      	cmp	r4, r9
 8002b9c:	d3c4      	bcc.n	8002b28 <_RemoveHoles+0x14>
 8002b9e:	2001      	movs	r0, #1
 8002ba0:	e000      	b.n	8002ba4 <_RemoveHoles+0x90>
 8002ba2:	2000      	movs	r0, #0
 8002ba4:	b003      	add	sp, #12
 8002ba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002baa:	bf00      	nop
 8002bac:	2000815c 	.word	0x2000815c

08002bb0 <GUI_ALLOC_FreeFixedBlock>:
 8002bb0:	b128      	cbz	r0, 8002bbe <GUI_ALLOC_FreeFixedBlock+0xe>
 8002bb2:	4a03      	ldr	r2, [pc, #12]	; (8002bc0 <GUI_ALLOC_FreeFixedBlock+0x10>)
 8002bb4:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8002bb6:	6003      	str	r3, [r0, #0]
 8002bb8:	b103      	cbz	r3, 8002bbc <GUI_ALLOC_FreeFixedBlock+0xc>
 8002bba:	6058      	str	r0, [r3, #4]
 8002bbc:	63d0      	str	r0, [r2, #60]	; 0x3c
 8002bbe:	4770      	bx	lr
 8002bc0:	2000815c 	.word	0x2000815c

08002bc4 <GUI_ALLOC_h2p>:
 8002bc4:	b128      	cbz	r0, 8002bd2 <GUI_ALLOC_h2p+0xe>
 8002bc6:	4b03      	ldr	r3, [pc, #12]	; (8002bd4 <GUI_ALLOC_h2p+0x10>)
 8002bc8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002bca:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8002bce:	6840      	ldr	r0, [r0, #4]
 8002bd0:	3008      	adds	r0, #8
 8002bd2:	4770      	bx	lr
 8002bd4:	2000815c 	.word	0x2000815c

08002bd8 <GUI_ALLOC_LockH>:
 8002bd8:	4b05      	ldr	r3, [pc, #20]	; (8002bf0 <GUI_ALLOC_LockH+0x18>)
 8002bda:	69d9      	ldr	r1, [r3, #28]
 8002bdc:	3101      	adds	r1, #1
 8002bde:	61d9      	str	r1, [r3, #28]
 8002be0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002be2:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 8002be6:	3101      	adds	r1, #1
 8002be8:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 8002bec:	f7ff bfea 	b.w	8002bc4 <GUI_ALLOC_h2p>
 8002bf0:	2000815c 	.word	0x2000815c

08002bf4 <GUI_ALLOC_UnlockH>:
 8002bf4:	b530      	push	{r4, r5, lr}
 8002bf6:	6802      	ldr	r2, [r0, #0]
 8002bf8:	4b09      	ldr	r3, [pc, #36]	; (8002c20 <GUI_ALLOC_UnlockH+0x2c>)
 8002bfa:	f852 1c08 	ldr.w	r1, [r2, #-8]
 8002bfe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002c00:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 8002c04:	2c01      	cmp	r4, #1
 8002c06:	d903      	bls.n	8002c10 <GUI_ALLOC_UnlockH+0x1c>
 8002c08:	69dd      	ldr	r5, [r3, #28]
 8002c0a:	b10d      	cbz	r5, 8002c10 <GUI_ALLOC_UnlockH+0x1c>
 8002c0c:	3d01      	subs	r5, #1
 8002c0e:	61dd      	str	r5, [r3, #28]
 8002c10:	3c01      	subs	r4, #1
 8002c12:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 8002c16:	2300      	movs	r3, #0
 8002c18:	6003      	str	r3, [r0, #0]
 8002c1a:	4618      	mov	r0, r3
 8002c1c:	bd30      	pop	{r4, r5, pc}
 8002c1e:	bf00      	nop
 8002c20:	2000815c 	.word	0x2000815c

08002c24 <GUI_ALLOC_AssignMemory>:
 8002c24:	4b02      	ldr	r3, [pc, #8]	; (8002c30 <GUI_ALLOC_AssignMemory+0xc>)
 8002c26:	f021 0103 	bic.w	r1, r1, #3
 8002c2a:	6018      	str	r0, [r3, #0]
 8002c2c:	6059      	str	r1, [r3, #4]
 8002c2e:	4770      	bx	lr
 8002c30:	200080bc 	.word	0x200080bc

08002c34 <GUI_ALLOC_Free>:
 8002c34:	b510      	push	{r4, lr}
 8002c36:	4604      	mov	r4, r0
 8002c38:	b180      	cbz	r0, 8002c5c <GUI_ALLOC_Free+0x28>
 8002c3a:	4b09      	ldr	r3, [pc, #36]	; (8002c60 <GUI_ALLOC_Free+0x2c>)
 8002c3c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002c3e:	eb03 02c0 	add.w	r2, r3, r0, lsl #3
 8002c42:	f813 3030 	ldrb.w	r3, [r3, r0, lsl #3]
 8002c46:	2b01      	cmp	r3, #1
 8002c48:	d108      	bne.n	8002c5c <GUI_ALLOC_Free+0x28>
 8002c4a:	6851      	ldr	r1, [r2, #4]
 8002c4c:	6848      	ldr	r0, [r1, #4]
 8002c4e:	f7ff ff11 	bl	8002a74 <_AddFreeMemory>
 8002c52:	4620      	mov	r0, r4
 8002c54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c58:	f7ff bebe 	b.w	80029d8 <_PushFreeBlock>
 8002c5c:	bd10      	pop	{r4, pc}
 8002c5e:	bf00      	nop
 8002c60:	2000815c 	.word	0x2000815c

08002c64 <_EnlargeBlocks>:
 8002c64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c68:	4c22      	ldr	r4, [pc, #136]	; (8002cf4 <_EnlargeBlocks+0x90>)
 8002c6a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002c6c:	b93b      	cbnz	r3, 8002c7e <_EnlargeBlocks+0x1a>
 8002c6e:	4b22      	ldr	r3, [pc, #136]	; (8002cf8 <_EnlargeBlocks+0x94>)
 8002c70:	689d      	ldr	r5, [r3, #8]
 8002c72:	685b      	ldr	r3, [r3, #4]
 8002c74:	3508      	adds	r5, #8
 8002c76:	fbb3 f5f5 	udiv	r5, r3, r5
 8002c7a:	3502      	adds	r5, #2
 8002c7c:	e003      	b.n	8002c86 <_EnlargeBlocks+0x22>
 8002c7e:	6923      	ldr	r3, [r4, #16]
 8002c80:	1d1d      	adds	r5, r3, #4
 8002c82:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 8002c86:	00e8      	lsls	r0, r5, #3
 8002c88:	f000 f944 	bl	8002f14 <_Alloc>
 8002c8c:	4680      	mov	r8, r0
 8002c8e:	b360      	cbz	r0, 8002cea <_EnlargeBlocks+0x86>
 8002c90:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002c92:	6922      	ldr	r2, [r4, #16]
 8002c94:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8002c96:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 8002c9a:	00d2      	lsls	r2, r2, #3
 8002c9c:	685e      	ldr	r6, [r3, #4]
 8002c9e:	3608      	adds	r6, #8
 8002ca0:	4630      	mov	r0, r6
 8002ca2:	f003 f985 	bl	8005fb0 <memcpy>
 8002ca6:	6922      	ldr	r2, [r4, #16]
 8002ca8:	6366      	str	r6, [r4, #52]	; 0x34
 8002caa:	eb06 01c2 	add.w	r1, r6, r2, lsl #3
 8002cae:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 8002cb2:	3104      	adds	r1, #4
 8002cb4:	4613      	mov	r3, r2
 8002cb6:	1e68      	subs	r0, r5, #1
 8002cb8:	4283      	cmp	r3, r0
 8002cba:	f101 0108 	add.w	r1, r1, #8
 8002cbe:	d203      	bcs.n	8002cc8 <_EnlargeBlocks+0x64>
 8002cc0:	3301      	adds	r3, #1
 8002cc2:	f841 3c08 	str.w	r3, [r1, #-8]
 8002cc6:	e7f6      	b.n	8002cb6 <_EnlargeBlocks+0x52>
 8002cc8:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8002ccc:	2600      	movs	r6, #0
 8002cce:	605e      	str	r6, [r3, #4]
 8002cd0:	6863      	ldr	r3, [r4, #4]
 8002cd2:	6262      	str	r2, [r4, #36]	; 0x24
 8002cd4:	1a9b      	subs	r3, r3, r2
 8002cd6:	442b      	add	r3, r5
 8002cd8:	6063      	str	r3, [r4, #4]
 8002cda:	6125      	str	r5, [r4, #16]
 8002cdc:	4638      	mov	r0, r7
 8002cde:	b13f      	cbz	r7, 8002cf0 <_EnlargeBlocks+0x8c>
 8002ce0:	f7ff ffa8 	bl	8002c34 <GUI_ALLOC_Free>
 8002ce4:	4630      	mov	r0, r6
 8002ce6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002cea:	2001      	movs	r0, #1
 8002cec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002cf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002cf4:	2000815c 	.word	0x2000815c
 8002cf8:	200080bc 	.word	0x200080bc

08002cfc <_InitOnce>:
 8002cfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002cfe:	4e58      	ldr	r6, [pc, #352]	; (8002e60 <_InitOnce+0x164>)
 8002d00:	f896 1028 	ldrb.w	r1, [r6, #40]	; 0x28
 8002d04:	2900      	cmp	r1, #0
 8002d06:	f040 80aa 	bne.w	8002e5e <_InitOnce+0x162>
 8002d0a:	4d56      	ldr	r5, [pc, #344]	; (8002e64 <_InitOnce+0x168>)
 8002d0c:	686a      	ldr	r2, [r5, #4]
 8002d0e:	2301      	movs	r3, #1
 8002d10:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
 8002d14:	f5b2 5f20 	cmp.w	r2, #10240	; 0x2800
 8002d18:	bf28      	it	cs
 8002d1a:	f44f 5220 	movcs.w	r2, #10240	; 0x2800
 8002d1e:	682b      	ldr	r3, [r5, #0]
 8002d20:	0894      	lsrs	r4, r2, #2
 8002d22:	2000      	movs	r0, #0
 8002d24:	42a0      	cmp	r0, r4
 8002d26:	d00c      	beq.n	8002d42 <_InitOnce+0x46>
 8002d28:	1847      	adds	r7, r0, r1
 8002d2a:	f04f 0eff 	mov.w	lr, #255	; 0xff
 8002d2e:	fbb7 fefe 	udiv	lr, r7, lr
 8002d32:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8002d36:	ebce 0707 	rsb	r7, lr, r7
 8002d3a:	f843 7020 	str.w	r7, [r3, r0, lsl #2]
 8002d3e:	3001      	adds	r0, #1
 8002d40:	e7f0      	b.n	8002d24 <_InitOnce+0x28>
 8002d42:	2000      	movs	r0, #0
 8002d44:	42a0      	cmp	r0, r4
 8002d46:	d016      	beq.n	8002d76 <_InitOnce+0x7a>
 8002d48:	1847      	adds	r7, r0, r1
 8002d4a:	f04f 0eff 	mov.w	lr, #255	; 0xff
 8002d4e:	fbb7 fefe 	udiv	lr, r7, lr
 8002d52:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8002d56:	ebce 0e07 	rsb	lr, lr, r7
 8002d5a:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8002d5e:	4577      	cmp	r7, lr
 8002d60:	d007      	beq.n	8002d72 <_InitOnce+0x76>
 8002d62:	68aa      	ldr	r2, [r5, #8]
 8002d64:	4b3f      	ldr	r3, [pc, #252]	; (8002e64 <_InitOnce+0x168>)
 8002d66:	2a00      	cmp	r2, #0
 8002d68:	d155      	bne.n	8002e16 <_InitOnce+0x11a>
 8002d6a:	685a      	ldr	r2, [r3, #4]
 8002d6c:	0892      	lsrs	r2, r2, #2
 8002d6e:	609a      	str	r2, [r3, #8]
 8002d70:	e051      	b.n	8002e16 <_InitOnce+0x11a>
 8002d72:	3001      	adds	r0, #1
 8002d74:	e7e6      	b.n	8002d44 <_InitOnce+0x48>
 8002d76:	3101      	adds	r1, #1
 8002d78:	2902      	cmp	r1, #2
 8002d7a:	d1d2      	bne.n	8002d22 <_InitOnce+0x26>
 8002d7c:	0854      	lsrs	r4, r2, #1
 8002d7e:	2100      	movs	r1, #0
 8002d80:	2000      	movs	r0, #0
 8002d82:	42a0      	cmp	r0, r4
 8002d84:	d00c      	beq.n	8002da0 <_InitOnce+0xa4>
 8002d86:	1847      	adds	r7, r0, r1
 8002d88:	f04f 0eff 	mov.w	lr, #255	; 0xff
 8002d8c:	fbb7 fefe 	udiv	lr, r7, lr
 8002d90:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8002d94:	ebce 0707 	rsb	r7, lr, r7
 8002d98:	f823 7010 	strh.w	r7, [r3, r0, lsl #1]
 8002d9c:	3001      	adds	r0, #1
 8002d9e:	e7f0      	b.n	8002d82 <_InitOnce+0x86>
 8002da0:	2000      	movs	r0, #0
 8002da2:	42a0      	cmp	r0, r4
 8002da4:	d00f      	beq.n	8002dc6 <_InitOnce+0xca>
 8002da6:	1847      	adds	r7, r0, r1
 8002da8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 8002dac:	fbb7 fefe 	udiv	lr, r7, lr
 8002db0:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8002db4:	ebce 0707 	rsb	r7, lr, r7
 8002db8:	f833 c010 	ldrh.w	ip, [r3, r0, lsl #1]
 8002dbc:	b2bf      	uxth	r7, r7
 8002dbe:	45bc      	cmp	ip, r7
 8002dc0:	d1cf      	bne.n	8002d62 <_InitOnce+0x66>
 8002dc2:	3001      	adds	r0, #1
 8002dc4:	e7ed      	b.n	8002da2 <_InitOnce+0xa6>
 8002dc6:	3101      	adds	r1, #1
 8002dc8:	2902      	cmp	r1, #2
 8002dca:	d1d9      	bne.n	8002d80 <_InitOnce+0x84>
 8002dcc:	2100      	movs	r1, #0
 8002dce:	2000      	movs	r0, #0
 8002dd0:	4290      	cmp	r0, r2
 8002dd2:	d007      	beq.n	8002de4 <_InitOnce+0xe8>
 8002dd4:	1844      	adds	r4, r0, r1
 8002dd6:	27ff      	movs	r7, #255	; 0xff
 8002dd8:	fbb4 f7f7 	udiv	r7, r4, r7
 8002ddc:	443c      	add	r4, r7
 8002dde:	541c      	strb	r4, [r3, r0]
 8002de0:	3001      	adds	r0, #1
 8002de2:	e7f5      	b.n	8002dd0 <_InitOnce+0xd4>
 8002de4:	2000      	movs	r0, #0
 8002de6:	4290      	cmp	r0, r2
 8002de8:	d00b      	beq.n	8002e02 <_InitOnce+0x106>
 8002dea:	1844      	adds	r4, r0, r1
 8002dec:	27ff      	movs	r7, #255	; 0xff
 8002dee:	fbb4 f7f7 	udiv	r7, r4, r7
 8002df2:	443c      	add	r4, r7
 8002df4:	5c1f      	ldrb	r7, [r3, r0]
 8002df6:	f004 04ff 	and.w	r4, r4, #255	; 0xff
 8002dfa:	42a7      	cmp	r7, r4
 8002dfc:	d1b1      	bne.n	8002d62 <_InitOnce+0x66>
 8002dfe:	3001      	adds	r0, #1
 8002e00:	e7f1      	b.n	8002de6 <_InitOnce+0xea>
 8002e02:	3101      	adds	r1, #1
 8002e04:	2902      	cmp	r1, #2
 8002e06:	d1e2      	bne.n	8002dce <_InitOnce+0xd2>
 8002e08:	2100      	movs	r1, #0
 8002e0a:	4291      	cmp	r1, r2
 8002e0c:	d0a9      	beq.n	8002d62 <_InitOnce+0x66>
 8002e0e:	2000      	movs	r0, #0
 8002e10:	5458      	strb	r0, [r3, r1]
 8002e12:	3101      	adds	r1, #1
 8002e14:	e7f9      	b.n	8002e0a <_InitOnce+0x10e>
 8002e16:	4814      	ldr	r0, [pc, #80]	; (8002e68 <_InitOnce+0x16c>)
 8002e18:	4b14      	ldr	r3, [pc, #80]	; (8002e6c <_InitOnce+0x170>)
 8002e1a:	6003      	str	r3, [r0, #0]
 8002e1c:	f7ff fc8c 	bl	8002738 <GUI__RegisterExit>
 8002e20:	235a      	movs	r3, #90	; 0x5a
 8002e22:	6233      	str	r3, [r6, #32]
 8002e24:	2300      	movs	r3, #0
 8002e26:	2110      	movs	r1, #16
 8002e28:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8002e2c:	4099      	lsls	r1, r3
 8002e2e:	3301      	adds	r3, #1
 8002e30:	2b10      	cmp	r3, #16
 8002e32:	4c0b      	ldr	r4, [pc, #44]	; (8002e60 <_InitOnce+0x164>)
 8002e34:	6411      	str	r1, [r2, #64]	; 0x40
 8002e36:	d1f6      	bne.n	8002e26 <_InitOnce+0x12a>
 8002e38:	6868      	ldr	r0, [r5, #4]
 8002e3a:	6829      	ldr	r1, [r5, #0]
 8002e3c:	63a1      	str	r1, [r4, #56]	; 0x38
 8002e3e:	2302      	movs	r3, #2
 8002e40:	6123      	str	r3, [r4, #16]
 8002e42:	f1a0 0314 	sub.w	r3, r0, #20
 8002e46:	440b      	add	r3, r1
 8002e48:	2501      	movs	r5, #1
 8002e4a:	6363      	str	r3, [r4, #52]	; 0x34
 8002e4c:	60e0      	str	r0, [r4, #12]
 8002e4e:	605d      	str	r5, [r3, #4]
 8002e50:	6265      	str	r5, [r4, #36]	; 0x24
 8002e52:	6065      	str	r5, [r4, #4]
 8002e54:	f7ff fe0e 	bl	8002a74 <_AddFreeMemory>
 8002e58:	f7ff ff04 	bl	8002c64 <_EnlargeBlocks>
 8002e5c:	6325      	str	r5, [r4, #48]	; 0x30
 8002e5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e60:	2000815c 	.word	0x2000815c
 8002e64:	200080bc 	.word	0x200080bc
 8002e68:	200080c8 	.word	0x200080c8
 8002e6c:	080029fd 	.word	0x080029fd

08002e70 <GUI_ALLOC_GetFixedBlock>:
 8002e70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002e74:	4605      	mov	r5, r0
 8002e76:	4e26      	ldr	r6, [pc, #152]	; (8002f10 <GUI_ALLOC_GetFixedBlock+0xa0>)
 8002e78:	3503      	adds	r5, #3
 8002e7a:	f7ff ff3f 	bl	8002cfc <_InitOnce>
 8002e7e:	f025 0503 	bic.w	r5, r5, #3
 8002e82:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8002e84:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 8002e86:	3504      	adds	r5, #4
 8002e88:	429d      	cmp	r5, r3
 8002e8a:	bf38      	it	cc
 8002e8c:	461d      	movcc	r5, r3
 8002e8e:	4614      	mov	r4, r2
 8002e90:	b12c      	cbz	r4, 8002e9e <GUI_ALLOC_GetFixedBlock+0x2e>
 8002e92:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8002e96:	42ab      	cmp	r3, r5
 8002e98:	d02c      	beq.n	8002ef4 <GUI_ALLOC_GetFixedBlock+0x84>
 8002e9a:	6824      	ldr	r4, [r4, #0]
 8002e9c:	e7f8      	b.n	8002e90 <GUI_ALLOC_GetFixedBlock+0x20>
 8002e9e:	68f3      	ldr	r3, [r6, #12]
 8002ea0:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 8002ea2:	eb02 0803 	add.w	r8, r2, r3
 8002ea6:	f858 7c04 	ldr.w	r7, [r8, #-4]
 8002eaa:	ebc7 0708 	rsb	r7, r7, r8
 8002eae:	683b      	ldr	r3, [r7, #0]
 8002eb0:	b133      	cbz	r3, 8002ec0 <GUI_ALLOC_GetFixedBlock+0x50>
 8002eb2:	4620      	mov	r0, r4
 8002eb4:	f7ff fe2e 	bl	8002b14 <_RemoveHoles>
 8002eb8:	f858 7c04 	ldr.w	r7, [r8, #-4]
 8002ebc:	ebc7 0708 	rsb	r7, r7, r8
 8002ec0:	683b      	ldr	r3, [r7, #0]
 8002ec2:	bb13      	cbnz	r3, 8002f0a <GUI_ALLOC_GetFixedBlock+0x9a>
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	42ab      	cmp	r3, r5
 8002ec8:	db1f      	blt.n	8002f0a <GUI_ALLOC_GetFixedBlock+0x9a>
 8002eca:	4638      	mov	r0, r7
 8002ecc:	1d1c      	adds	r4, r3, #4
 8002ece:	f7ff fdb1 	bl	8002a34 <_RemoveFreeBlock>
 8002ed2:	68f3      	ldr	r3, [r6, #12]
 8002ed4:	6878      	ldr	r0, [r7, #4]
 8002ed6:	1b5b      	subs	r3, r3, r5
 8002ed8:	60f3      	str	r3, [r6, #12]
 8002eda:	6973      	ldr	r3, [r6, #20]
 8002edc:	1b64      	subs	r4, r4, r5
 8002ede:	442b      	add	r3, r5
 8002ee0:	1b40      	subs	r0, r0, r5
 8002ee2:	443c      	add	r4, r7
 8002ee4:	6173      	str	r3, [r6, #20]
 8002ee6:	d002      	beq.n	8002eee <GUI_ALLOC_GetFixedBlock+0x7e>
 8002ee8:	4639      	mov	r1, r7
 8002eea:	f7ff fdc3 	bl	8002a74 <_AddFreeMemory>
 8002eee:	f844 5c04 	str.w	r5, [r4, #-4]
 8002ef2:	e00a      	b.n	8002f0a <GUI_ALLOC_GetFixedBlock+0x9a>
 8002ef4:	6823      	ldr	r3, [r4, #0]
 8002ef6:	b10b      	cbz	r3, 8002efc <GUI_ALLOC_GetFixedBlock+0x8c>
 8002ef8:	6861      	ldr	r1, [r4, #4]
 8002efa:	6059      	str	r1, [r3, #4]
 8002efc:	6861      	ldr	r1, [r4, #4]
 8002efe:	b101      	cbz	r1, 8002f02 <GUI_ALLOC_GetFixedBlock+0x92>
 8002f00:	600b      	str	r3, [r1, #0]
 8002f02:	42a2      	cmp	r2, r4
 8002f04:	d101      	bne.n	8002f0a <GUI_ALLOC_GetFixedBlock+0x9a>
 8002f06:	6823      	ldr	r3, [r4, #0]
 8002f08:	63f3      	str	r3, [r6, #60]	; 0x3c
 8002f0a:	4620      	mov	r0, r4
 8002f0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002f10:	2000815c 	.word	0x2000815c

08002f14 <_Alloc>:
 8002f14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002f18:	4d38      	ldr	r5, [pc, #224]	; (8002ffc <_Alloc+0xe8>)
 8002f1a:	4604      	mov	r4, r0
 8002f1c:	f7ff feee 	bl	8002cfc <_InitOnce>
 8002f20:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 8002f22:	682b      	ldr	r3, [r5, #0]
 8002f24:	42bc      	cmp	r4, r7
 8002f26:	bf24      	itt	cs
 8002f28:	1ce7      	addcs	r7, r4, #3
 8002f2a:	f027 0703 	biccs.w	r7, r7, #3
 8002f2e:	370c      	adds	r7, #12
 8002f30:	429f      	cmp	r7, r3
 8002f32:	4c32      	ldr	r4, [pc, #200]	; (8002ffc <_Alloc+0xe8>)
 8002f34:	d83e      	bhi.n	8002fb4 <_Alloc+0xa0>
 8002f36:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002f38:	6862      	ldr	r2, [r4, #4]
 8002f3a:	429a      	cmp	r2, r3
 8002f3c:	d90f      	bls.n	8002f5e <_Alloc+0x4a>
 8002f3e:	686b      	ldr	r3, [r5, #4]
 8002f40:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 8002f42:	3b01      	subs	r3, #1
 8002f44:	606b      	str	r3, [r5, #4]
 8002f46:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002f48:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 8002f4c:	eb03 0209 	add.w	r2, r3, r9
 8002f50:	6852      	ldr	r2, [r2, #4]
 8002f52:	626a      	str	r2, [r5, #36]	; 0x24
 8002f54:	2201      	movs	r2, #1
 8002f56:	f803 2036 	strb.w	r2, [r3, r6, lsl #3]
 8002f5a:	b956      	cbnz	r6, 8002f72 <_Alloc+0x5e>
 8002f5c:	e02a      	b.n	8002fb4 <_Alloc+0xa0>
 8002f5e:	3b01      	subs	r3, #1
 8002f60:	6323      	str	r3, [r4, #48]	; 0x30
 8002f62:	f7ff fe7f 	bl	8002c64 <_EnlargeBlocks>
 8002f66:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002f68:	3301      	adds	r3, #1
 8002f6a:	6323      	str	r3, [r4, #48]	; 0x30
 8002f6c:	2800      	cmp	r0, #0
 8002f6e:	d0e6      	beq.n	8002f3e <_Alloc+0x2a>
 8002f70:	e020      	b.n	8002fb4 <_Alloc+0xa0>
 8002f72:	230f      	movs	r3, #15
 8002f74:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8002f78:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8002f7a:	4297      	cmp	r7, r2
 8002f7c:	d20c      	bcs.n	8002f98 <_Alloc+0x84>
 8002f7e:	f113 33ff 	adds.w	r3, r3, #4294967295	; 0xffffffff
 8002f82:	d2f7      	bcs.n	8002f74 <_Alloc+0x60>
 8002f84:	e008      	b.n	8002f98 <_Alloc+0x84>
 8002f86:	6894      	ldr	r4, [r2, #8]
 8002f88:	b12c      	cbz	r4, 8002f96 <_Alloc+0x82>
 8002f8a:	6862      	ldr	r2, [r4, #4]
 8002f8c:	4297      	cmp	r7, r2
 8002f8e:	d914      	bls.n	8002fba <_Alloc+0xa6>
 8002f90:	68a2      	ldr	r2, [r4, #8]
 8002f92:	2a00      	cmp	r2, #0
 8002f94:	d1f7      	bne.n	8002f86 <_Alloc+0x72>
 8002f96:	3301      	adds	r3, #1
 8002f98:	2b0f      	cmp	r3, #15
 8002f9a:	d803      	bhi.n	8002fa4 <_Alloc+0x90>
 8002f9c:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8002fa0:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8002fa2:	e7f6      	b.n	8002f92 <_Alloc+0x7e>
 8002fa4:	4638      	mov	r0, r7
 8002fa6:	f7ff fdb5 	bl	8002b14 <_RemoveHoles>
 8002faa:	2800      	cmp	r0, #0
 8002fac:	d0e1      	beq.n	8002f72 <_Alloc+0x5e>
 8002fae:	4630      	mov	r0, r6
 8002fb0:	f7ff fd12 	bl	80029d8 <_PushFreeBlock>
 8002fb4:	2000      	movs	r0, #0
 8002fb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002fba:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8002fbe:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8002fc0:	ebc7 0208 	rsb	r2, r7, r8
 8002fc4:	330c      	adds	r3, #12
 8002fc6:	4620      	mov	r0, r4
 8002fc8:	429a      	cmp	r2, r3
 8002fca:	bf38      	it	cc
 8002fcc:	4647      	movcc	r7, r8
 8002fce:	f7ff fd31 	bl	8002a34 <_RemoveFreeBlock>
 8002fd2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002fd4:	444b      	add	r3, r9
 8002fd6:	19e1      	adds	r1, r4, r7
 8002fd8:	605c      	str	r4, [r3, #4]
 8002fda:	45b8      	cmp	r8, r7
 8002fdc:	f04f 0300 	mov.w	r3, #0
 8002fe0:	e884 00c0 	stmia.w	r4, {r6, r7}
 8002fe4:	60a3      	str	r3, [r4, #8]
 8002fe6:	6124      	str	r4, [r4, #16]
 8002fe8:	f841 7c04 	str.w	r7, [r1, #-4]
 8002fec:	dd03      	ble.n	8002ff6 <_Alloc+0xe2>
 8002fee:	ebc7 0008 	rsb	r0, r7, r8
 8002ff2:	f7ff fd3f 	bl	8002a74 <_AddFreeMemory>
 8002ff6:	4630      	mov	r0, r6
 8002ff8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002ffc:	2000815c 	.word	0x2000815c

08003000 <GUI_ALLOC_AllocNoInit>:
 8003000:	b108      	cbz	r0, 8003006 <GUI_ALLOC_AllocNoInit+0x6>
 8003002:	f7ff bf87 	b.w	8002f14 <_Alloc>
 8003006:	4770      	bx	lr

08003008 <LCD_Index2Color_565>:
 8003008:	f3c0 1345 	ubfx	r3, r0, #5, #6
 800300c:	4a06      	ldr	r2, [pc, #24]	; (8003028 <LCD_Index2Color_565+0x20>)
 800300e:	5cd1      	ldrb	r1, [r2, r3]
 8003010:	4b06      	ldr	r3, [pc, #24]	; (800302c <LCD_Index2Color_565+0x24>)
 8003012:	f3c0 22c4 	ubfx	r2, r0, #11, #5
 8003016:	f000 001f 	and.w	r0, r0, #31
 800301a:	5c9a      	ldrb	r2, [r3, r2]
 800301c:	5c18      	ldrb	r0, [r3, r0]
 800301e:	0412      	lsls	r2, r2, #16
 8003020:	eb02 2201 	add.w	r2, r2, r1, lsl #8
 8003024:	4410      	add	r0, r2
 8003026:	4770      	bx	lr
 8003028:	0800696c 	.word	0x0800696c
 800302c:	080069ac 	.word	0x080069ac

08003030 <_Color2Index_565>:
 8003030:	f3c0 2307 	ubfx	r3, r0, #8, #8
 8003034:	4a06      	ldr	r2, [pc, #24]	; (8003050 <_Color2Index_565+0x20>)
 8003036:	5cd1      	ldrb	r1, [r2, r3]
 8003038:	4b06      	ldr	r3, [pc, #24]	; (8003054 <_Color2Index_565+0x24>)
 800303a:	f3c0 4207 	ubfx	r2, r0, #16, #8
 800303e:	b2c0      	uxtb	r0, r0
 8003040:	5c9a      	ldrb	r2, [r3, r2]
 8003042:	5c18      	ldrb	r0, [r3, r0]
 8003044:	02d2      	lsls	r2, r2, #11
 8003046:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800304a:	4410      	add	r0, r2
 800304c:	4770      	bx	lr
 800304e:	bf00      	nop
 8003050:	080069cc 	.word	0x080069cc
 8003054:	08006acc 	.word	0x08006acc

08003058 <_GetIndexMask_565>:
 8003058:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800305c:	4770      	bx	lr
	...

08003060 <_Color2IndexBulk>:
 8003060:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003062:	f850 4b04 	ldr.w	r4, [r0], #4
 8003066:	4e0a      	ldr	r6, [pc, #40]	; (8003090 <_Color2IndexBulk+0x30>)
 8003068:	f3c4 2507 	ubfx	r5, r4, #8, #8
 800306c:	3a01      	subs	r2, #1
 800306e:	5d77      	ldrb	r7, [r6, r5]
 8003070:	4d08      	ldr	r5, [pc, #32]	; (8003094 <_Color2IndexBulk+0x34>)
 8003072:	f3c4 4607 	ubfx	r6, r4, #16, #8
 8003076:	b2e4      	uxtb	r4, r4
 8003078:	5dae      	ldrb	r6, [r5, r6]
 800307a:	5d2c      	ldrb	r4, [r5, r4]
 800307c:	ea4f 26c6 	mov.w	r6, r6, lsl #11
 8003080:	eb06 1647 	add.w	r6, r6, r7, lsl #5
 8003084:	4434      	add	r4, r6
 8003086:	800c      	strh	r4, [r1, #0]
 8003088:	4419      	add	r1, r3
 800308a:	d1ea      	bne.n	8003062 <_Color2IndexBulk+0x2>
 800308c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800308e:	bf00      	nop
 8003090:	080069cc 	.word	0x080069cc
 8003094:	08006acc 	.word	0x08006acc

08003098 <_Index2ColorBulk>:
 8003098:	b5f0      	push	{r4, r5, r6, r7, lr}
 800309a:	1e54      	subs	r4, r2, #1
 800309c:	fb03 0004 	mla	r0, r3, r4, r0
 80030a0:	f102 4480 	add.w	r4, r2, #1073741824	; 0x40000000
 80030a4:	3c01      	subs	r4, #1
 80030a6:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 80030aa:	8805      	ldrh	r5, [r0, #0]
 80030ac:	4c0a      	ldr	r4, [pc, #40]	; (80030d8 <_Index2ColorBulk+0x40>)
 80030ae:	0aee      	lsrs	r6, r5, #11
 80030b0:	f005 071f 	and.w	r7, r5, #31
 80030b4:	5da6      	ldrb	r6, [r4, r6]
 80030b6:	5de4      	ldrb	r4, [r4, r7]
 80030b8:	f3c5 1545 	ubfx	r5, r5, #5, #6
 80030bc:	eb04 4406 	add.w	r4, r4, r6, lsl #16
 80030c0:	4e06      	ldr	r6, [pc, #24]	; (80030dc <_Index2ColorBulk+0x44>)
 80030c2:	5d75      	ldrb	r5, [r6, r5]
 80030c4:	3a01      	subs	r2, #1
 80030c6:	eb04 2405 	add.w	r4, r4, r5, lsl #8
 80030ca:	f841 4904 	str.w	r4, [r1], #-4
 80030ce:	ebc3 0000 	rsb	r0, r3, r0
 80030d2:	d1ea      	bne.n	80030aa <_Index2ColorBulk+0x12>
 80030d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80030d6:	bf00      	nop
 80030d8:	080069ac 	.word	0x080069ac
 80030dc:	0800696c 	.word	0x0800696c

080030e0 <WM_GetDesktopWindow>:
 80030e0:	4b03      	ldr	r3, [pc, #12]	; (80030f0 <WM_GetDesktopWindow+0x10>)
 80030e2:	681b      	ldr	r3, [r3, #0]
 80030e4:	7c5a      	ldrb	r2, [r3, #17]
 80030e6:	4b03      	ldr	r3, [pc, #12]	; (80030f4 <WM_GetDesktopWindow+0x14>)
 80030e8:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80030ec:	4770      	bx	lr
 80030ee:	bf00      	nop
 80030f0:	2000000c 	.word	0x2000000c
 80030f4:	20008224 	.word	0x20008224

080030f8 <_OnExit>:
 80030f8:	4a0a      	ldr	r2, [pc, #40]	; (8003124 <_OnExit+0x2c>)
 80030fa:	490b      	ldr	r1, [pc, #44]	; (8003128 <_OnExit+0x30>)
 80030fc:	2300      	movs	r3, #0
 80030fe:	7013      	strb	r3, [r2, #0]
 8003100:	4a0a      	ldr	r2, [pc, #40]	; (800312c <_OnExit+0x34>)
 8003102:	600b      	str	r3, [r1, #0]
 8003104:	6013      	str	r3, [r2, #0]
 8003106:	4a0a      	ldr	r2, [pc, #40]	; (8003130 <_OnExit+0x38>)
 8003108:	604b      	str	r3, [r1, #4]
 800310a:	6013      	str	r3, [r2, #0]
 800310c:	4a09      	ldr	r2, [pc, #36]	; (8003134 <_OnExit+0x3c>)
 800310e:	6013      	str	r3, [r2, #0]
 8003110:	6053      	str	r3, [r2, #4]
 8003112:	4a09      	ldr	r2, [pc, #36]	; (8003138 <_OnExit+0x40>)
 8003114:	6013      	str	r3, [r2, #0]
 8003116:	4a09      	ldr	r2, [pc, #36]	; (800313c <_OnExit+0x44>)
 8003118:	6013      	str	r3, [r2, #0]
 800311a:	4a09      	ldr	r2, [pc, #36]	; (8003140 <_OnExit+0x48>)
 800311c:	6013      	str	r3, [r2, #0]
 800311e:	4a09      	ldr	r2, [pc, #36]	; (8003144 <_OnExit+0x4c>)
 8003120:	6013      	str	r3, [r2, #0]
 8003122:	4770      	bx	lr
 8003124:	200080f8 	.word	0x200080f8
 8003128:	20008234 	.word	0x20008234
 800312c:	200080d0 	.word	0x200080d0
 8003130:	20008258 	.word	0x20008258
 8003134:	20008260 	.word	0x20008260
 8003138:	2000826c 	.word	0x2000826c
 800313c:	20008220 	.word	0x20008220
 8003140:	2000824c 	.word	0x2000824c
 8003144:	2000825c 	.word	0x2000825c

08003148 <_Findy1>:
 8003148:	b5f0      	push	{r4, r5, r6, r7, lr}
 800314a:	4605      	mov	r5, r0
 800314c:	b085      	sub	sp, #20
 800314e:	460c      	mov	r4, r1
 8003150:	4616      	mov	r6, r2
 8003152:	2d00      	cmp	r5, #0
 8003154:	d04c      	beq.n	80031f0 <_Findy1+0xa8>
 8003156:	4628      	mov	r0, r5
 8003158:	f7ff fd3e 	bl	8002bd8 <GUI_ALLOC_LockH>
 800315c:	6a87      	ldr	r7, [r0, #40]	; 0x28
 800315e:	9001      	str	r0, [sp, #4]
 8003160:	07bb      	lsls	r3, r7, #30
 8003162:	4601      	mov	r1, r0
 8003164:	d53d      	bpl.n	80031e2 <_Findy1+0x9a>
 8003166:	ad02      	add	r5, sp, #8
 8003168:	b126      	cbz	r6, 8003174 <_Findy1+0x2c>
 800316a:	4628      	mov	r0, r5
 800316c:	4632      	mov	r2, r6
 800316e:	f001 ffbb 	bl	80050e8 <GUI__IntersectRects>
 8003172:	e002      	b.n	800317a <_Findy1+0x32>
 8003174:	c803      	ldmia	r0, {r0, r1}
 8003176:	e885 0003 	stmia.w	r5, {r0, r1}
 800317a:	4620      	mov	r0, r4
 800317c:	4629      	mov	r1, r5
 800317e:	f002 f850 	bl	8005222 <GUI_RectsIntersect>
 8003182:	b370      	cbz	r0, 80031e2 <_Findy1+0x9a>
 8003184:	f017 0f01 	tst.w	r7, #1
 8003188:	9b01      	ldr	r3, [sp, #4]
 800318a:	d11e      	bne.n	80031ca <_Findy1+0x82>
 800318c:	b13e      	cbz	r6, 800319e <_Findy1+0x56>
 800318e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8003192:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8003196:	429a      	cmp	r2, r3
 8003198:	bfa8      	it	ge
 800319a:	4613      	movge	r3, r2
 800319c:	e001      	b.n	80031a2 <_Findy1+0x5a>
 800319e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80031a2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80031a6:	4293      	cmp	r3, r2
 80031a8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80031ac:	dd06      	ble.n	80031bc <_Findy1+0x74>
 80031ae:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80031b2:	b219      	sxth	r1, r3
 80031b4:	428a      	cmp	r2, r1
 80031b6:	db14      	blt.n	80031e2 <_Findy1+0x9a>
 80031b8:	3b01      	subs	r3, #1
 80031ba:	e004      	b.n	80031c6 <_Findy1+0x7e>
 80031bc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80031c0:	b219      	sxth	r1, r3
 80031c2:	428a      	cmp	r2, r1
 80031c4:	dd0d      	ble.n	80031e2 <_Findy1+0x9a>
 80031c6:	80e3      	strh	r3, [r4, #6]
 80031c8:	e00b      	b.n	80031e2 <_Findy1+0x9a>
 80031ca:	69df      	ldr	r7, [r3, #28]
 80031cc:	b14f      	cbz	r7, 80031e2 <_Findy1+0x9a>
 80031ce:	4638      	mov	r0, r7
 80031d0:	4621      	mov	r1, r4
 80031d2:	462a      	mov	r2, r5
 80031d4:	f7ff ffb8 	bl	8003148 <_Findy1>
 80031d8:	4638      	mov	r0, r7
 80031da:	f7ff fcf3 	bl	8002bc4 <GUI_ALLOC_h2p>
 80031de:	6a07      	ldr	r7, [r0, #32]
 80031e0:	e7f4      	b.n	80031cc <_Findy1+0x84>
 80031e2:	a804      	add	r0, sp, #16
 80031e4:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 80031e8:	6a1d      	ldr	r5, [r3, #32]
 80031ea:	f7ff fd03 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80031ee:	e7b0      	b.n	8003152 <_Findy1+0xa>
 80031f0:	b005      	add	sp, #20
 80031f2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080031f4 <_Findx0>:
 80031f4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80031f8:	4604      	mov	r4, r0
 80031fa:	460f      	mov	r7, r1
 80031fc:	4690      	mov	r8, r2
 80031fe:	2500      	movs	r5, #0
 8003200:	2c00      	cmp	r4, #0
 8003202:	d037      	beq.n	8003274 <_Findx0+0x80>
 8003204:	4620      	mov	r0, r4
 8003206:	f7ff fce7 	bl	8002bd8 <GUI_ALLOC_LockH>
 800320a:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800320c:	9001      	str	r0, [sp, #4]
 800320e:	07b2      	lsls	r2, r6, #30
 8003210:	4601      	mov	r1, r0
 8003212:	d528      	bpl.n	8003266 <_Findx0+0x72>
 8003214:	ac02      	add	r4, sp, #8
 8003216:	f1b8 0f00 	cmp.w	r8, #0
 800321a:	d004      	beq.n	8003226 <_Findx0+0x32>
 800321c:	4620      	mov	r0, r4
 800321e:	4642      	mov	r2, r8
 8003220:	f001 ff62 	bl	80050e8 <GUI__IntersectRects>
 8003224:	e002      	b.n	800322c <_Findx0+0x38>
 8003226:	c803      	ldmia	r0, {r0, r1}
 8003228:	e884 0003 	stmia.w	r4, {r0, r1}
 800322c:	4638      	mov	r0, r7
 800322e:	4621      	mov	r1, r4
 8003230:	f001 fff7 	bl	8005222 <GUI_RectsIntersect>
 8003234:	b1b8      	cbz	r0, 8003266 <_Findx0+0x72>
 8003236:	07f3      	lsls	r3, r6, #31
 8003238:	d405      	bmi.n	8003246 <_Findx0+0x52>
 800323a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800323e:	3301      	adds	r3, #1
 8003240:	803b      	strh	r3, [r7, #0]
 8003242:	2501      	movs	r5, #1
 8003244:	e00f      	b.n	8003266 <_Findx0+0x72>
 8003246:	9b01      	ldr	r3, [sp, #4]
 8003248:	69de      	ldr	r6, [r3, #28]
 800324a:	b166      	cbz	r6, 8003266 <_Findx0+0x72>
 800324c:	4630      	mov	r0, r6
 800324e:	4639      	mov	r1, r7
 8003250:	4622      	mov	r2, r4
 8003252:	f7ff ffcf 	bl	80031f4 <_Findx0>
 8003256:	2800      	cmp	r0, #0
 8003258:	4630      	mov	r0, r6
 800325a:	bf18      	it	ne
 800325c:	2501      	movne	r5, #1
 800325e:	f7ff fcb1 	bl	8002bc4 <GUI_ALLOC_h2p>
 8003262:	6a06      	ldr	r6, [r0, #32]
 8003264:	e7f1      	b.n	800324a <_Findx0+0x56>
 8003266:	a804      	add	r0, sp, #16
 8003268:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800326c:	6a1c      	ldr	r4, [r3, #32]
 800326e:	f7ff fcc1 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003272:	e7c5      	b.n	8003200 <_Findx0+0xc>
 8003274:	4628      	mov	r0, r5
 8003276:	b004      	add	sp, #16
 8003278:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800327c <_Findx1>:
 800327c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800327e:	4604      	mov	r4, r0
 8003280:	b085      	sub	sp, #20
 8003282:	460e      	mov	r6, r1
 8003284:	4617      	mov	r7, r2
 8003286:	2c00      	cmp	r4, #0
 8003288:	d031      	beq.n	80032ee <_Findx1+0x72>
 800328a:	4620      	mov	r0, r4
 800328c:	f7ff fca4 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003290:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8003292:	9001      	str	r0, [sp, #4]
 8003294:	07aa      	lsls	r2, r5, #30
 8003296:	4601      	mov	r1, r0
 8003298:	d522      	bpl.n	80032e0 <_Findx1+0x64>
 800329a:	ac02      	add	r4, sp, #8
 800329c:	b127      	cbz	r7, 80032a8 <_Findx1+0x2c>
 800329e:	4620      	mov	r0, r4
 80032a0:	463a      	mov	r2, r7
 80032a2:	f001 ff21 	bl	80050e8 <GUI__IntersectRects>
 80032a6:	e002      	b.n	80032ae <_Findx1+0x32>
 80032a8:	c803      	ldmia	r0, {r0, r1}
 80032aa:	e884 0003 	stmia.w	r4, {r0, r1}
 80032ae:	4630      	mov	r0, r6
 80032b0:	4621      	mov	r1, r4
 80032b2:	f001 ffb6 	bl	8005222 <GUI_RectsIntersect>
 80032b6:	b198      	cbz	r0, 80032e0 <_Findx1+0x64>
 80032b8:	07eb      	lsls	r3, r5, #31
 80032ba:	d404      	bmi.n	80032c6 <_Findx1+0x4a>
 80032bc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80032c0:	3b01      	subs	r3, #1
 80032c2:	80b3      	strh	r3, [r6, #4]
 80032c4:	e00c      	b.n	80032e0 <_Findx1+0x64>
 80032c6:	9b01      	ldr	r3, [sp, #4]
 80032c8:	69dd      	ldr	r5, [r3, #28]
 80032ca:	b14d      	cbz	r5, 80032e0 <_Findx1+0x64>
 80032cc:	4628      	mov	r0, r5
 80032ce:	4631      	mov	r1, r6
 80032d0:	4622      	mov	r2, r4
 80032d2:	f7ff ffd3 	bl	800327c <_Findx1>
 80032d6:	4628      	mov	r0, r5
 80032d8:	f7ff fc74 	bl	8002bc4 <GUI_ALLOC_h2p>
 80032dc:	6a05      	ldr	r5, [r0, #32]
 80032de:	e7f4      	b.n	80032ca <_Findx1+0x4e>
 80032e0:	a804      	add	r0, sp, #16
 80032e2:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 80032e6:	6a1c      	ldr	r4, [r3, #32]
 80032e8:	f7ff fc84 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80032ec:	e7cb      	b.n	8003286 <_Findx1+0xa>
 80032ee:	b005      	add	sp, #20
 80032f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080032f4 <WM__ClipAtParentBorders>:
 80032f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80032f6:	4607      	mov	r7, r0
 80032f8:	460d      	mov	r5, r1
 80032fa:	4628      	mov	r0, r5
 80032fc:	f7ff fc6c 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003300:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8003302:	ac02      	add	r4, sp, #8
 8003304:	f013 0602 	ands.w	r6, r3, #2
 8003308:	4601      	mov	r1, r0
 800330a:	f844 0d04 	str.w	r0, [r4, #-4]!
 800330e:	d104      	bne.n	800331a <WM__ClipAtParentBorders+0x26>
 8003310:	4620      	mov	r0, r4
 8003312:	f7ff fc6f 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003316:	4630      	mov	r0, r6
 8003318:	e016      	b.n	8003348 <WM__ClipAtParentBorders+0x54>
 800331a:	4638      	mov	r0, r7
 800331c:	f001 ff16 	bl	800514c <GUI__IntersectRect>
 8003320:	9b01      	ldr	r3, [sp, #4]
 8003322:	699e      	ldr	r6, [r3, #24]
 8003324:	4620      	mov	r0, r4
 8003326:	b956      	cbnz	r6, 800333e <WM__ClipAtParentBorders+0x4a>
 8003328:	f7ff fc64 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 800332c:	4b07      	ldr	r3, [pc, #28]	; (800334c <WM__ClipAtParentBorders+0x58>)
 800332e:	681a      	ldr	r2, [r3, #0]
 8003330:	4295      	cmp	r5, r2
 8003332:	d008      	beq.n	8003346 <WM__ClipAtParentBorders+0x52>
 8003334:	6858      	ldr	r0, [r3, #4]
 8003336:	1a2b      	subs	r3, r5, r0
 8003338:	4258      	negs	r0, r3
 800333a:	4158      	adcs	r0, r3
 800333c:	e004      	b.n	8003348 <WM__ClipAtParentBorders+0x54>
 800333e:	f7ff fc59 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003342:	4635      	mov	r5, r6
 8003344:	e7d9      	b.n	80032fa <WM__ClipAtParentBorders+0x6>
 8003346:	2001      	movs	r0, #1
 8003348:	b003      	add	sp, #12
 800334a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800334c:	20008224 	.word	0x20008224

08003350 <WM__InsertWindowIntoList>:
 8003350:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003352:	4604      	mov	r4, r0
 8003354:	b085      	sub	sp, #20
 8003356:	460d      	mov	r5, r1
 8003358:	2900      	cmp	r1, #0
 800335a:	d049      	beq.n	80033f0 <WM__InsertWindowIntoList+0xa0>
 800335c:	f7ff fc3c 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003360:	2300      	movs	r3, #0
 8003362:	6203      	str	r3, [r0, #32]
 8003364:	6185      	str	r5, [r0, #24]
 8003366:	9001      	str	r0, [sp, #4]
 8003368:	4628      	mov	r0, r5
 800336a:	f7ff fc35 	bl	8002bd8 <GUI_ALLOC_LockH>
 800336e:	9b01      	ldr	r3, [sp, #4]
 8003370:	69c5      	ldr	r5, [r0, #28]
 8003372:	9002      	str	r0, [sp, #8]
 8003374:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 8003376:	b92d      	cbnz	r5, 8003384 <WM__InsertWindowIntoList+0x34>
 8003378:	61c4      	str	r4, [r0, #28]
 800337a:	a801      	add	r0, sp, #4
 800337c:	f7ff fc3a 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003380:	a802      	add	r0, sp, #8
 8003382:	e033      	b.n	80033ec <WM__InsertWindowIntoList+0x9c>
 8003384:	4628      	mov	r0, r5
 8003386:	f7ff fc27 	bl	8002bd8 <GUI_ALLOC_LockH>
 800338a:	ae04      	add	r6, sp, #16
 800338c:	f007 0708 	and.w	r7, r7, #8
 8003390:	f846 0d04 	str.w	r0, [r6, #-4]!
 8003394:	b977      	cbnz	r7, 80033b4 <WM__InsertWindowIntoList+0x64>
 8003396:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8003398:	071a      	lsls	r2, r3, #28
 800339a:	d50b      	bpl.n	80033b4 <WM__InsertWindowIntoList+0x64>
 800339c:	9b01      	ldr	r3, [sp, #4]
 800339e:	621d      	str	r5, [r3, #32]
 80033a0:	9b02      	ldr	r3, [sp, #8]
 80033a2:	a801      	add	r0, sp, #4
 80033a4:	61dc      	str	r4, [r3, #28]
 80033a6:	f7ff fc25 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80033aa:	a802      	add	r0, sp, #8
 80033ac:	f7ff fc22 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80033b0:	4630      	mov	r0, r6
 80033b2:	e01b      	b.n	80033ec <WM__InsertWindowIntoList+0x9c>
 80033b4:	a802      	add	r0, sp, #8
 80033b6:	f7ff fc1d 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80033ba:	4630      	mov	r0, r6
 80033bc:	f7ff fc1a 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80033c0:	4628      	mov	r0, r5
 80033c2:	f7ff fbff 	bl	8002bc4 <GUI_ALLOC_h2p>
 80033c6:	9003      	str	r0, [sp, #12]
 80033c8:	9b03      	ldr	r3, [sp, #12]
 80033ca:	6a1d      	ldr	r5, [r3, #32]
 80033cc:	b90d      	cbnz	r5, 80033d2 <WM__InsertWindowIntoList+0x82>
 80033ce:	621c      	str	r4, [r3, #32]
 80033d0:	e00b      	b.n	80033ea <WM__InsertWindowIntoList+0x9a>
 80033d2:	4628      	mov	r0, r5
 80033d4:	f7ff fbf6 	bl	8002bc4 <GUI_ALLOC_h2p>
 80033d8:	2f00      	cmp	r7, #0
 80033da:	d1f4      	bne.n	80033c6 <WM__InsertWindowIntoList+0x76>
 80033dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80033de:	071b      	lsls	r3, r3, #28
 80033e0:	d5f1      	bpl.n	80033c6 <WM__InsertWindowIntoList+0x76>
 80033e2:	9b03      	ldr	r3, [sp, #12]
 80033e4:	621c      	str	r4, [r3, #32]
 80033e6:	9b01      	ldr	r3, [sp, #4]
 80033e8:	621d      	str	r5, [r3, #32]
 80033ea:	a801      	add	r0, sp, #4
 80033ec:	f7ff fc02 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80033f0:	b005      	add	sp, #20
 80033f2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080033f4 <WM__Client2Screen>:
 80033f4:	4603      	mov	r3, r0
 80033f6:	4608      	mov	r0, r1
 80033f8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80033fc:	f9b3 1000 	ldrsh.w	r1, [r3]
 8003400:	f001 bf34 	b.w	800526c <GUI_MoveRect>

08003404 <_SetClipRectUserIntersect>:
 8003404:	4b11      	ldr	r3, [pc, #68]	; (800344c <_SetClipRectUserIntersect+0x48>)
 8003406:	b530      	push	{r4, r5, lr}
 8003408:	681c      	ldr	r4, [r3, #0]
 800340a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800340c:	b085      	sub	sp, #20
 800340e:	4605      	mov	r5, r0
 8003410:	b1ba      	cbz	r2, 8003442 <_SetClipRectUserIntersect+0x3e>
 8003412:	6810      	ldr	r0, [r2, #0]
 8003414:	6851      	ldr	r1, [r2, #4]
 8003416:	ab02      	add	r3, sp, #8
 8003418:	c303      	stmia	r3!, {r0, r1}
 800341a:	4b0d      	ldr	r3, [pc, #52]	; (8003450 <_SetClipRectUserIntersect+0x4c>)
 800341c:	6818      	ldr	r0, [r3, #0]
 800341e:	b900      	cbnz	r0, 8003422 <_SetClipRectUserIntersect+0x1e>
 8003420:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8003422:	f7ff fbd9 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003426:	ac04      	add	r4, sp, #16
 8003428:	a902      	add	r1, sp, #8
 800342a:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800342e:	f7ff ffe1 	bl	80033f4 <WM__Client2Screen>
 8003432:	4620      	mov	r0, r4
 8003434:	f7ff fbde 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003438:	a802      	add	r0, sp, #8
 800343a:	4629      	mov	r1, r5
 800343c:	f001 fe86 	bl	800514c <GUI__IntersectRect>
 8003440:	a802      	add	r0, sp, #8
 8003442:	f001 f9c1 	bl	80047c8 <LCD_SetClipRectEx>
 8003446:	b005      	add	sp, #20
 8003448:	bd30      	pop	{r4, r5, pc}
 800344a:	bf00      	nop
 800344c:	2000000c 	.word	0x2000000c
 8003450:	20008220 	.word	0x20008220

08003454 <WM__ActivateClipRect>:
 8003454:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003456:	4b0e      	ldr	r3, [pc, #56]	; (8003490 <WM__ActivateClipRect+0x3c>)
 8003458:	681b      	ldr	r3, [r3, #0]
 800345a:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800345e:	b10a      	cbz	r2, 8003464 <WM__ActivateClipRect+0x10>
 8003460:	480c      	ldr	r0, [pc, #48]	; (8003494 <WM__ActivateClipRect+0x40>)
 8003462:	e011      	b.n	8003488 <WM__ActivateClipRect+0x34>
 8003464:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8003466:	f7ff fbb7 	bl	8002bd8 <GUI_ALLOC_LockH>
 800346a:	9001      	str	r0, [sp, #4]
 800346c:	c803      	ldmia	r0, {r0, r1}
 800346e:	ac02      	add	r4, sp, #8
 8003470:	e884 0003 	stmia.w	r4, {r0, r1}
 8003474:	a801      	add	r0, sp, #4
 8003476:	f7ff fbbd 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 800347a:	4b07      	ldr	r3, [pc, #28]	; (8003498 <WM__ActivateClipRect+0x44>)
 800347c:	6819      	ldr	r1, [r3, #0]
 800347e:	b111      	cbz	r1, 8003486 <WM__ActivateClipRect+0x32>
 8003480:	4620      	mov	r0, r4
 8003482:	f7ff ff37 	bl	80032f4 <WM__ClipAtParentBorders>
 8003486:	4620      	mov	r0, r4
 8003488:	f7ff ffbc 	bl	8003404 <_SetClipRectUserIntersect>
 800348c:	b004      	add	sp, #16
 800348e:	bd10      	pop	{r4, pc}
 8003490:	2000000c 	.word	0x2000000c
 8003494:	200080dc 	.word	0x200080dc
 8003498:	20008220 	.word	0x20008220

0800349c <WM__InvalidateDrawAndDescs>:
 800349c:	b513      	push	{r0, r1, r4, lr}
 800349e:	4604      	mov	r4, r0
 80034a0:	b300      	cbz	r0, 80034e4 <WM__InvalidateDrawAndDescs+0x48>
 80034a2:	f7ff fb99 	bl	8002bd8 <GUI_ALLOC_LockH>
 80034a6:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80034a8:	9001      	str	r0, [sp, #4]
 80034aa:	0793      	lsls	r3, r2, #30
 80034ac:	d517      	bpl.n	80034de <WM__InvalidateDrawAndDescs+0x42>
 80034ae:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80034b0:	b140      	cbz	r0, 80034c4 <WM__InvalidateDrawAndDescs+0x28>
 80034b2:	4b0d      	ldr	r3, [pc, #52]	; (80034e8 <WM__InvalidateDrawAndDescs+0x4c>)
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	42a3      	cmp	r3, r4
 80034b8:	d004      	beq.n	80034c4 <WM__InvalidateDrawAndDescs+0x28>
 80034ba:	f001 f951 	bl	8004760 <GUI_MEMDEV_Delete>
 80034be:	9b01      	ldr	r3, [sp, #4]
 80034c0:	2200      	movs	r2, #0
 80034c2:	625a      	str	r2, [r3, #36]	; 0x24
 80034c4:	4620      	mov	r0, r4
 80034c6:	f001 ffc3 	bl	8005450 <WM_GetFirstChild>
 80034ca:	4604      	mov	r4, r0
 80034cc:	b13c      	cbz	r4, 80034de <WM__InvalidateDrawAndDescs+0x42>
 80034ce:	4620      	mov	r0, r4
 80034d0:	f7ff ffe4 	bl	800349c <WM__InvalidateDrawAndDescs>
 80034d4:	4620      	mov	r0, r4
 80034d6:	f7ff fb75 	bl	8002bc4 <GUI_ALLOC_h2p>
 80034da:	6a04      	ldr	r4, [r0, #32]
 80034dc:	e7f6      	b.n	80034cc <WM__InvalidateDrawAndDescs+0x30>
 80034de:	a801      	add	r0, sp, #4
 80034e0:	f7ff fb88 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80034e4:	b002      	add	sp, #8
 80034e6:	bd10      	pop	{r4, pc}
 80034e8:	20008268 	.word	0x20008268

080034ec <WM__RectIsNZ>:
 80034ec:	f9b0 2000 	ldrsh.w	r2, [r0]
 80034f0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80034f4:	429a      	cmp	r2, r3
 80034f6:	dc08      	bgt.n	800350a <WM__RectIsNZ+0x1e>
 80034f8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80034fc:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8003500:	429a      	cmp	r2, r3
 8003502:	bfcc      	ite	gt
 8003504:	2000      	movgt	r0, #0
 8003506:	2001      	movle	r0, #1
 8003508:	4770      	bx	lr
 800350a:	2000      	movs	r0, #0
 800350c:	4770      	bx	lr
	...

08003510 <_Invalidate1Abs>:
 8003510:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003512:	b085      	sub	sp, #20
 8003514:	4606      	mov	r6, r0
 8003516:	460d      	mov	r5, r1
 8003518:	4617      	mov	r7, r2
 800351a:	f7ff fb53 	bl	8002bc4 <GUI_ALLOC_h2p>
 800351e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8003520:	9001      	str	r0, [sp, #4]
 8003522:	07a3      	lsls	r3, r4, #30
 8003524:	d534      	bpl.n	8003590 <_Invalidate1Abs+0x80>
 8003526:	4628      	mov	r0, r5
 8003528:	f7ff ffe0 	bl	80034ec <WM__RectIsNZ>
 800352c:	2800      	cmp	r0, #0
 800352e:	d02f      	beq.n	8003590 <_Invalidate1Abs+0x80>
 8003530:	f640 0301 	movw	r3, #2049	; 0x801
 8003534:	4023      	ands	r3, r4
 8003536:	2b01      	cmp	r3, #1
 8003538:	d02a      	beq.n	8003590 <_Invalidate1Abs+0x80>
 800353a:	4630      	mov	r0, r6
 800353c:	f7ff fb4c 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003540:	ac02      	add	r4, sp, #8
 8003542:	4602      	mov	r2, r0
 8003544:	9001      	str	r0, [sp, #4]
 8003546:	4629      	mov	r1, r5
 8003548:	4620      	mov	r0, r4
 800354a:	f001 fdcd 	bl	80050e8 <GUI__IntersectRects>
 800354e:	4620      	mov	r0, r4
 8003550:	f7ff ffcc 	bl	80034ec <WM__RectIsNZ>
 8003554:	b1c8      	cbz	r0, 800358a <_Invalidate1Abs+0x7a>
 8003556:	9b01      	ldr	r3, [sp, #4]
 8003558:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800355a:	f244 0120 	movw	r1, #16416	; 0x4020
 800355e:	4031      	ands	r1, r6
 8003560:	f103 0508 	add.w	r5, r3, #8
 8003564:	b129      	cbz	r1, 8003572 <_Invalidate1Abs+0x62>
 8003566:	4628      	mov	r0, r5
 8003568:	4629      	mov	r1, r5
 800356a:	4622      	mov	r2, r4
 800356c:	f001 fe8e 	bl	800528c <GUI_MergeRect>
 8003570:	e00b      	b.n	800358a <_Invalidate1Abs+0x7a>
 8003572:	e894 0003 	ldmia.w	r4, {r0, r1}
 8003576:	433e      	orrs	r6, r7
 8003578:	e885 0003 	stmia.w	r5, {r0, r1}
 800357c:	629e      	str	r6, [r3, #40]	; 0x28
 800357e:	4b05      	ldr	r3, [pc, #20]	; (8003594 <_Invalidate1Abs+0x84>)
 8003580:	881a      	ldrh	r2, [r3, #0]
 8003582:	3201      	adds	r2, #1
 8003584:	801a      	strh	r2, [r3, #0]
 8003586:	f001 fdff 	bl	8005188 <GUI_SignalEvent>
 800358a:	a801      	add	r0, sp, #4
 800358c:	f7ff fb32 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003590:	b005      	add	sp, #20
 8003592:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003594:	2000823c 	.word	0x2000823c

08003598 <WM__Invalidate1Abs>:
 8003598:	2220      	movs	r2, #32
 800359a:	f7ff bfb9 	b.w	8003510 <_Invalidate1Abs>

0800359e <WM_InvalidateWindowAndDescsEx>:
 800359e:	b5f0      	push	{r4, r5, r6, r7, lr}
 80035a0:	460f      	mov	r7, r1
 80035a2:	b085      	sub	sp, #20
 80035a4:	4615      	mov	r5, r2
 80035a6:	4606      	mov	r6, r0
 80035a8:	b348      	cbz	r0, 80035fe <WM_InvalidateWindowAndDescsEx+0x60>
 80035aa:	f7ff fb15 	bl	8002bd8 <GUI_ALLOC_LockH>
 80035ae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80035b0:	ac04      	add	r4, sp, #16
 80035b2:	079b      	lsls	r3, r3, #30
 80035b4:	4602      	mov	r2, r0
 80035b6:	f844 0d0c 	str.w	r0, [r4, #-12]!
 80035ba:	d403      	bmi.n	80035c4 <WM_InvalidateWindowAndDescsEx+0x26>
 80035bc:	4620      	mov	r0, r4
 80035be:	f7ff fb19 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80035c2:	e01c      	b.n	80035fe <WM_InvalidateWindowAndDescsEx+0x60>
 80035c4:	a802      	add	r0, sp, #8
 80035c6:	4639      	mov	r1, r7
 80035c8:	f001 fd8e 	bl	80050e8 <GUI__IntersectRects>
 80035cc:	2800      	cmp	r0, #0
 80035ce:	d0f5      	beq.n	80035bc <WM_InvalidateWindowAndDescsEx+0x1e>
 80035d0:	4620      	mov	r0, r4
 80035d2:	f7ff fb0f 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80035d6:	4630      	mov	r0, r6
 80035d8:	a902      	add	r1, sp, #8
 80035da:	462a      	mov	r2, r5
 80035dc:	f7ff ff98 	bl	8003510 <_Invalidate1Abs>
 80035e0:	4630      	mov	r0, r6
 80035e2:	f001 ff35 	bl	8005450 <WM_GetFirstChild>
 80035e6:	4604      	mov	r4, r0
 80035e8:	b14c      	cbz	r4, 80035fe <WM_InvalidateWindowAndDescsEx+0x60>
 80035ea:	4620      	mov	r0, r4
 80035ec:	a902      	add	r1, sp, #8
 80035ee:	462a      	mov	r2, r5
 80035f0:	f7ff ffd5 	bl	800359e <WM_InvalidateWindowAndDescsEx>
 80035f4:	4620      	mov	r0, r4
 80035f6:	f7ff fae5 	bl	8002bc4 <GUI_ALLOC_h2p>
 80035fa:	6a04      	ldr	r4, [r0, #32]
 80035fc:	e7f4      	b.n	80035e8 <WM_InvalidateWindowAndDescsEx+0x4a>
 80035fe:	b005      	add	sp, #20
 8003600:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003602 <WM__InvalidateRect>:
 8003602:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003606:	4680      	mov	r8, r0
 8003608:	4617      	mov	r7, r2
 800360a:	461d      	mov	r5, r3
 800360c:	460c      	mov	r4, r1
 800360e:	2900      	cmp	r1, #0
 8003610:	d030      	beq.n	8003674 <WM__InvalidateRect+0x72>
 8003612:	4608      	mov	r0, r1
 8003614:	f7ff fae0 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003618:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800361a:	9001      	str	r0, [sp, #4]
 800361c:	07b3      	lsls	r3, r6, #30
 800361e:	4602      	mov	r2, r0
 8003620:	d525      	bpl.n	800366e <WM__InvalidateRect+0x6c>
 8003622:	a802      	add	r0, sp, #8
 8003624:	4641      	mov	r1, r8
 8003626:	f001 fd5f 	bl	80050e8 <GUI__IntersectRects>
 800362a:	b300      	cbz	r0, 800366e <WM__InvalidateRect+0x6c>
 800362c:	f640 0301 	movw	r3, #2049	; 0x801
 8003630:	4033      	ands	r3, r6
 8003632:	2b01      	cmp	r3, #1
 8003634:	d107      	bne.n	8003646 <WM__InvalidateRect+0x44>
 8003636:	9b01      	ldr	r3, [sp, #4]
 8003638:	a802      	add	r0, sp, #8
 800363a:	6999      	ldr	r1, [r3, #24]
 800363c:	6a1a      	ldr	r2, [r3, #32]
 800363e:	462b      	mov	r3, r5
 8003640:	f7ff ffdf 	bl	8003602 <WM__InvalidateRect>
 8003644:	e004      	b.n	8003650 <WM__InvalidateRect+0x4e>
 8003646:	4620      	mov	r0, r4
 8003648:	a902      	add	r1, sp, #8
 800364a:	462a      	mov	r2, r5
 800364c:	f7ff ff60 	bl	8003510 <_Invalidate1Abs>
 8003650:	9b01      	ldr	r3, [sp, #4]
 8003652:	69dc      	ldr	r4, [r3, #28]
 8003654:	b15c      	cbz	r4, 800366e <WM__InvalidateRect+0x6c>
 8003656:	42bc      	cmp	r4, r7
 8003658:	d009      	beq.n	800366e <WM__InvalidateRect+0x6c>
 800365a:	4620      	mov	r0, r4
 800365c:	a902      	add	r1, sp, #8
 800365e:	462a      	mov	r2, r5
 8003660:	f7ff ff9d 	bl	800359e <WM_InvalidateWindowAndDescsEx>
 8003664:	4620      	mov	r0, r4
 8003666:	f7ff faad 	bl	8002bc4 <GUI_ALLOC_h2p>
 800366a:	6a04      	ldr	r4, [r0, #32]
 800366c:	e7f2      	b.n	8003654 <WM__InvalidateRect+0x52>
 800366e:	a801      	add	r0, sp, #4
 8003670:	f7ff fac0 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003674:	b004      	add	sp, #16
 8003676:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800367a <WM__InvalidateRectEx>:
 800367a:	2320      	movs	r3, #32
 800367c:	f7ff bfc1 	b.w	8003602 <WM__InvalidateRect>

08003680 <WM__SendMsgNoData>:
 8003680:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003682:	ab04      	add	r3, sp, #16
 8003684:	9001      	str	r0, [sp, #4]
 8003686:	f843 1d10 	str.w	r1, [r3, #-16]!
 800368a:	4669      	mov	r1, sp
 800368c:	f001 feac 	bl	80053e8 <WM__SendMessage>
 8003690:	b005      	add	sp, #20
 8003692:	f85d fb04 	ldr.w	pc, [sp], #4

08003696 <WM__GetClientRectWin>:
 8003696:	2300      	movs	r3, #0
 8003698:	800b      	strh	r3, [r1, #0]
 800369a:	8882      	ldrh	r2, [r0, #4]
 800369c:	804b      	strh	r3, [r1, #2]
 800369e:	8803      	ldrh	r3, [r0, #0]
 80036a0:	1ad3      	subs	r3, r2, r3
 80036a2:	808b      	strh	r3, [r1, #4]
 80036a4:	88c2      	ldrh	r2, [r0, #6]
 80036a6:	8843      	ldrh	r3, [r0, #2]
 80036a8:	1ad3      	subs	r3, r2, r3
 80036aa:	80cb      	strh	r3, [r1, #6]
 80036ac:	4770      	bx	lr

080036ae <WM_InvalidateRect>:
 80036ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 80036b0:	460f      	mov	r7, r1
 80036b2:	b087      	sub	sp, #28
 80036b4:	4605      	mov	r5, r0
 80036b6:	2800      	cmp	r0, #0
 80036b8:	d033      	beq.n	8003722 <WM_InvalidateRect+0x74>
 80036ba:	f7ff fa8d 	bl	8002bd8 <GUI_ALLOC_LockH>
 80036be:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80036c0:	9001      	str	r0, [sp, #4]
 80036c2:	07b2      	lsls	r2, r6, #30
 80036c4:	d52a      	bpl.n	800371c <WM_InvalidateRect+0x6e>
 80036c6:	c803      	ldmia	r0, {r0, r1}
 80036c8:	ac04      	add	r4, sp, #16
 80036ca:	03f3      	lsls	r3, r6, #15
 80036cc:	e884 0003 	stmia.w	r4, {r0, r1}
 80036d0:	d502      	bpl.n	80036d8 <WM_InvalidateRect+0x2a>
 80036d2:	4628      	mov	r0, r5
 80036d4:	f7ff fee2 	bl	800349c <WM__InvalidateDrawAndDescs>
 80036d8:	b15f      	cbz	r7, 80036f2 <WM_InvalidateRect+0x44>
 80036da:	6838      	ldr	r0, [r7, #0]
 80036dc:	6879      	ldr	r1, [r7, #4]
 80036de:	ab02      	add	r3, sp, #8
 80036e0:	c303      	stmia	r3!, {r0, r1}
 80036e2:	9801      	ldr	r0, [sp, #4]
 80036e4:	a902      	add	r1, sp, #8
 80036e6:	f7ff fe85 	bl	80033f4 <WM__Client2Screen>
 80036ea:	4620      	mov	r0, r4
 80036ec:	a902      	add	r1, sp, #8
 80036ee:	f001 fd2d 	bl	800514c <GUI__IntersectRect>
 80036f2:	4620      	mov	r0, r4
 80036f4:	4629      	mov	r1, r5
 80036f6:	f7ff fdfd 	bl	80032f4 <WM__ClipAtParentBorders>
 80036fa:	b178      	cbz	r0, 800371c <WM_InvalidateRect+0x6e>
 80036fc:	f640 0301 	movw	r3, #2049	; 0x801
 8003700:	4033      	ands	r3, r6
 8003702:	2b01      	cmp	r3, #1
 8003704:	d106      	bne.n	8003714 <WM_InvalidateRect+0x66>
 8003706:	9b01      	ldr	r3, [sp, #4]
 8003708:	4620      	mov	r0, r4
 800370a:	6999      	ldr	r1, [r3, #24]
 800370c:	6a1a      	ldr	r2, [r3, #32]
 800370e:	f7ff ffb4 	bl	800367a <WM__InvalidateRectEx>
 8003712:	e003      	b.n	800371c <WM_InvalidateRect+0x6e>
 8003714:	4628      	mov	r0, r5
 8003716:	4621      	mov	r1, r4
 8003718:	f7ff ff3e 	bl	8003598 <WM__Invalidate1Abs>
 800371c:	a801      	add	r0, sp, #4
 800371e:	f7ff fa69 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003722:	b007      	add	sp, #28
 8003724:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003726 <WM_InvalidateWindow>:
 8003726:	2100      	movs	r1, #0
 8003728:	f7ff bfc1 	b.w	80036ae <WM_InvalidateRect>

0800372c <WM__GetTopLevelLayer>:
 800372c:	b510      	push	{r4, lr}
 800372e:	4604      	mov	r4, r0
 8003730:	f7ff fa48 	bl	8002bc4 <GUI_ALLOC_h2p>
 8003734:	6980      	ldr	r0, [r0, #24]
 8003736:	2800      	cmp	r0, #0
 8003738:	d1f9      	bne.n	800372e <WM__GetTopLevelLayer+0x2>
 800373a:	4b05      	ldr	r3, [pc, #20]	; (8003750 <WM__GetTopLevelLayer+0x24>)
 800373c:	681a      	ldr	r2, [r3, #0]
 800373e:	4294      	cmp	r4, r2
 8003740:	d005      	beq.n	800374e <WM__GetTopLevelLayer+0x22>
 8003742:	6858      	ldr	r0, [r3, #4]
 8003744:	4284      	cmp	r4, r0
 8003746:	bf14      	ite	ne
 8003748:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 800374c:	2001      	moveq	r0, #1
 800374e:	bd10      	pop	{r4, pc}
 8003750:	20008224 	.word	0x20008224

08003754 <WM__SelectTopLevelLayer>:
 8003754:	b508      	push	{r3, lr}
 8003756:	f7ff ffe9 	bl	800372c <WM__GetTopLevelLayer>
 800375a:	2800      	cmp	r0, #0
 800375c:	db03      	blt.n	8003766 <WM__SelectTopLevelLayer+0x12>
 800375e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003762:	f001 bd3f 	b.w	80051e4 <GUI_SelectLayer>
 8003766:	bd08      	pop	{r3, pc}

08003768 <WM_SelectWindow>:
 8003768:	4a0d      	ldr	r2, [pc, #52]	; (80037a0 <WM_SelectWindow+0x38>)
 800376a:	6813      	ldr	r3, [r2, #0]
 800376c:	b570      	push	{r4, r5, r6, lr}
 800376e:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 8003770:	4604      	mov	r4, r0
 8003772:	4616      	mov	r6, r2
 8003774:	b908      	cbnz	r0, 800377a <WM_SelectWindow+0x12>
 8003776:	4a0b      	ldr	r2, [pc, #44]	; (80037a4 <WM_SelectWindow+0x3c>)
 8003778:	6814      	ldr	r4, [r2, #0]
 800377a:	649c      	str	r4, [r3, #72]	; 0x48
 800377c:	4620      	mov	r0, r4
 800377e:	f7ff ffe9 	bl	8003754 <WM__SelectTopLevelLayer>
 8003782:	f001 fbef 	bl	8004f64 <LCD_SetClipRectMax>
 8003786:	4620      	mov	r0, r4
 8003788:	f7ff fa1c 	bl	8002bc4 <GUI_ALLOC_h2p>
 800378c:	6833      	ldr	r3, [r6, #0]
 800378e:	f9b0 1000 	ldrsh.w	r1, [r0]
 8003792:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8003796:	64d9      	str	r1, [r3, #76]	; 0x4c
 8003798:	651a      	str	r2, [r3, #80]	; 0x50
 800379a:	4628      	mov	r0, r5
 800379c:	bd70      	pop	{r4, r5, r6, pc}
 800379e:	bf00      	nop
 80037a0:	2000000c 	.word	0x2000000c
 80037a4:	20008240 	.word	0x20008240

080037a8 <WM_CreateWindowAsChild>:
 80037a8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80037ae:	469b      	mov	fp, r3
 80037b0:	4b4b      	ldr	r3, [pc, #300]	; (80038e0 <WM_CreateWindowAsChild+0x138>)
 80037b2:	4607      	mov	r7, r0
 80037b4:	4688      	mov	r8, r1
 80037b6:	4692      	mov	sl, r2
 80037b8:	681e      	ldr	r6, [r3, #0]
 80037ba:	bb65      	cbnz	r5, 8003816 <WM_CreateWindowAsChild+0x6e>
 80037bc:	4b49      	ldr	r3, [pc, #292]	; (80038e4 <WM_CreateWindowAsChild+0x13c>)
 80037be:	881b      	ldrh	r3, [r3, #0]
 80037c0:	b363      	cbz	r3, 800381c <WM_CreateWindowAsChild+0x74>
 80037c2:	4b49      	ldr	r3, [pc, #292]	; (80038e8 <WM_CreateWindowAsChild+0x140>)
 80037c4:	681b      	ldr	r3, [r3, #0]
 80037c6:	7c5a      	ldrb	r2, [r3, #17]
 80037c8:	4b48      	ldr	r3, [pc, #288]	; (80038ec <WM_CreateWindowAsChild+0x144>)
 80037ca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80037ce:	1c5a      	adds	r2, r3, #1
 80037d0:	d024      	beq.n	800381c <WM_CreateWindowAsChild+0x74>
 80037d2:	b31b      	cbz	r3, 800381c <WM_CreateWindowAsChild+0x74>
 80037d4:	461d      	mov	r5, r3
 80037d6:	4628      	mov	r0, r5
 80037d8:	f7ff f9fe 	bl	8002bd8 <GUI_ALLOC_LockH>
 80037dc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80037e0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80037e4:	9001      	str	r0, [sp, #4]
 80037e6:	4417      	add	r7, r2
 80037e8:	4498      	add	r8, r3
 80037ea:	f1ba 0f00 	cmp.w	sl, #0
 80037ee:	d105      	bne.n	80037fc <WM_CreateWindowAsChild+0x54>
 80037f0:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 80037f4:	ebc2 0a0a 	rsb	sl, r2, sl
 80037f8:	f10a 0a01 	add.w	sl, sl, #1
 80037fc:	f1bb 0f00 	cmp.w	fp, #0
 8003800:	d105      	bne.n	800380e <WM_CreateWindowAsChild+0x66>
 8003802:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 8003806:	ebc3 0b0b 	rsb	fp, r3, fp
 800380a:	f10b 0b01 	add.w	fp, fp, #1
 800380e:	a801      	add	r0, sp, #4
 8003810:	f7ff f9f0 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003814:	e002      	b.n	800381c <WM_CreateWindowAsChild+0x74>
 8003816:	1c6b      	adds	r3, r5, #1
 8003818:	d1dd      	bne.n	80037d6 <WM_CreateWindowAsChild+0x2e>
 800381a:	2500      	movs	r5, #0
 800381c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800381e:	302c      	adds	r0, #44	; 0x2c
 8003820:	f001 fd68 	bl	80052f4 <GUI_ALLOC_AllocZero>
 8003824:	4604      	mov	r4, r0
 8003826:	2800      	cmp	r0, #0
 8003828:	d056      	beq.n	80038d8 <WM_CreateWindowAsChild+0x130>
 800382a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800382c:	431e      	orrs	r6, r3
 800382e:	4b2d      	ldr	r3, [pc, #180]	; (80038e4 <WM_CreateWindowAsChild+0x13c>)
 8003830:	881a      	ldrh	r2, [r3, #0]
 8003832:	3201      	adds	r2, #1
 8003834:	801a      	strh	r2, [r3, #0]
 8003836:	f7ff f9cf 	bl	8002bd8 <GUI_ALLOC_LockH>
 800383a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800383c:	6103      	str	r3, [r0, #16]
 800383e:	f10d 0908 	add.w	r9, sp, #8
 8003842:	4b2b      	ldr	r3, [pc, #172]	; (80038f0 <WM_CreateWindowAsChild+0x148>)
 8003844:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8003846:	f849 0d08 	str.w	r0, [r9, #-8]!
 800384a:	4033      	ands	r3, r6
 800384c:	8007      	strh	r7, [r0, #0]
 800384e:	f8a0 8002 	strh.w	r8, [r0, #2]
 8003852:	4457      	add	r7, sl
 8003854:	44d8      	add	r8, fp
 8003856:	4313      	orrs	r3, r2
 8003858:	3f01      	subs	r7, #1
 800385a:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 800385e:	6283      	str	r3, [r0, #40]	; 0x28
 8003860:	8087      	strh	r7, [r0, #4]
 8003862:	f8a0 8006 	strh.w	r8, [r0, #6]
 8003866:	4668      	mov	r0, sp
 8003868:	f7ff f9c4 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 800386c:	4b21      	ldr	r3, [pc, #132]	; (80038f4 <WM_CreateWindowAsChild+0x14c>)
 800386e:	6818      	ldr	r0, [r3, #0]
 8003870:	b148      	cbz	r0, 8003886 <WM_CreateWindowAsChild+0xde>
 8003872:	f7ff f9a7 	bl	8002bc4 <GUI_ALLOC_h2p>
 8003876:	4607      	mov	r7, r0
 8003878:	4620      	mov	r0, r4
 800387a:	f7ff f9a3 	bl	8002bc4 <GUI_ALLOC_h2p>
 800387e:	697b      	ldr	r3, [r7, #20]
 8003880:	6143      	str	r3, [r0, #20]
 8003882:	617c      	str	r4, [r7, #20]
 8003884:	e000      	b.n	8003888 <WM_CreateWindowAsChild+0xe0>
 8003886:	601c      	str	r4, [r3, #0]
 8003888:	4629      	mov	r1, r5
 800388a:	4620      	mov	r0, r4
 800388c:	f7ff fd60 	bl	8003350 <WM__InsertWindowIntoList>
 8003890:	06b5      	lsls	r5, r6, #26
 8003892:	d502      	bpl.n	800389a <WM_CreateWindowAsChild+0xf2>
 8003894:	4620      	mov	r0, r4
 8003896:	f7ff ff67 	bl	8003768 <WM_SelectWindow>
 800389a:	07f0      	lsls	r0, r6, #31
 800389c:	d503      	bpl.n	80038a6 <WM_CreateWindowAsChild+0xfe>
 800389e:	4b16      	ldr	r3, [pc, #88]	; (80038f8 <WM_CreateWindowAsChild+0x150>)
 80038a0:	681a      	ldr	r2, [r3, #0]
 80038a2:	3201      	adds	r2, #1
 80038a4:	601a      	str	r2, [r3, #0]
 80038a6:	0671      	lsls	r1, r6, #25
 80038a8:	d502      	bpl.n	80038b0 <WM_CreateWindowAsChild+0x108>
 80038aa:	4620      	mov	r0, r4
 80038ac:	f001 fdf2 	bl	8005494 <WM_BringToBottom>
 80038b0:	07b2      	lsls	r2, r6, #30
 80038b2:	d50d      	bpl.n	80038d0 <WM_CreateWindowAsChild+0x128>
 80038b4:	4620      	mov	r0, r4
 80038b6:	f7ff f98f 	bl	8002bd8 <GUI_ALLOC_LockH>
 80038ba:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80038bc:	9000      	str	r0, [sp, #0]
 80038be:	f043 0302 	orr.w	r3, r3, #2
 80038c2:	6283      	str	r3, [r0, #40]	; 0x28
 80038c4:	4668      	mov	r0, sp
 80038c6:	f7ff f995 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80038ca:	4620      	mov	r0, r4
 80038cc:	f7ff ff2b 	bl	8003726 <WM_InvalidateWindow>
 80038d0:	4620      	mov	r0, r4
 80038d2:	2101      	movs	r1, #1
 80038d4:	f7ff fed4 	bl	8003680 <WM__SendMsgNoData>
 80038d8:	4620      	mov	r0, r4
 80038da:	b003      	add	sp, #12
 80038dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80038e0:	2000824c 	.word	0x2000824c
 80038e4:	2000821c 	.word	0x2000821c
 80038e8:	2000000c 	.word	0x2000000c
 80038ec:	20008224 	.word	0x20008224
 80038f0:	003f3f9f 	.word	0x003f3f9f
 80038f4:	20008240 	.word	0x20008240
 80038f8:	2000826c 	.word	0x2000826c

080038fc <WM__GetNextIVR>:
 80038fc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003900:	4f5d      	ldr	r7, [pc, #372]	; (8003a78 <WM__GetNextIVR+0x17c>)
 8003902:	683b      	ldr	r3, [r7, #0]
 8003904:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8003908:	2800      	cmp	r0, #0
 800390a:	f000 80b2 	beq.w	8003a72 <WM__GetNextIVR+0x176>
 800390e:	4b5b      	ldr	r3, [pc, #364]	; (8003a7c <WM__GetNextIVR+0x180>)
 8003910:	695a      	ldr	r2, [r3, #20]
 8003912:	2a01      	cmp	r2, #1
 8003914:	461c      	mov	r4, r3
 8003916:	dd03      	ble.n	8003920 <WM__GetNextIVR+0x24>
 8003918:	3a01      	subs	r2, #1
 800391a:	615a      	str	r2, [r3, #20]
 800391c:	2000      	movs	r0, #0
 800391e:	e0a8      	b.n	8003a72 <WM__GetNextIVR+0x176>
 8003920:	f104 0608 	add.w	r6, r4, #8
 8003924:	691b      	ldr	r3, [r3, #16]
 8003926:	e896 0003 	ldmia.w	r6, {r0, r1}
 800392a:	3301      	adds	r3, #1
 800392c:	ad02      	add	r5, sp, #8
 800392e:	6123      	str	r3, [r4, #16]
 8003930:	e885 0003 	stmia.w	r5, {r0, r1}
 8003934:	b923      	cbnz	r3, 8003940 <WM__GetNextIVR+0x44>
 8003936:	8823      	ldrh	r3, [r4, #0]
 8003938:	f8ad 3008 	strh.w	r3, [sp, #8]
 800393c:	8863      	ldrh	r3, [r4, #2]
 800393e:	e011      	b.n	8003964 <WM__GetNextIVR+0x68>
 8003940:	89a3      	ldrh	r3, [r4, #12]
 8003942:	8962      	ldrh	r2, [r4, #10]
 8003944:	f8ad 200a 	strh.w	r2, [sp, #10]
 8003948:	3301      	adds	r3, #1
 800394a:	b29b      	uxth	r3, r3
 800394c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8003950:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003954:	b21b      	sxth	r3, r3
 8003956:	429a      	cmp	r2, r3
 8003958:	da06      	bge.n	8003968 <WM__GetNextIVR+0x6c>
 800395a:	8823      	ldrh	r3, [r4, #0]
 800395c:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003960:	89e3      	ldrh	r3, [r4, #14]
 8003962:	3301      	adds	r3, #1
 8003964:	f8ad 300a 	strh.w	r3, [sp, #10]
 8003968:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800396c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8003970:	f8df 8108 	ldr.w	r8, [pc, #264]	; 8003a7c <WM__GetNextIVR+0x180>
 8003974:	429a      	cmp	r2, r3
 8003976:	dd04      	ble.n	8003982 <WM__GetNextIVR+0x86>
 8003978:	6963      	ldr	r3, [r4, #20]
 800397a:	3b01      	subs	r3, #1
 800397c:	2000      	movs	r0, #0
 800397e:	6163      	str	r3, [r4, #20]
 8003980:	e077      	b.n	8003a72 <WM__GetNextIVR+0x176>
 8003982:	683b      	ldr	r3, [r7, #0]
 8003984:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8003986:	f7ff f927 	bl	8002bd8 <GUI_ALLOC_LockH>
 800398a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800398e:	f9b8 3000 	ldrsh.w	r3, [r8]
 8003992:	9001      	str	r0, [sp, #4]
 8003994:	429a      	cmp	r2, r3
 8003996:	d11c      	bne.n	80039d2 <WM__GetNextIVR+0xd6>
 8003998:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800399c:	f8ad 300e 	strh.w	r3, [sp, #14]
 80039a0:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 80039a4:	f8ad 300c 	strh.w	r3, [sp, #12]
 80039a8:	4b33      	ldr	r3, [pc, #204]	; (8003a78 <WM__GetNextIVR+0x17c>)
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80039ae:	b15a      	cbz	r2, 80039c8 <WM__GetNextIVR+0xcc>
 80039b0:	4610      	mov	r0, r2
 80039b2:	f7ff f907 	bl	8002bc4 <GUI_ALLOC_h2p>
 80039b6:	4680      	mov	r8, r0
 80039b8:	2200      	movs	r2, #0
 80039ba:	6a00      	ldr	r0, [r0, #32]
 80039bc:	4629      	mov	r1, r5
 80039be:	f7ff fbc3 	bl	8003148 <_Findy1>
 80039c2:	f8d8 2018 	ldr.w	r2, [r8, #24]
 80039c6:	e7f2      	b.n	80039ae <WM__GetNextIVR+0xb2>
 80039c8:	9b01      	ldr	r3, [sp, #4]
 80039ca:	4629      	mov	r1, r5
 80039cc:	69d8      	ldr	r0, [r3, #28]
 80039ce:	f7ff fbbb 	bl	8003148 <_Findy1>
 80039d2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80039d6:	f8ad 300c 	strh.w	r3, [sp, #12]
 80039da:	683b      	ldr	r3, [r7, #0]
 80039dc:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80039de:	b16a      	cbz	r2, 80039fc <WM__GetNextIVR+0x100>
 80039e0:	4610      	mov	r0, r2
 80039e2:	f7ff f8ef 	bl	8002bc4 <GUI_ALLOC_h2p>
 80039e6:	4629      	mov	r1, r5
 80039e8:	4680      	mov	r8, r0
 80039ea:	2200      	movs	r2, #0
 80039ec:	6a00      	ldr	r0, [r0, #32]
 80039ee:	f7ff fc01 	bl	80031f4 <_Findx0>
 80039f2:	2800      	cmp	r0, #0
 80039f4:	d1ed      	bne.n	80039d2 <WM__GetNextIVR+0xd6>
 80039f6:	f8d8 2018 	ldr.w	r2, [r8, #24]
 80039fa:	e7f0      	b.n	80039de <WM__GetNextIVR+0xe2>
 80039fc:	9b01      	ldr	r3, [sp, #4]
 80039fe:	4629      	mov	r1, r5
 8003a00:	69d8      	ldr	r0, [r3, #28]
 8003a02:	f7ff fbf7 	bl	80031f4 <_Findx0>
 8003a06:	2800      	cmp	r0, #0
 8003a08:	d1e3      	bne.n	80039d2 <WM__GetNextIVR+0xd6>
 8003a0a:	88a3      	ldrh	r3, [r4, #4]
 8003a0c:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8003a10:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003a14:	b21b      	sxth	r3, r3
 8003a16:	429a      	cmp	r2, r3
 8003a18:	dd07      	ble.n	8003a2a <WM__GetNextIVR+0x12e>
 8003a1a:	e895 0003 	ldmia.w	r5, {r0, r1}
 8003a1e:	e886 0003 	stmia.w	r6, {r0, r1}
 8003a22:	a801      	add	r0, sp, #4
 8003a24:	f7ff f8e6 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003a28:	e797      	b.n	800395a <WM__GetNextIVR+0x5e>
 8003a2a:	683b      	ldr	r3, [r7, #0]
 8003a2c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8003a2e:	b152      	cbz	r2, 8003a46 <WM__GetNextIVR+0x14a>
 8003a30:	4610      	mov	r0, r2
 8003a32:	f7ff f8c7 	bl	8002bc4 <GUI_ALLOC_h2p>
 8003a36:	4607      	mov	r7, r0
 8003a38:	2200      	movs	r2, #0
 8003a3a:	6a00      	ldr	r0, [r0, #32]
 8003a3c:	4629      	mov	r1, r5
 8003a3e:	f7ff fc1d 	bl	800327c <_Findx1>
 8003a42:	69ba      	ldr	r2, [r7, #24]
 8003a44:	e7f3      	b.n	8003a2e <WM__GetNextIVR+0x132>
 8003a46:	af04      	add	r7, sp, #16
 8003a48:	4629      	mov	r1, r5
 8003a4a:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 8003a4e:	69d8      	ldr	r0, [r3, #28]
 8003a50:	f7ff fc14 	bl	800327c <_Findx1>
 8003a54:	4638      	mov	r0, r7
 8003a56:	f7ff f8cd 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003a5a:	6923      	ldr	r3, [r4, #16]
 8003a5c:	f644 6220 	movw	r2, #20000	; 0x4e20
 8003a60:	4293      	cmp	r3, r2
 8003a62:	dc89      	bgt.n	8003978 <WM__GetNextIVR+0x7c>
 8003a64:	e895 0003 	ldmia.w	r5, {r0, r1}
 8003a68:	e886 0003 	stmia.w	r6, {r0, r1}
 8003a6c:	f7ff fcf2 	bl	8003454 <WM__ActivateClipRect>
 8003a70:	2001      	movs	r0, #1
 8003a72:	b004      	add	sp, #16
 8003a74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003a78:	2000000c 	.word	0x2000000c
 8003a7c:	200080d4 	.word	0x200080d4

08003a80 <WM__InitIVRSearch>:
 8003a80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003a84:	4f39      	ldr	r7, [pc, #228]	; (8003b6c <WM__InitIVRSearch+0xec>)
 8003a86:	683b      	ldr	r3, [r7, #0]
 8003a88:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 8003a8c:	b086      	sub	sp, #24
 8003a8e:	4606      	mov	r6, r0
 8003a90:	b912      	cbnz	r2, 8003a98 <WM__InitIVRSearch+0x18>
 8003a92:	f7ff fcdf 	bl	8003454 <WM__ActivateClipRect>
 8003a96:	e064      	b.n	8003b62 <WM__InitIVRSearch+0xe2>
 8003a98:	4d35      	ldr	r5, [pc, #212]	; (8003b70 <WM__InitIVRSearch+0xf0>)
 8003a9a:	696a      	ldr	r2, [r5, #20]
 8003a9c:	3201      	adds	r2, #1
 8003a9e:	2a01      	cmp	r2, #1
 8003aa0:	616a      	str	r2, [r5, #20]
 8003aa2:	462c      	mov	r4, r5
 8003aa4:	dc5d      	bgt.n	8003b62 <WM__InitIVRSearch+0xe2>
 8003aa6:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8003aa8:	f7ff f896 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003aac:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003ab0:	612a      	str	r2, [r5, #16]
 8003ab2:	4a30      	ldr	r2, [pc, #192]	; (8003b74 <WM__InitIVRSearch+0xf4>)
 8003ab4:	9000      	str	r0, [sp, #0]
 8003ab6:	7812      	ldrb	r2, [r2, #0]
 8003ab8:	b12a      	cbz	r2, 8003ac6 <WM__InitIVRSearch+0x46>
 8003aba:	f100 0308 	add.w	r3, r0, #8
 8003abe:	aa02      	add	r2, sp, #8
 8003ac0:	e893 0003 	ldmia.w	r3, {r0, r1}
 8003ac4:	e005      	b.n	8003ad2 <WM__InitIVRSearch+0x52>
 8003ac6:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8003ac8:	f012 0802 	ands.w	r8, r2, #2
 8003acc:	d00a      	beq.n	8003ae4 <WM__InitIVRSearch+0x64>
 8003ace:	c803      	ldmia	r0, {r0, r1}
 8003ad0:	aa02      	add	r2, sp, #8
 8003ad2:	e882 0003 	stmia.w	r2, {r0, r1}
 8003ad6:	ad02      	add	r5, sp, #8
 8003ad8:	b166      	cbz	r6, 8003af4 <WM__InitIVRSearch+0x74>
 8003ada:	4628      	mov	r0, r5
 8003adc:	4631      	mov	r1, r6
 8003ade:	f001 fb35 	bl	800514c <GUI__IntersectRect>
 8003ae2:	e007      	b.n	8003af4 <WM__InitIVRSearch+0x74>
 8003ae4:	696b      	ldr	r3, [r5, #20]
 8003ae6:	4668      	mov	r0, sp
 8003ae8:	3b01      	subs	r3, #1
 8003aea:	616b      	str	r3, [r5, #20]
 8003aec:	f7ff f882 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003af0:	4640      	mov	r0, r8
 8003af2:	e037      	b.n	8003b64 <WM__InitIVRSearch+0xe4>
 8003af4:	683b      	ldr	r3, [r7, #0]
 8003af6:	4e20      	ldr	r6, [pc, #128]	; (8003b78 <WM__InitIVRSearch+0xf8>)
 8003af8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003afa:	b1c2      	cbz	r2, 8003b2e <WM__InitIVRSearch+0xae>
 8003afc:	9b00      	ldr	r3, [sp, #0]
 8003afe:	6810      	ldr	r0, [r2, #0]
 8003b00:	6851      	ldr	r1, [r2, #4]
 8003b02:	9301      	str	r3, [sp, #4]
 8003b04:	ab04      	add	r3, sp, #16
 8003b06:	c303      	stmia	r3!, {r0, r1}
 8003b08:	6833      	ldr	r3, [r6, #0]
 8003b0a:	b133      	cbz	r3, 8003b1a <WM__InitIVRSearch+0x9a>
 8003b0c:	a801      	add	r0, sp, #4
 8003b0e:	f7ff f871 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003b12:	6830      	ldr	r0, [r6, #0]
 8003b14:	f7ff f860 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003b18:	9001      	str	r0, [sp, #4]
 8003b1a:	9801      	ldr	r0, [sp, #4]
 8003b1c:	a904      	add	r1, sp, #16
 8003b1e:	f7ff fc69 	bl	80033f4 <WM__Client2Screen>
 8003b22:	4628      	mov	r0, r5
 8003b24:	a904      	add	r1, sp, #16
 8003b26:	f001 fb11 	bl	800514c <GUI__IntersectRect>
 8003b2a:	a801      	add	r0, sp, #4
 8003b2c:	e000      	b.n	8003b30 <WM__InitIVRSearch+0xb0>
 8003b2e:	4668      	mov	r0, sp
 8003b30:	f7ff f860 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003b34:	6831      	ldr	r1, [r6, #0]
 8003b36:	b119      	cbz	r1, 8003b40 <WM__InitIVRSearch+0xc0>
 8003b38:	4628      	mov	r0, r5
 8003b3a:	f7ff fbdb 	bl	80032f4 <WM__ClipAtParentBorders>
 8003b3e:	b128      	cbz	r0, 8003b4c <WM__InitIVRSearch+0xcc>
 8003b40:	683b      	ldr	r3, [r7, #0]
 8003b42:	4628      	mov	r0, r5
 8003b44:	6c99      	ldr	r1, [r3, #72]	; 0x48
 8003b46:	f7ff fbd5 	bl	80032f4 <WM__ClipAtParentBorders>
 8003b4a:	b918      	cbnz	r0, 8003b54 <WM__InitIVRSearch+0xd4>
 8003b4c:	6963      	ldr	r3, [r4, #20]
 8003b4e:	3b01      	subs	r3, #1
 8003b50:	6163      	str	r3, [r4, #20]
 8003b52:	e007      	b.n	8003b64 <WM__InitIVRSearch+0xe4>
 8003b54:	e895 0003 	ldmia.w	r5, {r0, r1}
 8003b58:	e884 0003 	stmia.w	r4, {r0, r1}
 8003b5c:	f7ff fece 	bl	80038fc <WM__GetNextIVR>
 8003b60:	e000      	b.n	8003b64 <WM__InitIVRSearch+0xe4>
 8003b62:	2001      	movs	r0, #1
 8003b64:	b006      	add	sp, #24
 8003b66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003b6a:	bf00      	nop
 8003b6c:	2000000c 	.word	0x2000000c
 8003b70:	200080d4 	.word	0x200080d4
 8003b74:	20008249 	.word	0x20008249
 8003b78:	20008220 	.word	0x20008220

08003b7c <WM_Activate>:
 8003b7c:	4b02      	ldr	r3, [pc, #8]	; (8003b88 <WM_Activate+0xc>)
 8003b7e:	681b      	ldr	r3, [r3, #0]
 8003b80:	2201      	movs	r2, #1
 8003b82:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8003b86:	4770      	bx	lr
 8003b88:	2000000c 	.word	0x2000000c

08003b8c <WM_DefaultProc>:
 8003b8c:	b510      	push	{r4, lr}
 8003b8e:	4604      	mov	r4, r0
 8003b90:	6840      	ldr	r0, [r0, #4]
 8003b92:	6823      	ldr	r3, [r4, #0]
 8003b94:	68e1      	ldr	r1, [r4, #12]
 8003b96:	2b17      	cmp	r3, #23
 8003b98:	d00f      	beq.n	8003bba <WM_DefaultProc+0x2e>
 8003b9a:	dc06      	bgt.n	8003baa <WM_DefaultProc+0x1e>
 8003b9c:	2b0e      	cmp	r3, #14
 8003b9e:	d00e      	beq.n	8003bbe <WM_DefaultProc+0x32>
 8003ba0:	2b14      	cmp	r3, #20
 8003ba2:	d114      	bne.n	8003bce <WM_DefaultProc+0x42>
 8003ba4:	f001 fc5c 	bl	8005460 <WM__GetClientRectEx>
 8003ba8:	e011      	b.n	8003bce <WM_DefaultProc+0x42>
 8003baa:	2b22      	cmp	r3, #34	; 0x22
 8003bac:	d00c      	beq.n	8003bc8 <WM_DefaultProc+0x3c>
 8003bae:	2b28      	cmp	r3, #40	; 0x28
 8003bb0:	d10d      	bne.n	8003bce <WM_DefaultProc+0x42>
 8003bb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003bb6:	f7ff bdb6 	b.w	8003726 <WM_InvalidateWindow>
 8003bba:	60e0      	str	r0, [r4, #12]
 8003bbc:	bd10      	pop	{r4, pc}
 8003bbe:	4621      	mov	r1, r4
 8003bc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003bc4:	f001 bc2e 	b.w	8005424 <WM_SendToParent>
 8003bc8:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8003bcc:	e000      	b.n	8003bd0 <WM_DefaultProc+0x44>
 8003bce:	2300      	movs	r3, #0
 8003bd0:	60e3      	str	r3, [r4, #12]
 8003bd2:	bd10      	pop	{r4, pc}

08003bd4 <_cbBackWin>:
 8003bd4:	6803      	ldr	r3, [r0, #0]
 8003bd6:	2b0e      	cmp	r3, #14
 8003bd8:	b510      	push	{r4, lr}
 8003bda:	4604      	mov	r4, r0
 8003bdc:	d002      	beq.n	8003be4 <_cbBackWin+0x10>
 8003bde:	2b0f      	cmp	r3, #15
 8003be0:	d009      	beq.n	8003bf6 <_cbBackWin+0x22>
 8003be2:	e020      	b.n	8003c26 <_cbBackWin+0x52>
 8003be4:	68c3      	ldr	r3, [r0, #12]
 8003be6:	685a      	ldr	r2, [r3, #4]
 8003be8:	2a01      	cmp	r2, #1
 8003bea:	d121      	bne.n	8003c30 <_cbBackWin+0x5c>
 8003bec:	6818      	ldr	r0, [r3, #0]
 8003bee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003bf2:	f001 bb33 	b.w	800525c <GUI_StoreKey>
 8003bf6:	4a0f      	ldr	r2, [pc, #60]	; (8003c34 <_cbBackWin+0x60>)
 8003bf8:	6843      	ldr	r3, [r0, #4]
 8003bfa:	6811      	ldr	r1, [r2, #0]
 8003bfc:	428b      	cmp	r3, r1
 8003bfe:	d006      	beq.n	8003c0e <_cbBackWin+0x3a>
 8003c00:	6852      	ldr	r2, [r2, #4]
 8003c02:	4293      	cmp	r3, r2
 8003c04:	bf14      	ite	ne
 8003c06:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
 8003c0a:	2301      	moveq	r3, #1
 8003c0c:	e000      	b.n	8003c10 <_cbBackWin+0x3c>
 8003c0e:	2300      	movs	r3, #0
 8003c10:	4a09      	ldr	r2, [pc, #36]	; (8003c38 <_cbBackWin+0x64>)
 8003c12:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8003c16:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8003c1a:	4298      	cmp	r0, r3
 8003c1c:	d003      	beq.n	8003c26 <_cbBackWin+0x52>
 8003c1e:	f001 fadf 	bl	80051e0 <GUI_SetBkColor>
 8003c22:	f7fe fd79 	bl	8002718 <GUI_Clear>
 8003c26:	4620      	mov	r0, r4
 8003c28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003c2c:	f7ff bfae 	b.w	8003b8c <WM_DefaultProc>
 8003c30:	bd10      	pop	{r4, pc}
 8003c32:	bf00      	nop
 8003c34:	20008224 	.word	0x20008224
 8003c38:	20008250 	.word	0x20008250

08003c3c <WM_Init>:
 8003c3c:	b530      	push	{r4, r5, lr}
 8003c3e:	4b2b      	ldr	r3, [pc, #172]	; (8003cec <WM_Init+0xb0>)
 8003c40:	7818      	ldrb	r0, [r3, #0]
 8003c42:	b085      	sub	sp, #20
 8003c44:	461d      	mov	r5, r3
 8003c46:	2800      	cmp	r0, #0
 8003c48:	d14d      	bne.n	8003ce6 <WM_Init+0xaa>
 8003c4a:	4b29      	ldr	r3, [pc, #164]	; (8003cf0 <WM_Init+0xb4>)
 8003c4c:	6018      	str	r0, [r3, #0]
 8003c4e:	4b29      	ldr	r3, [pc, #164]	; (8003cf4 <WM_Init+0xb8>)
 8003c50:	6018      	str	r0, [r3, #0]
 8003c52:	4b29      	ldr	r3, [pc, #164]	; (8003cf8 <WM_Init+0xbc>)
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	6458      	str	r0, [r3, #68]	; 0x44
 8003c58:	4b28      	ldr	r3, [pc, #160]	; (8003cfc <WM_Init+0xc0>)
 8003c5a:	8018      	strh	r0, [r3, #0]
 8003c5c:	4b28      	ldr	r3, [pc, #160]	; (8003d00 <WM_Init+0xc4>)
 8003c5e:	4604      	mov	r4, r0
 8003c60:	8018      	strh	r0, [r3, #0]
 8003c62:	4620      	mov	r0, r4
 8003c64:	f7fe fc2e 	bl	80024c4 <GUI_DEVICE__GetpDriver>
 8003c68:	b1c0      	cbz	r0, 8003c9c <WM_Init+0x60>
 8003c6a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003c6e:	2302      	movs	r3, #2
 8003c70:	e88d 000c 	stmia.w	sp, {r2, r3}
 8003c74:	2000      	movs	r0, #0
 8003c76:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8003c7a:	4b22      	ldr	r3, [pc, #136]	; (8003d04 <WM_Init+0xc8>)
 8003c7c:	9302      	str	r3, [sp, #8]
 8003c7e:	9003      	str	r0, [sp, #12]
 8003c80:	4613      	mov	r3, r2
 8003c82:	4601      	mov	r1, r0
 8003c84:	f7ff fd90 	bl	80037a8 <WM_CreateWindowAsChild>
 8003c88:	4b1f      	ldr	r3, [pc, #124]	; (8003d08 <WM_Init+0xcc>)
 8003c8a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8003c8e:	4b1f      	ldr	r3, [pc, #124]	; (8003d0c <WM_Init+0xd0>)
 8003c90:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8003c94:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8003c98:	f7ff fd45 	bl	8003726 <WM_InvalidateWindow>
 8003c9c:	3401      	adds	r4, #1
 8003c9e:	2c02      	cmp	r4, #2
 8003ca0:	d1df      	bne.n	8003c62 <WM_Init+0x26>
 8003ca2:	481b      	ldr	r0, [pc, #108]	; (8003d10 <WM_Init+0xd4>)
 8003ca4:	f001 fbee 	bl	8005484 <WM__AddCriticalHandle>
 8003ca8:	481a      	ldr	r0, [pc, #104]	; (8003d14 <WM_Init+0xd8>)
 8003caa:	f001 fbeb 	bl	8005484 <WM__AddCriticalHandle>
 8003cae:	481a      	ldr	r0, [pc, #104]	; (8003d18 <WM_Init+0xdc>)
 8003cb0:	f001 fbe8 	bl	8005484 <WM__AddCriticalHandle>
 8003cb4:	4819      	ldr	r0, [pc, #100]	; (8003d1c <WM_Init+0xe0>)
 8003cb6:	f001 fbe5 	bl	8005484 <WM__AddCriticalHandle>
 8003cba:	4819      	ldr	r0, [pc, #100]	; (8003d20 <WM_Init+0xe4>)
 8003cbc:	f001 fbe2 	bl	8005484 <WM__AddCriticalHandle>
 8003cc0:	4818      	ldr	r0, [pc, #96]	; (8003d24 <WM_Init+0xe8>)
 8003cc2:	f001 fbdf 	bl	8005484 <WM__AddCriticalHandle>
 8003cc6:	4b10      	ldr	r3, [pc, #64]	; (8003d08 <WM_Init+0xcc>)
 8003cc8:	6818      	ldr	r0, [r3, #0]
 8003cca:	f7ff fd4d 	bl	8003768 <WM_SelectWindow>
 8003cce:	f7ff ff55 	bl	8003b7c <WM_Activate>
 8003cd2:	2301      	movs	r3, #1
 8003cd4:	702b      	strb	r3, [r5, #0]
 8003cd6:	4814      	ldr	r0, [pc, #80]	; (8003d28 <WM_Init+0xec>)
 8003cd8:	4b14      	ldr	r3, [pc, #80]	; (8003d2c <WM_Init+0xf0>)
 8003cda:	6003      	str	r3, [r0, #0]
 8003cdc:	b005      	add	sp, #20
 8003cde:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003ce2:	f7fe bd29 	b.w	8002738 <GUI__RegisterExit>
 8003ce6:	b005      	add	sp, #20
 8003ce8:	bd30      	pop	{r4, r5, pc}
 8003cea:	bf00      	nop
 8003cec:	200080f8 	.word	0x200080f8
 8003cf0:	20008240 	.word	0x20008240
 8003cf4:	200080ec 	.word	0x200080ec
 8003cf8:	2000000c 	.word	0x2000000c
 8003cfc:	2000823c 	.word	0x2000823c
 8003d00:	2000821c 	.word	0x2000821c
 8003d04:	08003bd5 	.word	0x08003bd5
 8003d08:	20008224 	.word	0x20008224
 8003d0c:	20008250 	.word	0x20008250
 8003d10:	20008294 	.word	0x20008294
 8003d14:	20008284 	.word	0x20008284
 8003d18:	20008274 	.word	0x20008274
 8003d1c:	2000829c 	.word	0x2000829c
 8003d20:	2000828c 	.word	0x2000828c
 8003d24:	2000827c 	.word	0x2000827c
 8003d28:	200080f0 	.word	0x200080f0
 8003d2c:	080030f9 	.word	0x080030f9

08003d30 <GUI_MEMDEV_GetDataPtr>:
 8003d30:	b513      	push	{r0, r1, r4, lr}
 8003d32:	b150      	cbz	r0, 8003d4a <GUI_MEMDEV_GetDataPtr+0x1a>
 8003d34:	f7fe ff50 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003d38:	4604      	mov	r4, r0
 8003d3a:	a802      	add	r0, sp, #8
 8003d3c:	f840 4d04 	str.w	r4, [r0, #-4]!
 8003d40:	f7fe ff58 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003d44:	f104 0018 	add.w	r0, r4, #24
 8003d48:	e7ff      	b.n	8003d4a <GUI_MEMDEV_GetDataPtr+0x1a>
 8003d4a:	b002      	add	sp, #8
 8003d4c:	bd10      	pop	{r4, pc}
	...

08003d50 <_GetDevData>:
 8003d50:	4802      	ldr	r0, [pc, #8]	; (8003d5c <_GetDevData+0xc>)
 8003d52:	2901      	cmp	r1, #1
 8003d54:	bf18      	it	ne
 8003d56:	2000      	movne	r0, #0
 8003d58:	4770      	bx	lr
 8003d5a:	bf00      	nop
 8003d5c:	0800682c 	.word	0x0800682c

08003d60 <_GetDevFunc>:
 8003d60:	4802      	ldr	r0, [pc, #8]	; (8003d6c <_GetDevFunc+0xc>)
 8003d62:	2916      	cmp	r1, #22
 8003d64:	bf18      	it	ne
 8003d66:	2000      	movne	r0, #0
 8003d68:	4770      	bx	lr
 8003d6a:	bf00      	nop
 8003d6c:	0800559d 	.word	0x0800559d

08003d70 <_SetOrg>:
 8003d70:	6800      	ldr	r0, [r0, #0]
 8003d72:	b508      	push	{r3, lr}
 8003d74:	b110      	cbz	r0, 8003d7c <_SetOrg+0xc>
 8003d76:	68c3      	ldr	r3, [r0, #12]
 8003d78:	6a1b      	ldr	r3, [r3, #32]
 8003d7a:	4798      	blx	r3
 8003d7c:	bd08      	pop	{r3, pc}

08003d7e <_GetDevProp>:
 8003d7e:	6800      	ldr	r0, [r0, #0]
 8003d80:	b508      	push	{r3, lr}
 8003d82:	b118      	cbz	r0, 8003d8c <_GetDevProp+0xe>
 8003d84:	68c3      	ldr	r3, [r0, #12]
 8003d86:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003d88:	4798      	blx	r3
 8003d8a:	bd08      	pop	{r3, pc}
 8003d8c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003d90:	bd08      	pop	{r3, pc}

08003d92 <_GetRect>:
 8003d92:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003d94:	6880      	ldr	r0, [r0, #8]
 8003d96:	460c      	mov	r4, r1
 8003d98:	f7fe ff1e 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003d9c:	4603      	mov	r3, r0
 8003d9e:	a802      	add	r0, sp, #8
 8003da0:	8899      	ldrh	r1, [r3, #4]
 8003da2:	88da      	ldrh	r2, [r3, #6]
 8003da4:	891d      	ldrh	r5, [r3, #8]
 8003da6:	f840 3d04 	str.w	r3, [r0, #-4]!
 8003daa:	895b      	ldrh	r3, [r3, #10]
 8003dac:	8021      	strh	r1, [r4, #0]
 8003dae:	8062      	strh	r2, [r4, #2]
 8003db0:	4429      	add	r1, r5
 8003db2:	441a      	add	r2, r3
 8003db4:	3901      	subs	r1, #1
 8003db6:	3a01      	subs	r2, #1
 8003db8:	80a1      	strh	r1, [r4, #4]
 8003dba:	80e2      	strh	r2, [r4, #6]
 8003dbc:	f7fe ff1a 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003dc0:	b003      	add	sp, #12
 8003dc2:	bd30      	pop	{r4, r5, pc}

08003dc4 <_XY2PTR>:
 8003dc4:	4b0e      	ldr	r3, [pc, #56]	; (8003e00 <_XY2PTR+0x3c>)
 8003dc6:	681b      	ldr	r3, [r3, #0]
 8003dc8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003dca:	4605      	mov	r5, r0
 8003dcc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8003dce:	460e      	mov	r6, r1
 8003dd0:	f7fe ff02 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003dd4:	4603      	mov	r3, r0
 8003dd6:	a802      	add	r0, sp, #8
 8003dd8:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8003ddc:	f840 3d04 	str.w	r3, [r0, #-4]!
 8003de0:	f103 0118 	add.w	r1, r3, #24
 8003de4:	1b36      	subs	r6, r6, r4
 8003de6:	68dc      	ldr	r4, [r3, #12]
 8003de8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003dec:	fb04 1406 	mla	r4, r4, r6, r1
 8003df0:	1aed      	subs	r5, r5, r3
 8003df2:	f7fe feff 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003df6:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8003dfa:	4620      	mov	r0, r4
 8003dfc:	b002      	add	sp, #8
 8003dfe:	bd70      	pop	{r4, r5, r6, pc}
 8003e00:	2000000c 	.word	0x2000000c

08003e04 <_GetPixelIndex>:
 8003e04:	b508      	push	{r3, lr}
 8003e06:	4608      	mov	r0, r1
 8003e08:	4611      	mov	r1, r2
 8003e0a:	f7ff ffdb 	bl	8003dc4 <_XY2PTR>
 8003e0e:	8800      	ldrh	r0, [r0, #0]
 8003e10:	bd08      	pop	{r3, pc}
	...

08003e14 <_XorPixel>:
 8003e14:	4b14      	ldr	r3, [pc, #80]	; (8003e68 <_XorPixel+0x54>)
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003e1a:	4607      	mov	r7, r0
 8003e1c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8003e1e:	4615      	mov	r5, r2
 8003e20:	460e      	mov	r6, r1
 8003e22:	f7fe fed9 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003e26:	4629      	mov	r1, r5
 8003e28:	9000      	str	r0, [sp, #0]
 8003e2a:	4630      	mov	r0, r6
 8003e2c:	f7ff ffca 	bl	8003dc4 <_XY2PTR>
 8003e30:	693b      	ldr	r3, [r7, #16]
 8003e32:	4604      	mov	r4, r0
 8003e34:	689b      	ldr	r3, [r3, #8]
 8003e36:	4798      	blx	r3
 8003e38:	8823      	ldrh	r3, [r4, #0]
 8003e3a:	4058      	eors	r0, r3
 8003e3c:	9b00      	ldr	r3, [sp, #0]
 8003e3e:	8020      	strh	r0, [r4, #0]
 8003e40:	6958      	ldr	r0, [r3, #20]
 8003e42:	b160      	cbz	r0, 8003e5e <_XorPixel+0x4a>
 8003e44:	f7fe fec8 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003e48:	ac02      	add	r4, sp, #8
 8003e4a:	6883      	ldr	r3, [r0, #8]
 8003e4c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	4631      	mov	r1, r6
 8003e54:	462a      	mov	r2, r5
 8003e56:	4798      	blx	r3
 8003e58:	4620      	mov	r0, r4
 8003e5a:	f7fe fecb 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003e5e:	4668      	mov	r0, sp
 8003e60:	f7fe fec8 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003e64:	b003      	add	sp, #12
 8003e66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003e68:	2000000c 	.word	0x2000000c

08003e6c <_SetPixelIndex>:
 8003e6c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003e6e:	461c      	mov	r4, r3
 8003e70:	4b10      	ldr	r3, [pc, #64]	; (8003eb4 <_SetPixelIndex+0x48>)
 8003e72:	681b      	ldr	r3, [r3, #0]
 8003e74:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8003e76:	460e      	mov	r6, r1
 8003e78:	4615      	mov	r5, r2
 8003e7a:	f7fe fead 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003e7e:	4629      	mov	r1, r5
 8003e80:	9000      	str	r0, [sp, #0]
 8003e82:	4630      	mov	r0, r6
 8003e84:	f7ff ff9e 	bl	8003dc4 <_XY2PTR>
 8003e88:	9b00      	ldr	r3, [sp, #0]
 8003e8a:	8004      	strh	r4, [r0, #0]
 8003e8c:	6958      	ldr	r0, [r3, #20]
 8003e8e:	b160      	cbz	r0, 8003eaa <_SetPixelIndex+0x3e>
 8003e90:	f7fe fea2 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003e94:	ac02      	add	r4, sp, #8
 8003e96:	6883      	ldr	r3, [r0, #8]
 8003e98:	f844 0d04 	str.w	r0, [r4, #-4]!
 8003e9c:	681b      	ldr	r3, [r3, #0]
 8003e9e:	4631      	mov	r1, r6
 8003ea0:	462a      	mov	r2, r5
 8003ea2:	4798      	blx	r3
 8003ea4:	4620      	mov	r0, r4
 8003ea6:	f7fe fea5 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003eaa:	4668      	mov	r0, sp
 8003eac:	f7fe fea2 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003eb0:	b002      	add	sp, #8
 8003eb2:	bd70      	pop	{r4, r5, r6, pc}
 8003eb4:	2000000c 	.word	0x2000000c

08003eb8 <_DrawVLine>:
 8003eb8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8003ebc:	4d2c      	ldr	r5, [pc, #176]	; (8003f70 <_DrawVLine+0xb8>)
 8003ebe:	461e      	mov	r6, r3
 8003ec0:	682b      	ldr	r3, [r5, #0]
 8003ec2:	4681      	mov	r9, r0
 8003ec4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8003ec6:	460f      	mov	r7, r1
 8003ec8:	4614      	mov	r4, r2
 8003eca:	f7fe fe85 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003ece:	9000      	str	r0, [sp, #0]
 8003ed0:	6940      	ldr	r0, [r0, #20]
 8003ed2:	46aa      	mov	sl, r5
 8003ed4:	b108      	cbz	r0, 8003eda <_DrawVLine+0x22>
 8003ed6:	f7fe fe7f 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003eda:	9001      	str	r0, [sp, #4]
 8003edc:	4621      	mov	r1, r4
 8003ede:	4638      	mov	r0, r7
 8003ee0:	f7ff ff70 	bl	8003dc4 <_XY2PTR>
 8003ee4:	9b00      	ldr	r3, [sp, #0]
 8003ee6:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8003eea:	f8da 3000 	ldr.w	r3, [sl]
 8003eee:	7c1a      	ldrb	r2, [r3, #16]
 8003ef0:	07d2      	lsls	r2, r2, #31
 8003ef2:	4605      	mov	r5, r0
 8003ef4:	d51f      	bpl.n	8003f36 <_DrawVLine+0x7e>
 8003ef6:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8003efa:	689b      	ldr	r3, [r3, #8]
 8003efc:	4798      	blx	r3
 8003efe:	fa1f f880 	uxth.w	r8, r0
 8003f02:	9801      	ldr	r0, [sp, #4]
 8003f04:	b120      	cbz	r0, 8003f10 <_DrawVLine+0x58>
 8003f06:	6883      	ldr	r3, [r0, #8]
 8003f08:	4639      	mov	r1, r7
 8003f0a:	681b      	ldr	r3, [r3, #0]
 8003f0c:	4622      	mov	r2, r4
 8003f0e:	4798      	blx	r3
 8003f10:	882b      	ldrh	r3, [r5, #0]
 8003f12:	ea88 0303 	eor.w	r3, r8, r3
 8003f16:	802b      	strh	r3, [r5, #0]
 8003f18:	9b00      	ldr	r3, [sp, #0]
 8003f1a:	3401      	adds	r4, #1
 8003f1c:	68db      	ldr	r3, [r3, #12]
 8003f1e:	42b4      	cmp	r4, r6
 8003f20:	441d      	add	r5, r3
 8003f22:	ddee      	ble.n	8003f02 <_DrawVLine+0x4a>
 8003f24:	4668      	mov	r0, sp
 8003f26:	f7fe fe65 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003f2a:	9b01      	ldr	r3, [sp, #4]
 8003f2c:	b1eb      	cbz	r3, 8003f6a <_DrawVLine+0xb2>
 8003f2e:	a801      	add	r0, sp, #4
 8003f30:	f7fe fe60 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003f34:	e019      	b.n	8003f6a <_DrawVLine+0xb2>
 8003f36:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003f38:	f8d3 9000 	ldr.w	r9, [r3]
 8003f3c:	9b01      	ldr	r3, [sp, #4]
 8003f3e:	b163      	cbz	r3, 8003f5a <_DrawVLine+0xa2>
 8003f40:	9801      	ldr	r0, [sp, #4]
 8003f42:	6883      	ldr	r3, [r0, #8]
 8003f44:	4622      	mov	r2, r4
 8003f46:	681b      	ldr	r3, [r3, #0]
 8003f48:	4639      	mov	r1, r7
 8003f4a:	3401      	adds	r4, #1
 8003f4c:	4798      	blx	r3
 8003f4e:	42b4      	cmp	r4, r6
 8003f50:	f8a5 9000 	strh.w	r9, [r5]
 8003f54:	4445      	add	r5, r8
 8003f56:	ddf3      	ble.n	8003f40 <_DrawVLine+0x88>
 8003f58:	e7e4      	b.n	8003f24 <_DrawVLine+0x6c>
 8003f5a:	1b34      	subs	r4, r6, r4
 8003f5c:	3401      	adds	r4, #1
 8003f5e:	3c01      	subs	r4, #1
 8003f60:	f8a5 9000 	strh.w	r9, [r5]
 8003f64:	4445      	add	r5, r8
 8003f66:	d1fa      	bne.n	8003f5e <_DrawVLine+0xa6>
 8003f68:	e7dc      	b.n	8003f24 <_DrawVLine+0x6c>
 8003f6a:	b002      	add	sp, #8
 8003f6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003f70:	2000000c 	.word	0x2000000c

08003f74 <_FillRect>:
 8003f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f78:	4f2a      	ldr	r7, [pc, #168]	; (8004024 <_FillRect+0xb0>)
 8003f7a:	4614      	mov	r4, r2
 8003f7c:	683a      	ldr	r2, [r7, #0]
 8003f7e:	4698      	mov	r8, r3
 8003f80:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8003f82:	b087      	sub	sp, #28
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	9302      	str	r3, [sp, #8]
 8003f88:	4682      	mov	sl, r0
 8003f8a:	6e10      	ldr	r0, [r2, #96]	; 0x60
 8003f8c:	460e      	mov	r6, r1
 8003f8e:	f7fe fe23 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003f92:	4621      	mov	r1, r4
 8003f94:	9004      	str	r0, [sp, #16]
 8003f96:	4630      	mov	r0, r6
 8003f98:	f7ff ff14 	bl	8003dc4 <_XY2PTR>
 8003f9c:	9a04      	ldr	r2, [sp, #16]
 8003f9e:	4605      	mov	r5, r0
 8003fa0:	6950      	ldr	r0, [r2, #20]
 8003fa2:	68d3      	ldr	r3, [r2, #12]
 8003fa4:	9303      	str	r3, [sp, #12]
 8003fa6:	ebc6 0908 	rsb	r9, r6, r8
 8003faa:	f109 0801 	add.w	r8, r9, #1
 8003fae:	46bb      	mov	fp, r7
 8003fb0:	b180      	cbz	r0, 8003fd4 <_FillRect+0x60>
 8003fb2:	f7fe fe11 	bl	8002bd8 <GUI_ALLOC_LockH>
 8003fb6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003fb8:	af06      	add	r7, sp, #24
 8003fba:	1b13      	subs	r3, r2, r4
 8003fbc:	f847 0d04 	str.w	r0, [r7, #-4]!
 8003fc0:	3301      	adds	r3, #1
 8003fc2:	9300      	str	r3, [sp, #0]
 8003fc4:	4631      	mov	r1, r6
 8003fc6:	4622      	mov	r2, r4
 8003fc8:	4643      	mov	r3, r8
 8003fca:	f001 fe8d 	bl	8005ce8 <GUI_USAGE_AddRect>
 8003fce:	4638      	mov	r0, r7
 8003fd0:	f7fe fe10 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8003fd4:	ea4f 0649 	mov.w	r6, r9, lsl #1
 8003fd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003fda:	429c      	cmp	r4, r3
 8003fdc:	dc1c      	bgt.n	8004018 <_FillRect+0xa4>
 8003fde:	f8db 3000 	ldr.w	r3, [fp]
 8003fe2:	7c1b      	ldrb	r3, [r3, #16]
 8003fe4:	07db      	lsls	r3, r3, #31
 8003fe6:	d50d      	bpl.n	8004004 <_FillRect+0x90>
 8003fe8:	f8da 3010 	ldr.w	r3, [sl, #16]
 8003fec:	689b      	ldr	r3, [r3, #8]
 8003fee:	4798      	blx	r3
 8003ff0:	19aa      	adds	r2, r5, r6
 8003ff2:	b280      	uxth	r0, r0
 8003ff4:	1eab      	subs	r3, r5, #2
 8003ff6:	8859      	ldrh	r1, [r3, #2]
 8003ff8:	4041      	eors	r1, r0
 8003ffa:	f823 1f02 	strh.w	r1, [r3, #2]!
 8003ffe:	4293      	cmp	r3, r2
 8004000:	d1f9      	bne.n	8003ff6 <_FillRect+0x82>
 8004002:	e005      	b.n	8004010 <_FillRect+0x9c>
 8004004:	9b02      	ldr	r3, [sp, #8]
 8004006:	4628      	mov	r0, r5
 8004008:	b299      	uxth	r1, r3
 800400a:	4642      	mov	r2, r8
 800400c:	f7fe fa02 	bl	8002414 <GUI__memset16>
 8004010:	9a03      	ldr	r2, [sp, #12]
 8004012:	3401      	adds	r4, #1
 8004014:	4415      	add	r5, r2
 8004016:	e7df      	b.n	8003fd8 <_FillRect+0x64>
 8004018:	a804      	add	r0, sp, #16
 800401a:	f7fe fdeb 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 800401e:	b007      	add	sp, #28
 8004020:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004024:	2000000c 	.word	0x2000000c

08004028 <_DrawHLine>:
 8004028:	b507      	push	{r0, r1, r2, lr}
 800402a:	9200      	str	r2, [sp, #0]
 800402c:	f7ff ffa2 	bl	8003f74 <_FillRect>
 8004030:	b003      	add	sp, #12
 8004032:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08004038 <_DrawBitmap>:
 8004038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800403c:	4c81      	ldr	r4, [pc, #516]	; (8004244 <_DrawBitmap+0x20c>)
 800403e:	b093      	sub	sp, #76	; 0x4c
 8004040:	469b      	mov	fp, r3
 8004042:	6823      	ldr	r3, [r4, #0]
 8004044:	900d      	str	r0, [sp, #52]	; 0x34
 8004046:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8004048:	9207      	str	r2, [sp, #28]
 800404a:	460d      	mov	r5, r1
 800404c:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 8004050:	f7fe fdc2 	bl	8002bd8 <GUI_ALLOC_LockH>
 8004054:	9010      	str	r0, [sp, #64]	; 0x40
 8004056:	6940      	ldr	r0, [r0, #20]
 8004058:	b108      	cbz	r0, 800405e <_DrawBitmap+0x26>
 800405a:	f7fe fdbd 	bl	8002bd8 <GUI_ALLOC_LockH>
 800405e:	9011      	str	r0, [sp, #68]	; 0x44
 8004060:	a812      	add	r0, sp, #72	; 0x48
 8004062:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 8004066:	68db      	ldr	r3, [r3, #12]
 8004068:	9309      	str	r3, [sp, #36]	; 0x24
 800406a:	f7fe fdc3 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 800406e:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8004070:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004072:	442e      	add	r6, r5
 8004074:	9604      	str	r6, [sp, #16]
 8004076:	b150      	cbz	r0, 800408e <_DrawBitmap+0x56>
 8004078:	6823      	ldr	r3, [r4, #0]
 800407a:	7c1b      	ldrb	r3, [r3, #16]
 800407c:	0799      	lsls	r1, r3, #30
 800407e:	d106      	bne.n	800408e <_DrawBitmap+0x56>
 8004080:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8004082:	9700      	str	r7, [sp, #0]
 8004084:	4631      	mov	r1, r6
 8004086:	9a07      	ldr	r2, [sp, #28]
 8004088:	465b      	mov	r3, fp
 800408a:	f001 fe2d 	bl	8005ce8 <GUI_USAGE_AddRect>
 800408e:	9804      	ldr	r0, [sp, #16]
 8004090:	9907      	ldr	r1, [sp, #28]
 8004092:	f7ff fe97 	bl	8003dc4 <_XY2PTR>
 8004096:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8004098:	2e10      	cmp	r6, #16
 800409a:	4604      	mov	r4, r0
 800409c:	d127      	bne.n	80040ee <_DrawBitmap+0xb6>
 800409e:	ea4f 064b 	mov.w	r6, fp, lsl #1
 80040a2:	2500      	movs	r5, #0
 80040a4:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80040a6:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 80040aa:	42bd      	cmp	r5, r7
 80040ac:	da1a      	bge.n	80040e4 <_DrawBitmap+0xac>
 80040ae:	f1ba 0f00 	cmp.w	sl, #0
 80040b2:	d011      	beq.n	80040d8 <_DrawBitmap+0xa0>
 80040b4:	b184      	cbz	r4, 80040d8 <_DrawBitmap+0xa0>
 80040b6:	4620      	mov	r0, r4
 80040b8:	4651      	mov	r1, sl
 80040ba:	4632      	mov	r2, r6
 80040bc:	f001 ff78 	bl	8005fb0 <memcpy>
 80040c0:	f1b8 0f00 	cmp.w	r8, #0
 80040c4:	d008      	beq.n	80040d8 <_DrawBitmap+0xa0>
 80040c6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80040ca:	9a07      	ldr	r2, [sp, #28]
 80040cc:	685f      	ldr	r7, [r3, #4]
 80040ce:	9904      	ldr	r1, [sp, #16]
 80040d0:	4640      	mov	r0, r8
 80040d2:	442a      	add	r2, r5
 80040d4:	465b      	mov	r3, fp
 80040d6:	47b8      	blx	r7
 80040d8:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80040da:	44ba      	add	sl, r7
 80040dc:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80040de:	3501      	adds	r5, #1
 80040e0:	443c      	add	r4, r7
 80040e2:	e7df      	b.n	80040a4 <_DrawBitmap+0x6c>
 80040e4:	f1b8 0f00 	cmp.w	r8, #0
 80040e8:	f040 831b 	bne.w	8004722 <_DrawBitmap+0x6ea>
 80040ec:	e31c      	b.n	8004728 <_DrawBitmap+0x6f0>
 80040ee:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80040f0:	2e17      	cmp	r6, #23
 80040f2:	dd38      	ble.n	8004166 <_DrawBitmap+0x12e>
 80040f4:	2600      	movs	r6, #0
 80040f6:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80040f8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80040fa:	42be      	cmp	r6, r7
 80040fc:	f280 809d 	bge.w	800423a <_DrawBitmap+0x202>
 8004100:	9f07      	ldr	r7, [sp, #28]
 8004102:	4437      	add	r7, r6
 8004104:	f1ba 0f00 	cmp.w	sl, #0
 8004108:	d027      	beq.n	800415a <_DrawBitmap+0x122>
 800410a:	b334      	cbz	r4, 800415a <_DrawBitmap+0x122>
 800410c:	b13d      	cbz	r5, 800411e <_DrawBitmap+0xe6>
 800410e:	68ab      	ldr	r3, [r5, #8]
 8004110:	9904      	ldr	r1, [sp, #16]
 8004112:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8004116:	4628      	mov	r0, r5
 8004118:	463a      	mov	r2, r7
 800411a:	465b      	mov	r3, fp
 800411c:	47e0      	blx	ip
 800411e:	1ea3      	subs	r3, r4, #2
 8004120:	f1aa 0904 	sub.w	r9, sl, #4
 8004124:	9303      	str	r3, [sp, #12]
 8004126:	46d8      	mov	r8, fp
 8004128:	9b04      	ldr	r3, [sp, #16]
 800412a:	980d      	ldr	r0, [sp, #52]	; 0x34
 800412c:	445b      	add	r3, fp
 800412e:	ebc8 0103 	rsb	r1, r8, r3
 8004132:	6903      	ldr	r3, [r0, #16]
 8004134:	f859 0f04 	ldr.w	r0, [r9, #4]!
 8004138:	681b      	ldr	r3, [r3, #0]
 800413a:	9102      	str	r1, [sp, #8]
 800413c:	4798      	blx	r3
 800413e:	9b03      	ldr	r3, [sp, #12]
 8004140:	9902      	ldr	r1, [sp, #8]
 8004142:	f823 0f02 	strh.w	r0, [r3, #2]!
 8004146:	9303      	str	r3, [sp, #12]
 8004148:	b125      	cbz	r5, 8004154 <_DrawBitmap+0x11c>
 800414a:	68ab      	ldr	r3, [r5, #8]
 800414c:	4628      	mov	r0, r5
 800414e:	681b      	ldr	r3, [r3, #0]
 8004150:	463a      	mov	r2, r7
 8004152:	4798      	blx	r3
 8004154:	f1b8 0801 	subs.w	r8, r8, #1
 8004158:	d1e6      	bne.n	8004128 <_DrawBitmap+0xf0>
 800415a:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800415c:	44ba      	add	sl, r7
 800415e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8004160:	3601      	adds	r6, #1
 8004162:	443c      	add	r4, r7
 8004164:	e7c7      	b.n	80040f6 <_DrawBitmap+0xbe>
 8004166:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8004168:	2e08      	cmp	r6, #8
 800416a:	f100 0402 	add.w	r4, r0, #2
 800416e:	d16b      	bne.n	8004248 <_DrawBitmap+0x210>
 8004170:	9e07      	ldr	r6, [sp, #28]
 8004172:	9f07      	ldr	r7, [sp, #28]
 8004174:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8004176:	1bf3      	subs	r3, r6, r7
 8004178:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800417a:	42bb      	cmp	r3, r7
 800417c:	f1a4 0002 	sub.w	r0, r4, #2
 8004180:	da5b      	bge.n	800423a <_DrawBitmap+0x202>
 8004182:	4b30      	ldr	r3, [pc, #192]	; (8004244 <_DrawBitmap+0x20c>)
 8004184:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8004186:	681b      	ldr	r3, [r3, #0]
 8004188:	7c1b      	ldrb	r3, [r3, #16]
 800418a:	b367      	cbz	r7, 80041e6 <_DrawBitmap+0x1ae>
 800418c:	f013 0303 	ands.w	r3, r3, #3
 8004190:	d004      	beq.n	800419c <_DrawBitmap+0x164>
 8004192:	2b02      	cmp	r3, #2
 8004194:	d14b      	bne.n	800422e <_DrawBitmap+0x1f6>
 8004196:	46a0      	mov	r8, r4
 8004198:	9f04      	ldr	r7, [sp, #16]
 800419a:	e01d      	b.n	80041d8 <_DrawBitmap+0x1a0>
 800419c:	f81a 2003 	ldrb.w	r2, [sl, r3]
 80041a0:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80041a2:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80041a6:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 80041aa:	3301      	adds	r3, #1
 80041ac:	455b      	cmp	r3, fp
 80041ae:	d1f5      	bne.n	800419c <_DrawBitmap+0x164>
 80041b0:	e03d      	b.n	800422e <_DrawBitmap+0x1f6>
 80041b2:	9921      	ldr	r1, [sp, #132]	; 0x84
 80041b4:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80041b8:	f828 3c02 	strh.w	r3, [r8, #-2]
 80041bc:	b12d      	cbz	r5, 80041ca <_DrawBitmap+0x192>
 80041be:	68ab      	ldr	r3, [r5, #8]
 80041c0:	4628      	mov	r0, r5
 80041c2:	681b      	ldr	r3, [r3, #0]
 80041c4:	4639      	mov	r1, r7
 80041c6:	4632      	mov	r2, r6
 80041c8:	4798      	blx	r3
 80041ca:	9b04      	ldr	r3, [sp, #16]
 80041cc:	3701      	adds	r7, #1
 80041ce:	445b      	add	r3, fp
 80041d0:	42bb      	cmp	r3, r7
 80041d2:	f108 0802 	add.w	r8, r8, #2
 80041d6:	d02a      	beq.n	800422e <_DrawBitmap+0x1f6>
 80041d8:	9804      	ldr	r0, [sp, #16]
 80041da:	ebc0 030a 	rsb	r3, r0, sl
 80041de:	5ddb      	ldrb	r3, [r3, r7]
 80041e0:	2b00      	cmp	r3, #0
 80041e2:	d0f2      	beq.n	80041ca <_DrawBitmap+0x192>
 80041e4:	e7e5      	b.n	80041b2 <_DrawBitmap+0x17a>
 80041e6:	f013 0303 	ands.w	r3, r3, #3
 80041ea:	d004      	beq.n	80041f6 <_DrawBitmap+0x1be>
 80041ec:	2b02      	cmp	r3, #2
 80041ee:	d11e      	bne.n	800422e <_DrawBitmap+0x1f6>
 80041f0:	46a0      	mov	r8, r4
 80041f2:	9f04      	ldr	r7, [sp, #16]
 80041f4:	e014      	b.n	8004220 <_DrawBitmap+0x1e8>
 80041f6:	4651      	mov	r1, sl
 80041f8:	465a      	mov	r2, fp
 80041fa:	f001 fed9 	bl	8005fb0 <memcpy>
 80041fe:	e016      	b.n	800422e <_DrawBitmap+0x1f6>
 8004200:	f828 3c02 	strh.w	r3, [r8, #-2]
 8004204:	b12d      	cbz	r5, 8004212 <_DrawBitmap+0x1da>
 8004206:	68ab      	ldr	r3, [r5, #8]
 8004208:	4628      	mov	r0, r5
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	4639      	mov	r1, r7
 800420e:	4632      	mov	r2, r6
 8004210:	4798      	blx	r3
 8004212:	9b04      	ldr	r3, [sp, #16]
 8004214:	3701      	adds	r7, #1
 8004216:	445b      	add	r3, fp
 8004218:	42bb      	cmp	r3, r7
 800421a:	f108 0802 	add.w	r8, r8, #2
 800421e:	d006      	beq.n	800422e <_DrawBitmap+0x1f6>
 8004220:	9a04      	ldr	r2, [sp, #16]
 8004222:	ebc2 030a 	rsb	r3, r2, sl
 8004226:	5ddb      	ldrb	r3, [r3, r7]
 8004228:	2b00      	cmp	r3, #0
 800422a:	d0f2      	beq.n	8004212 <_DrawBitmap+0x1da>
 800422c:	e7e8      	b.n	8004200 <_DrawBitmap+0x1c8>
 800422e:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8004230:	44ba      	add	sl, r7
 8004232:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8004234:	3601      	adds	r6, #1
 8004236:	443c      	add	r4, r7
 8004238:	e79b      	b.n	8004172 <_DrawBitmap+0x13a>
 800423a:	2d00      	cmp	r5, #0
 800423c:	f040 8271 	bne.w	8004722 <_DrawBitmap+0x6ea>
 8004240:	e272      	b.n	8004728 <_DrawBitmap+0x6f0>
 8004242:	bf00      	nop
 8004244:	2000000c 	.word	0x2000000c
 8004248:	9e21      	ldr	r6, [sp, #132]	; 0x84
 800424a:	4bab      	ldr	r3, [pc, #684]	; (80044f8 <_DrawBitmap+0x4c0>)
 800424c:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800424e:	9408      	str	r4, [sp, #32]
 8004250:	2e00      	cmp	r6, #0
 8004252:	bf08      	it	eq
 8004254:	461e      	moveq	r6, r3
 8004256:	9621      	str	r6, [sp, #132]	; 0x84
 8004258:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800425a:	0076      	lsls	r6, r6, #1
 800425c:	960e      	str	r6, [sp, #56]	; 0x38
 800425e:	00bf      	lsls	r7, r7, #2
 8004260:	9e07      	ldr	r6, [sp, #28]
 8004262:	970f      	str	r7, [sp, #60]	; 0x3c
 8004264:	9605      	str	r6, [sp, #20]
 8004266:	9b08      	ldr	r3, [sp, #32]
 8004268:	9e05      	ldr	r6, [sp, #20]
 800426a:	9f07      	ldr	r7, [sp, #28]
 800426c:	1e9c      	subs	r4, r3, #2
 800426e:	1bf3      	subs	r3, r6, r7
 8004270:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 8004272:	42b3      	cmp	r3, r6
 8004274:	f280 8253 	bge.w	800471e <_DrawBitmap+0x6e6>
 8004278:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800427a:	2f02      	cmp	r7, #2
 800427c:	f000 80d9 	beq.w	8004432 <_DrawBitmap+0x3fa>
 8004280:	2f04      	cmp	r7, #4
 8004282:	f000 8178 	beq.w	8004576 <_DrawBitmap+0x53e>
 8004286:	2f01      	cmp	r7, #1
 8004288:	f040 823f 	bne.w	800470a <_DrawBitmap+0x6d2>
 800428c:	f8df 9270 	ldr.w	r9, [pc, #624]	; 8004500 <_DrawBitmap+0x4c8>
 8004290:	f8d9 3000 	ldr.w	r3, [r9]
 8004294:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8004296:	f7fe fc9f 	bl	8002bd8 <GUI_ALLOC_LockH>
 800429a:	f89a 3000 	ldrb.w	r3, [sl]
 800429e:	4a97      	ldr	r2, [pc, #604]	; (80044fc <_DrawBitmap+0x4c4>)
 80042a0:	9010      	str	r0, [sp, #64]	; 0x40
 80042a2:	5cd5      	ldrb	r5, [r2, r3]
 80042a4:	f8d9 3000 	ldr.w	r3, [r9]
 80042a8:	9820      	ldr	r0, [sp, #128]	; 0x80
 80042aa:	7c1b      	ldrb	r3, [r3, #16]
 80042ac:	9f11      	ldr	r7, [sp, #68]	; 0x44
 80042ae:	f003 0303 	and.w	r3, r3, #3
 80042b2:	2b02      	cmp	r3, #2
 80042b4:	465e      	mov	r6, fp
 80042b6:	f1c0 0808 	rsb	r8, r0, #8
 80042ba:	fa45 f500 	asr.w	r5, r5, r0
 80042be:	d022      	beq.n	8004306 <_DrawBitmap+0x2ce>
 80042c0:	2b03      	cmp	r3, #3
 80042c2:	d062      	beq.n	800438a <_DrawBitmap+0x352>
 80042c4:	2b01      	cmp	r3, #1
 80042c6:	d060      	beq.n	800438a <_DrawBitmap+0x352>
 80042c8:	4652      	mov	r2, sl
 80042ca:	4546      	cmp	r6, r8
 80042cc:	bf38      	it	cc
 80042ce:	46b0      	movcc	r8, r6
 80042d0:	ebc8 0606 	rsb	r6, r8, r6
 80042d4:	4643      	mov	r3, r8
 80042d6:	4621      	mov	r1, r4
 80042d8:	f005 0001 	and.w	r0, r5, #1
 80042dc:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80042de:	3b01      	subs	r3, #1
 80042e0:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 80042e4:	f821 0b02 	strh.w	r0, [r1], #2
 80042e8:	ea4f 0555 	mov.w	r5, r5, lsr #1
 80042ec:	d1f4      	bne.n	80042d8 <_DrawBitmap+0x2a0>
 80042ee:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 80042f2:	2e00      	cmp	r6, #0
 80042f4:	f000 8099 	beq.w	800442a <_DrawBitmap+0x3f2>
 80042f8:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80042fc:	497f      	ldr	r1, [pc, #508]	; (80044fc <_DrawBitmap+0x4c4>)
 80042fe:	f04f 0808 	mov.w	r8, #8
 8004302:	5ccd      	ldrb	r5, [r1, r3]
 8004304:	e7e1      	b.n	80042ca <_DrawBitmap+0x292>
 8004306:	9821      	ldr	r0, [sp, #132]	; 0x84
 8004308:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800430c:	f8b0 c004 	ldrh.w	ip, [r0, #4]
 8004310:	f8cd a018 	str.w	sl, [sp, #24]
 8004314:	4546      	cmp	r6, r8
 8004316:	bf38      	it	cc
 8004318:	46b0      	movcc	r8, r6
 800431a:	ebc8 0606 	rsb	r6, r8, r6
 800431e:	b32f      	cbz	r7, 800436c <_DrawBitmap+0x334>
 8004320:	b91d      	cbnz	r5, 800432a <_DrawBitmap+0x2f2>
 8004322:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8004326:	44c1      	add	r9, r8
 8004328:	e024      	b.n	8004374 <_DrawBitmap+0x33c>
 800432a:	07ea      	lsls	r2, r5, #31
 800432c:	d50b      	bpl.n	8004346 <_DrawBitmap+0x30e>
 800432e:	68bb      	ldr	r3, [r7, #8]
 8004330:	9a05      	ldr	r2, [sp, #20]
 8004332:	681b      	ldr	r3, [r3, #0]
 8004334:	f8cd c008 	str.w	ip, [sp, #8]
 8004338:	4638      	mov	r0, r7
 800433a:	4649      	mov	r1, r9
 800433c:	4798      	blx	r3
 800433e:	f8dd c008 	ldr.w	ip, [sp, #8]
 8004342:	f8a4 c000 	strh.w	ip, [r4]
 8004346:	f1b8 0801 	subs.w	r8, r8, #1
 800434a:	f109 0901 	add.w	r9, r9, #1
 800434e:	f104 0402 	add.w	r4, r4, #2
 8004352:	d00f      	beq.n	8004374 <_DrawBitmap+0x33c>
 8004354:	086d      	lsrs	r5, r5, #1
 8004356:	e7e3      	b.n	8004320 <_DrawBitmap+0x2e8>
 8004358:	07eb      	lsls	r3, r5, #31
 800435a:	bf48      	it	mi
 800435c:	f8a4 c000 	strhmi.w	ip, [r4]
 8004360:	f1b8 0801 	subs.w	r8, r8, #1
 8004364:	f104 0402 	add.w	r4, r4, #2
 8004368:	d004      	beq.n	8004374 <_DrawBitmap+0x33c>
 800436a:	086d      	lsrs	r5, r5, #1
 800436c:	2d00      	cmp	r5, #0
 800436e:	d1f3      	bne.n	8004358 <_DrawBitmap+0x320>
 8004370:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8004374:	2e00      	cmp	r6, #0
 8004376:	d058      	beq.n	800442a <_DrawBitmap+0x3f2>
 8004378:	9906      	ldr	r1, [sp, #24]
 800437a:	4a60      	ldr	r2, [pc, #384]	; (80044fc <_DrawBitmap+0x4c4>)
 800437c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8004380:	9106      	str	r1, [sp, #24]
 8004382:	5cd5      	ldrb	r5, [r2, r3]
 8004384:	f04f 0808 	mov.w	r8, #8
 8004388:	e7c4      	b.n	8004314 <_DrawBitmap+0x2dc>
 800438a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800438c:	6913      	ldr	r3, [r2, #16]
 800438e:	689b      	ldr	r3, [r3, #8]
 8004390:	4798      	blx	r3
 8004392:	9b04      	ldr	r3, [sp, #16]
 8004394:	930b      	str	r3, [sp, #44]	; 0x2c
 8004396:	b280      	uxth	r0, r0
 8004398:	900a      	str	r0, [sp, #40]	; 0x28
 800439a:	f10a 0901 	add.w	r9, sl, #1
 800439e:	4546      	cmp	r6, r8
 80043a0:	bf38      	it	cc
 80043a2:	46b0      	movcc	r8, r6
 80043a4:	ebc8 0606 	rsb	r6, r8, r6
 80043a8:	1ca3      	adds	r3, r4, #2
 80043aa:	b31f      	cbz	r7, 80043f4 <_DrawBitmap+0x3bc>
 80043ac:	f8cd 8018 	str.w	r8, [sp, #24]
 80043b0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80043b2:	9a06      	ldr	r2, [sp, #24]
 80043b4:	4440      	add	r0, r8
 80043b6:	900c      	str	r0, [sp, #48]	; 0x30
 80043b8:	1a81      	subs	r1, r0, r2
 80043ba:	07e8      	lsls	r0, r5, #31
 80043bc:	d50d      	bpl.n	80043da <_DrawBitmap+0x3a2>
 80043be:	68ba      	ldr	r2, [r7, #8]
 80043c0:	4638      	mov	r0, r7
 80043c2:	f8d2 c000 	ldr.w	ip, [r2]
 80043c6:	9a05      	ldr	r2, [sp, #20]
 80043c8:	9302      	str	r3, [sp, #8]
 80043ca:	47e0      	blx	ip
 80043cc:	9b02      	ldr	r3, [sp, #8]
 80043ce:	980a      	ldr	r0, [sp, #40]	; 0x28
 80043d0:	f833 2c02 	ldrh.w	r2, [r3, #-2]
 80043d4:	4042      	eors	r2, r0
 80043d6:	f823 2c02 	strh.w	r2, [r3, #-2]
 80043da:	9906      	ldr	r1, [sp, #24]
 80043dc:	3901      	subs	r1, #1
 80043de:	ea4f 0555 	mov.w	r5, r5, lsr #1
 80043e2:	f103 0302 	add.w	r3, r3, #2
 80043e6:	9106      	str	r1, [sp, #24]
 80043e8:	d1e2      	bne.n	80043b0 <_DrawBitmap+0x378>
 80043ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80043ec:	930b      	str	r3, [sp, #44]	; 0x2c
 80043ee:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 80043f2:	e010      	b.n	8004416 <_DrawBitmap+0x3de>
 80043f4:	4642      	mov	r2, r8
 80043f6:	07e9      	lsls	r1, r5, #31
 80043f8:	d505      	bpl.n	8004406 <_DrawBitmap+0x3ce>
 80043fa:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 80043fe:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004400:	4041      	eors	r1, r0
 8004402:	f823 1c02 	strh.w	r1, [r3, #-2]
 8004406:	3a01      	subs	r2, #1
 8004408:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800440c:	f103 0302 	add.w	r3, r3, #2
 8004410:	d1f1      	bne.n	80043f6 <_DrawBitmap+0x3be>
 8004412:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8004416:	b146      	cbz	r6, 800442a <_DrawBitmap+0x3f2>
 8004418:	f899 3000 	ldrb.w	r3, [r9]
 800441c:	4a37      	ldr	r2, [pc, #220]	; (80044fc <_DrawBitmap+0x4c4>)
 800441e:	f109 0901 	add.w	r9, r9, #1
 8004422:	5cd5      	ldrb	r5, [r2, r3]
 8004424:	f04f 0808 	mov.w	r8, #8
 8004428:	e7b9      	b.n	800439e <_DrawBitmap+0x366>
 800442a:	a810      	add	r0, sp, #64	; 0x40
 800442c:	f7fe fbe2 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8004430:	e16b      	b.n	800470a <_DrawBitmap+0x6d2>
 8004432:	4b33      	ldr	r3, [pc, #204]	; (8004500 <_DrawBitmap+0x4c8>)
 8004434:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8004436:	681b      	ldr	r3, [r3, #0]
 8004438:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800443a:	7c1b      	ldrb	r3, [r3, #16]
 800443c:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 8004440:	f1c6 0504 	rsb	r5, r6, #4
 8004444:	f89a 6000 	ldrb.w	r6, [sl]
 8004448:	f003 0303 	and.w	r3, r3, #3
 800444c:	40be      	lsls	r6, r7
 800444e:	2b01      	cmp	r3, #1
 8004450:	b2ed      	uxtb	r5, r5
 8004452:	b2f6      	uxtb	r6, r6
 8004454:	d06a      	beq.n	800452c <_DrawBitmap+0x4f4>
 8004456:	d308      	bcc.n	800446a <_DrawBitmap+0x432>
 8004458:	2b02      	cmp	r3, #2
 800445a:	f040 8156 	bne.w	800470a <_DrawBitmap+0x6d2>
 800445e:	f8cd a018 	str.w	sl, [sp, #24]
 8004462:	465f      	mov	r7, fp
 8004464:	f8dd c010 	ldr.w	ip, [sp, #16]
 8004468:	e03e      	b.n	80044e8 <_DrawBitmap+0x4b0>
 800446a:	4652      	mov	r2, sl
 800446c:	465b      	mov	r3, fp
 800446e:	429d      	cmp	r5, r3
 8004470:	bfc8      	it	gt
 8004472:	b2dd      	uxtbgt	r5, r3
 8004474:	1b5b      	subs	r3, r3, r5
 8004476:	4629      	mov	r1, r5
 8004478:	4620      	mov	r0, r4
 800447a:	ea4f 1c96 	mov.w	ip, r6, lsr #6
 800447e:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8004480:	3901      	subs	r1, #1
 8004482:	f857 c02c 	ldr.w	ip, [r7, ip, lsl #2]
 8004486:	f820 cb02 	strh.w	ip, [r0], #2
 800448a:	00b6      	lsls	r6, r6, #2
 800448c:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8004490:	b2f6      	uxtb	r6, r6
 8004492:	d1f2      	bne.n	800447a <_DrawBitmap+0x442>
 8004494:	3d01      	subs	r5, #1
 8004496:	b2ed      	uxtb	r5, r5
 8004498:	3501      	adds	r5, #1
 800449a:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800449e:	2b00      	cmp	r3, #0
 80044a0:	f000 8133 	beq.w	800470a <_DrawBitmap+0x6d2>
 80044a4:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 80044a8:	2504      	movs	r5, #4
 80044aa:	e7e0      	b.n	800446e <_DrawBitmap+0x436>
 80044ac:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 80044b0:	eb08 010c 	add.w	r1, r8, ip
 80044b4:	d126      	bne.n	8004504 <_DrawBitmap+0x4cc>
 80044b6:	f108 0801 	add.w	r8, r8, #1
 80044ba:	fa5f f388 	uxtb.w	r3, r8
 80044be:	00b6      	lsls	r6, r6, #2
 80044c0:	429d      	cmp	r5, r3
 80044c2:	b2f6      	uxtb	r6, r6
 80044c4:	d1f2      	bne.n	80044ac <_DrawBitmap+0x474>
 80044c6:	3d01      	subs	r5, #1
 80044c8:	b2ed      	uxtb	r5, r5
 80044ca:	1c6b      	adds	r3, r5, #1
 80044cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80044d0:	f10c 0301 	add.w	r3, ip, #1
 80044d4:	eb03 0c05 	add.w	ip, r3, r5
 80044d8:	2f00      	cmp	r7, #0
 80044da:	f000 8116 	beq.w	800470a <_DrawBitmap+0x6d2>
 80044de:	9b06      	ldr	r3, [sp, #24]
 80044e0:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 80044e4:	9306      	str	r3, [sp, #24]
 80044e6:	2504      	movs	r5, #4
 80044e8:	42bd      	cmp	r5, r7
 80044ea:	bfc8      	it	gt
 80044ec:	b2fd      	uxtbgt	r5, r7
 80044ee:	1b7f      	subs	r7, r7, r5
 80044f0:	f04f 0800 	mov.w	r8, #0
 80044f4:	e7da      	b.n	80044ac <_DrawBitmap+0x474>
 80044f6:	bf00      	nop
 80044f8:	080067ec 	.word	0x080067ec
 80044fc:	08006860 	.word	0x08006860
 8004500:	2000000c 	.word	0x2000000c
 8004504:	09b3      	lsrs	r3, r6, #6
 8004506:	9821      	ldr	r0, [sp, #132]	; 0x84
 8004508:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800450c:	f824 3018 	strh.w	r3, [r4, r8, lsl #1]
 8004510:	f1b9 0f00 	cmp.w	r9, #0
 8004514:	d0cf      	beq.n	80044b6 <_DrawBitmap+0x47e>
 8004516:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800451a:	9a05      	ldr	r2, [sp, #20]
 800451c:	681b      	ldr	r3, [r3, #0]
 800451e:	f8cd c008 	str.w	ip, [sp, #8]
 8004522:	4648      	mov	r0, r9
 8004524:	4798      	blx	r3
 8004526:	f8dd c008 	ldr.w	ip, [sp, #8]
 800452a:	e7c4      	b.n	80044b6 <_DrawBitmap+0x47e>
 800452c:	4651      	mov	r1, sl
 800452e:	465b      	mov	r3, fp
 8004530:	429d      	cmp	r5, r3
 8004532:	bfc8      	it	gt
 8004534:	b2dd      	uxtbgt	r5, r3
 8004536:	1b5b      	subs	r3, r3, r5
 8004538:	1ca2      	adds	r2, r4, #2
 800453a:	4628      	mov	r0, r5
 800453c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8004540:	d005      	beq.n	800454e <_DrawBitmap+0x516>
 8004542:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 8004546:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 800454a:	f822 7c02 	strh.w	r7, [r2, #-2]
 800454e:	3801      	subs	r0, #1
 8004550:	00b6      	lsls	r6, r6, #2
 8004552:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 8004556:	b2f6      	uxtb	r6, r6
 8004558:	f102 0202 	add.w	r2, r2, #2
 800455c:	d1ee      	bne.n	800453c <_DrawBitmap+0x504>
 800455e:	3d01      	subs	r5, #1
 8004560:	b2ed      	uxtb	r5, r5
 8004562:	3501      	adds	r5, #1
 8004564:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8004568:	2b00      	cmp	r3, #0
 800456a:	f000 80ce 	beq.w	800470a <_DrawBitmap+0x6d2>
 800456e:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 8004572:	2504      	movs	r5, #4
 8004574:	e7dc      	b.n	8004530 <_DrawBitmap+0x4f8>
 8004576:	4a6e      	ldr	r2, [pc, #440]	; (8004730 <_DrawBitmap+0x6f8>)
 8004578:	f89a 3000 	ldrb.w	r3, [sl]
 800457c:	6812      	ldr	r2, [r2, #0]
 800457e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8004580:	7c12      	ldrb	r2, [r2, #16]
 8004582:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8004584:	f002 0203 	and.w	r2, r2, #3
 8004588:	40bb      	lsls	r3, r7
 800458a:	2a01      	cmp	r2, #1
 800458c:	b2dd      	uxtb	r5, r3
 800458e:	f000 8095 	beq.w	80046bc <_DrawBitmap+0x684>
 8004592:	d302      	bcc.n	800459a <_DrawBitmap+0x562>
 8004594:	2a02      	cmp	r2, #2
 8004596:	d036      	beq.n	8004606 <_DrawBitmap+0x5ce>
 8004598:	e0b7      	b.n	800470a <_DrawBitmap+0x6d2>
 800459a:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800459c:	b166      	cbz	r6, 80045b8 <_DrawBitmap+0x580>
 800459e:	092d      	lsrs	r5, r5, #4
 80045a0:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80045a2:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 80045a6:	8023      	strh	r3, [r4, #0]
 80045a8:	f10a 0201 	add.w	r2, sl, #1
 80045ac:	9c08      	ldr	r4, [sp, #32]
 80045ae:	f89a 5001 	ldrb.w	r5, [sl, #1]
 80045b2:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
 80045b6:	e001      	b.n	80045bc <_DrawBitmap+0x584>
 80045b8:	465b      	mov	r3, fp
 80045ba:	4652      	mov	r2, sl
 80045bc:	2b01      	cmp	r3, #1
 80045be:	dd19      	ble.n	80045f4 <_DrawBitmap+0x5bc>
 80045c0:	1058      	asrs	r0, r3, #1
 80045c2:	1d21      	adds	r1, r4, #4
 80045c4:	f003 0301 	and.w	r3, r3, #1
 80045c8:	eb02 0c00 	add.w	ip, r2, r0
 80045cc:	092f      	lsrs	r7, r5, #4
 80045ce:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80045d0:	f005 050f 	and.w	r5, r5, #15
 80045d4:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 80045d8:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 80045dc:	f821 7c04 	strh.w	r7, [r1, #-4]
 80045e0:	f821 5c02 	strh.w	r5, [r1, #-2]
 80045e4:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 80045e8:	4562      	cmp	r2, ip
 80045ea:	f101 0104 	add.w	r1, r1, #4
 80045ee:	d1ed      	bne.n	80045cc <_DrawBitmap+0x594>
 80045f0:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 80045f4:	2b00      	cmp	r3, #0
 80045f6:	f000 8088 	beq.w	800470a <_DrawBitmap+0x6d2>
 80045fa:	092d      	lsrs	r5, r5, #4
 80045fc:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80045fe:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 8004602:	8023      	strh	r3, [r4, #0]
 8004604:	e081      	b.n	800470a <_DrawBitmap+0x6d2>
 8004606:	9f20      	ldr	r7, [sp, #128]	; 0x80
 8004608:	b1c7      	cbz	r7, 800463c <_DrawBitmap+0x604>
 800460a:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800460e:	d00b      	beq.n	8004628 <_DrawBitmap+0x5f0>
 8004610:	092d      	lsrs	r5, r5, #4
 8004612:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8004614:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 8004618:	8023      	strh	r3, [r4, #0]
 800461a:	b12e      	cbz	r6, 8004628 <_DrawBitmap+0x5f0>
 800461c:	68b3      	ldr	r3, [r6, #8]
 800461e:	9904      	ldr	r1, [sp, #16]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	9a05      	ldr	r2, [sp, #20]
 8004624:	4630      	mov	r0, r6
 8004626:	4798      	blx	r3
 8004628:	9804      	ldr	r0, [sp, #16]
 800462a:	9c08      	ldr	r4, [sp, #32]
 800462c:	f89a 5001 	ldrb.w	r5, [sl, #1]
 8004630:	1c47      	adds	r7, r0, #1
 8004632:	f10b 39ff 	add.w	r9, fp, #4294967295	; 0xffffffff
 8004636:	f10a 0801 	add.w	r8, sl, #1
 800463a:	e00f      	b.n	800465c <_DrawBitmap+0x624>
 800463c:	46d9      	mov	r9, fp
 800463e:	46d0      	mov	r8, sl
 8004640:	9f04      	ldr	r7, [sp, #16]
 8004642:	e00b      	b.n	800465c <_DrawBitmap+0x624>
 8004644:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 8004648:	d10c      	bne.n	8004664 <_DrawBitmap+0x62c>
 800464a:	f015 050f 	ands.w	r5, r5, #15
 800464e:	d117      	bne.n	8004680 <_DrawBitmap+0x648>
 8004650:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 8004654:	3404      	adds	r4, #4
 8004656:	3702      	adds	r7, #2
 8004658:	f1a9 0902 	sub.w	r9, r9, #2
 800465c:	f1b9 0f01 	cmp.w	r9, #1
 8004660:	dcf0      	bgt.n	8004644 <_DrawBitmap+0x60c>
 8004662:	e01a      	b.n	800469a <_DrawBitmap+0x662>
 8004664:	092b      	lsrs	r3, r5, #4
 8004666:	9921      	ldr	r1, [sp, #132]	; 0x84
 8004668:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800466c:	8023      	strh	r3, [r4, #0]
 800466e:	2e00      	cmp	r6, #0
 8004670:	d0eb      	beq.n	800464a <_DrawBitmap+0x612>
 8004672:	68b3      	ldr	r3, [r6, #8]
 8004674:	9a05      	ldr	r2, [sp, #20]
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	4630      	mov	r0, r6
 800467a:	4639      	mov	r1, r7
 800467c:	4798      	blx	r3
 800467e:	e7e4      	b.n	800464a <_DrawBitmap+0x612>
 8004680:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8004682:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 8004686:	8063      	strh	r3, [r4, #2]
 8004688:	2e00      	cmp	r6, #0
 800468a:	d0e1      	beq.n	8004650 <_DrawBitmap+0x618>
 800468c:	68b3      	ldr	r3, [r6, #8]
 800468e:	9a05      	ldr	r2, [sp, #20]
 8004690:	681b      	ldr	r3, [r3, #0]
 8004692:	4630      	mov	r0, r6
 8004694:	1c79      	adds	r1, r7, #1
 8004696:	4798      	blx	r3
 8004698:	e7da      	b.n	8004650 <_DrawBitmap+0x618>
 800469a:	f1b9 0f00 	cmp.w	r9, #0
 800469e:	d034      	beq.n	800470a <_DrawBitmap+0x6d2>
 80046a0:	092d      	lsrs	r5, r5, #4
 80046a2:	d032      	beq.n	800470a <_DrawBitmap+0x6d2>
 80046a4:	9821      	ldr	r0, [sp, #132]	; 0x84
 80046a6:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 80046aa:	8023      	strh	r3, [r4, #0]
 80046ac:	b36e      	cbz	r6, 800470a <_DrawBitmap+0x6d2>
 80046ae:	68b3      	ldr	r3, [r6, #8]
 80046b0:	9a05      	ldr	r2, [sp, #20]
 80046b2:	681b      	ldr	r3, [r3, #0]
 80046b4:	4630      	mov	r0, r6
 80046b6:	4639      	mov	r1, r7
 80046b8:	4798      	blx	r3
 80046ba:	e026      	b.n	800470a <_DrawBitmap+0x6d2>
 80046bc:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80046be:	f1c6 0302 	rsb	r3, r6, #2
 80046c2:	b2db      	uxtb	r3, r3
 80046c4:	4650      	mov	r0, sl
 80046c6:	465a      	mov	r2, fp
 80046c8:	4293      	cmp	r3, r2
 80046ca:	bfc8      	it	gt
 80046cc:	b2d3      	uxtbgt	r3, r2
 80046ce:	1ad2      	subs	r2, r2, r3
 80046d0:	1ca1      	adds	r1, r4, #2
 80046d2:	461e      	mov	r6, r3
 80046d4:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 80046d8:	d005      	beq.n	80046e6 <_DrawBitmap+0x6ae>
 80046da:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 80046de:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 80046e2:	f821 7c02 	strh.w	r7, [r1, #-2]
 80046e6:	3e01      	subs	r6, #1
 80046e8:	012d      	lsls	r5, r5, #4
 80046ea:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 80046ee:	b2ed      	uxtb	r5, r5
 80046f0:	f101 0102 	add.w	r1, r1, #2
 80046f4:	d1ee      	bne.n	80046d4 <_DrawBitmap+0x69c>
 80046f6:	3b01      	subs	r3, #1
 80046f8:	b2db      	uxtb	r3, r3
 80046fa:	3301      	adds	r3, #1
 80046fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8004700:	b11a      	cbz	r2, 800470a <_DrawBitmap+0x6d2>
 8004702:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8004706:	2302      	movs	r3, #2
 8004708:	e7de      	b.n	80046c8 <_DrawBitmap+0x690>
 800470a:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800470c:	9b05      	ldr	r3, [sp, #20]
 800470e:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004710:	44ba      	add	sl, r7
 8004712:	9f08      	ldr	r7, [sp, #32]
 8004714:	3301      	adds	r3, #1
 8004716:	4437      	add	r7, r6
 8004718:	9305      	str	r3, [sp, #20]
 800471a:	9708      	str	r7, [sp, #32]
 800471c:	e5a3      	b.n	8004266 <_DrawBitmap+0x22e>
 800471e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004720:	b113      	cbz	r3, 8004728 <_DrawBitmap+0x6f0>
 8004722:	a811      	add	r0, sp, #68	; 0x44
 8004724:	f7fe fa66 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8004728:	b013      	add	sp, #76	; 0x4c
 800472a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800472e:	bf00      	nop
 8004730:	2000000c 	.word	0x2000000c

08004734 <GUI_MEMDEV_GetBitsPerPixel>:
 8004734:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004736:	4605      	mov	r5, r0
 8004738:	b170      	cbz	r0, 8004758 <GUI_MEMDEV_GetBitsPerPixel+0x24>
 800473a:	f7fe fa4d 	bl	8002bd8 <GUI_ALLOC_LockH>
 800473e:	6803      	ldr	r3, [r0, #0]
 8004740:	ac02      	add	r4, sp, #8
 8004742:	691b      	ldr	r3, [r3, #16]
 8004744:	f844 0d04 	str.w	r0, [r4, #-4]!
 8004748:	689b      	ldr	r3, [r3, #8]
 800474a:	4798      	blx	r3
 800474c:	f000 f90b 	bl	8004966 <LCD__GetBPPDevice>
 8004750:	4605      	mov	r5, r0
 8004752:	4620      	mov	r0, r4
 8004754:	f7fe fa4e 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8004758:	4628      	mov	r0, r5
 800475a:	b003      	add	sp, #12
 800475c:	bd30      	pop	{r4, r5, pc}
	...

08004760 <GUI_MEMDEV_Delete>:
 8004760:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004762:	4604      	mov	r4, r0
 8004764:	b1d0      	cbz	r0, 800479c <GUI_MEMDEV_Delete+0x3c>
 8004766:	4b0e      	ldr	r3, [pc, #56]	; (80047a0 <GUI_MEMDEV_Delete+0x40>)
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800476c:	4283      	cmp	r3, r0
 800476e:	d101      	bne.n	8004774 <GUI_MEMDEV_Delete+0x14>
 8004770:	f000 fd4e 	bl	8005210 <GUI_SelectLCD>
 8004774:	4620      	mov	r0, r4
 8004776:	f7fe fa2f 	bl	8002bd8 <GUI_ALLOC_LockH>
 800477a:	9001      	str	r0, [sp, #4]
 800477c:	6940      	ldr	r0, [r0, #20]
 800477e:	b108      	cbz	r0, 8004784 <GUI_MEMDEV_Delete+0x24>
 8004780:	f001 fa9e 	bl	8005cc0 <GUI_USAGE_DecUseCnt>
 8004784:	ad02      	add	r5, sp, #8
 8004786:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 800478a:	6818      	ldr	r0, [r3, #0]
 800478c:	f7fd feaa 	bl	80024e4 <GUI_DEVICE_Delete>
 8004790:	4628      	mov	r0, r5
 8004792:	f7fe fa2f 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8004796:	4620      	mov	r0, r4
 8004798:	f7fe fa4c 	bl	8002c34 <GUI_ALLOC_Free>
 800479c:	b003      	add	sp, #12
 800479e:	bd30      	pop	{r4, r5, pc}
 80047a0:	2000000c 	.word	0x2000000c

080047a4 <LCD_UpdateColorIndices>:
 80047a4:	b510      	push	{r4, lr}
 80047a6:	4c07      	ldr	r4, [pc, #28]	; (80047c4 <LCD_UpdateColorIndices+0x20>)
 80047a8:	6823      	ldr	r3, [r4, #0]
 80047aa:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80047ac:	f000 fc34 	bl	8005018 <LCD_Color2Index>
 80047b0:	f000 fc52 	bl	8005058 <LCD_SetColorIndex>
 80047b4:	6823      	ldr	r3, [r4, #0]
 80047b6:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80047b8:	f000 fc2e 	bl	8005018 <LCD_Color2Index>
 80047bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80047c0:	f000 bc66 	b.w	8005090 <LCD_SetBkColorIndex>
 80047c4:	2000000c 	.word	0x2000000c

080047c8 <LCD_SetClipRectEx>:
 80047c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80047ca:	4c09      	ldr	r4, [pc, #36]	; (80047f0 <LCD_SetClipRectEx+0x28>)
 80047cc:	6823      	ldr	r3, [r4, #0]
 80047ce:	7c5a      	ldrb	r2, [r3, #17]
 80047d0:	4b08      	ldr	r3, [pc, #32]	; (80047f4 <LCD_SetClipRectEx+0x2c>)
 80047d2:	4605      	mov	r5, r0
 80047d4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80047d8:	68c2      	ldr	r2, [r0, #12]
 80047da:	4669      	mov	r1, sp
 80047dc:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80047de:	4790      	blx	r2
 80047e0:	6820      	ldr	r0, [r4, #0]
 80047e2:	4629      	mov	r1, r5
 80047e4:	466a      	mov	r2, sp
 80047e6:	3008      	adds	r0, #8
 80047e8:	f000 fc7e 	bl	80050e8 <GUI__IntersectRects>
 80047ec:	b003      	add	sp, #12
 80047ee:	bd30      	pop	{r4, r5, pc}
 80047f0:	2000000c 	.word	0x2000000c
 80047f4:	2000814c 	.word	0x2000814c

080047f8 <_GetDevProp>:
 80047f8:	2801      	cmp	r0, #1
 80047fa:	b510      	push	{r4, lr}
 80047fc:	460c      	mov	r4, r1
 80047fe:	dc08      	bgt.n	8004812 <_GetDevProp+0x1a>
 8004800:	f7fd fe60 	bl	80024c4 <GUI_DEVICE__GetpDriver>
 8004804:	b120      	cbz	r0, 8004810 <_GetDevProp+0x18>
 8004806:	68c3      	ldr	r3, [r0, #12]
 8004808:	4621      	mov	r1, r4
 800480a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800480c:	4798      	blx	r3
 800480e:	bd10      	pop	{r4, pc}
 8004810:	bd10      	pop	{r4, pc}
 8004812:	2000      	movs	r0, #0
 8004814:	bd10      	pop	{r4, pc}

08004816 <_GetMaxValue>:
 8004816:	b538      	push	{r3, r4, r5, lr}
 8004818:	4604      	mov	r4, r0
 800481a:	4621      	mov	r1, r4
 800481c:	2001      	movs	r0, #1
 800481e:	f7ff ffeb 	bl	80047f8 <_GetDevProp>
 8004822:	4621      	mov	r1, r4
 8004824:	4605      	mov	r5, r0
 8004826:	2000      	movs	r0, #0
 8004828:	f7ff ffe6 	bl	80047f8 <_GetDevProp>
 800482c:	42a8      	cmp	r0, r5
 800482e:	bfb8      	it	lt
 8004830:	4628      	movlt	r0, r5
 8004832:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8004836:	bd38      	pop	{r3, r4, r5, pc}

08004838 <LCD_GetBitsPerPixelEx>:
 8004838:	2108      	movs	r1, #8
 800483a:	f7ff bfdd 	b.w	80047f8 <_GetDevProp>

0800483e <LCD_GetNumColorsEx>:
 800483e:	2109      	movs	r1, #9
 8004840:	f7ff bfda 	b.w	80047f8 <_GetDevProp>

08004844 <LCD_GetNumColors>:
 8004844:	4b02      	ldr	r3, [pc, #8]	; (8004850 <LCD_GetNumColors+0xc>)
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	7c58      	ldrb	r0, [r3, #17]
 800484a:	f7ff bff8 	b.w	800483e <LCD_GetNumColorsEx>
 800484e:	bf00      	nop
 8004850:	2000000c 	.word	0x2000000c

08004854 <GUI_GetBitsPerPixelEx>:
 8004854:	b508      	push	{r3, lr}
 8004856:	4b04      	ldr	r3, [pc, #16]	; (8004868 <GUI_GetBitsPerPixelEx+0x14>)
 8004858:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800485c:	68c3      	ldr	r3, [r0, #12]
 800485e:	2108      	movs	r1, #8
 8004860:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004862:	4798      	blx	r3
 8004864:	bd08      	pop	{r3, pc}
 8004866:	bf00      	nop
 8004868:	2000814c 	.word	0x2000814c

0800486c <LCD_GetPaletteEx>:
 800486c:	b508      	push	{r3, lr}
 800486e:	f7fd fe29 	bl	80024c4 <GUI_DEVICE__GetpDriver>
 8004872:	b120      	cbz	r0, 800487e <LCD_GetPaletteEx+0x12>
 8004874:	68c3      	ldr	r3, [r0, #12]
 8004876:	2102      	movs	r1, #2
 8004878:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800487a:	4798      	blx	r3
 800487c:	bd08      	pop	{r3, pc}
 800487e:	bd08      	pop	{r3, pc}

08004880 <LCD_GetPalette>:
 8004880:	4b02      	ldr	r3, [pc, #8]	; (800488c <LCD_GetPalette+0xc>)
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	7c58      	ldrb	r0, [r3, #17]
 8004886:	f7ff bff1 	b.w	800486c <LCD_GetPaletteEx>
 800488a:	bf00      	nop
 800488c:	2000000c 	.word	0x2000000c

08004890 <GUI_GetpfIndex2ColorEx>:
 8004890:	4b02      	ldr	r3, [pc, #8]	; (800489c <GUI_GetpfIndex2ColorEx+0xc>)
 8004892:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8004896:	691b      	ldr	r3, [r3, #16]
 8004898:	6858      	ldr	r0, [r3, #4]
 800489a:	4770      	bx	lr
 800489c:	2000814c 	.word	0x2000814c

080048a0 <GUI_GetpfColor2IndexEx>:
 80048a0:	4b02      	ldr	r3, [pc, #8]	; (80048ac <GUI_GetpfColor2IndexEx+0xc>)
 80048a2:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80048a6:	691b      	ldr	r3, [r3, #16]
 80048a8:	6818      	ldr	r0, [r3, #0]
 80048aa:	4770      	bx	lr
 80048ac:	2000814c 	.word	0x2000814c

080048b0 <LCD_GetXSizeMax>:
 80048b0:	2001      	movs	r0, #1
 80048b2:	f7ff bfb0 	b.w	8004816 <_GetMaxValue>

080048b6 <LCD_GetYSizeMax>:
 80048b6:	2002      	movs	r0, #2
 80048b8:	f7ff bfad 	b.w	8004816 <_GetMaxValue>

080048bc <LCD_SetDisplaySize>:
 80048bc:	4b02      	ldr	r3, [pc, #8]	; (80048c8 <LCD_SetDisplaySize+0xc>)
 80048be:	6018      	str	r0, [r3, #0]
 80048c0:	4b02      	ldr	r3, [pc, #8]	; (80048cc <LCD_SetDisplaySize+0x10>)
 80048c2:	6019      	str	r1, [r3, #0]
 80048c4:	4770      	bx	lr
 80048c6:	bf00      	nop
 80048c8:	20008100 	.word	0x20008100
 80048cc:	200080fc 	.word	0x200080fc

080048d0 <LCD_GetXSizeDisplay>:
 80048d0:	4b01      	ldr	r3, [pc, #4]	; (80048d8 <LCD_GetXSizeDisplay+0x8>)
 80048d2:	6818      	ldr	r0, [r3, #0]
 80048d4:	4770      	bx	lr
 80048d6:	bf00      	nop
 80048d8:	20008100 	.word	0x20008100

080048dc <LCD_GetYSizeDisplay>:
 80048dc:	4b01      	ldr	r3, [pc, #4]	; (80048e4 <LCD_GetYSizeDisplay+0x8>)
 80048de:	6818      	ldr	r0, [r3, #0]
 80048e0:	4770      	bx	lr
 80048e2:	bf00      	nop
 80048e4:	200080fc 	.word	0x200080fc

080048e8 <LCD__GetBPP>:
 80048e8:	2800      	cmp	r0, #0
 80048ea:	d03b      	beq.n	8004964 <LCD__GetBPP+0x7c>
 80048ec:	f030 0301 	bics.w	r3, r0, #1
 80048f0:	d029      	beq.n	8004946 <LCD__GetBPP+0x5e>
 80048f2:	f030 0303 	bics.w	r3, r0, #3
 80048f6:	d028      	beq.n	800494a <LCD__GetBPP+0x62>
 80048f8:	f030 0307 	bics.w	r3, r0, #7
 80048fc:	d027      	beq.n	800494e <LCD__GetBPP+0x66>
 80048fe:	f030 030f 	bics.w	r3, r0, #15
 8004902:	d026      	beq.n	8004952 <LCD__GetBPP+0x6a>
 8004904:	f030 031f 	bics.w	r3, r0, #31
 8004908:	d025      	beq.n	8004956 <LCD__GetBPP+0x6e>
 800490a:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 800490e:	d024      	beq.n	800495a <LCD__GetBPP+0x72>
 8004910:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 8004914:	f023 0301 	bic.w	r3, r3, #1
 8004918:	b30b      	cbz	r3, 800495e <LCD__GetBPP+0x76>
 800491a:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 800491e:	f023 030f 	bic.w	r3, r3, #15
 8004922:	b1e3      	cbz	r3, 800495e <LCD__GetBPP+0x76>
 8004924:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 8004928:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800492c:	b1bb      	cbz	r3, 800495e <LCD__GetBPP+0x76>
 800492e:	0c03      	lsrs	r3, r0, #16
 8004930:	041b      	lsls	r3, r3, #16
 8004932:	b1a3      	cbz	r3, 800495e <LCD__GetBPP+0x76>
 8004934:	0c83      	lsrs	r3, r0, #18
 8004936:	049b      	lsls	r3, r3, #18
 8004938:	b19b      	cbz	r3, 8004962 <LCD__GetBPP+0x7a>
 800493a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800493e:	bf0c      	ite	eq
 8004940:	2018      	moveq	r0, #24
 8004942:	2020      	movne	r0, #32
 8004944:	4770      	bx	lr
 8004946:	2001      	movs	r0, #1
 8004948:	4770      	bx	lr
 800494a:	2002      	movs	r0, #2
 800494c:	4770      	bx	lr
 800494e:	2003      	movs	r0, #3
 8004950:	4770      	bx	lr
 8004952:	2004      	movs	r0, #4
 8004954:	4770      	bx	lr
 8004956:	2005      	movs	r0, #5
 8004958:	4770      	bx	lr
 800495a:	2008      	movs	r0, #8
 800495c:	4770      	bx	lr
 800495e:	2010      	movs	r0, #16
 8004960:	4770      	bx	lr
 8004962:	2012      	movs	r0, #18
 8004964:	4770      	bx	lr

08004966 <LCD__GetBPPDevice>:
 8004966:	b508      	push	{r3, lr}
 8004968:	f7ff ffbe 	bl	80048e8 <LCD__GetBPP>
 800496c:	2801      	cmp	r0, #1
 800496e:	d00f      	beq.n	8004990 <LCD__GetBPPDevice+0x2a>
 8004970:	1e83      	subs	r3, r0, #2
 8004972:	2b06      	cmp	r3, #6
 8004974:	d909      	bls.n	800498a <LCD__GetBPPDevice+0x24>
 8004976:	f1a0 0309 	sub.w	r3, r0, #9
 800497a:	2b07      	cmp	r3, #7
 800497c:	d907      	bls.n	800498e <LCD__GetBPPDevice+0x28>
 800497e:	3811      	subs	r0, #17
 8004980:	2810      	cmp	r0, #16
 8004982:	bf34      	ite	cc
 8004984:	2020      	movcc	r0, #32
 8004986:	2000      	movcs	r0, #0
 8004988:	bd08      	pop	{r3, pc}
 800498a:	2008      	movs	r0, #8
 800498c:	bd08      	pop	{r3, pc}
 800498e:	2010      	movs	r0, #16
 8004990:	bd08      	pop	{r3, pc}
	...

08004994 <_OnExit>:
 8004994:	b510      	push	{r4, lr}
 8004996:	4c03      	ldr	r4, [pc, #12]	; (80049a4 <_OnExit+0x10>)
 8004998:	6820      	ldr	r0, [r4, #0]
 800499a:	f7fe f909 	bl	8002bb0 <GUI_ALLOC_FreeFixedBlock>
 800499e:	2300      	movs	r3, #0
 80049a0:	6023      	str	r3, [r4, #0]
 80049a2:	bd10      	pop	{r4, pc}
 80049a4:	20008270 	.word	0x20008270

080049a8 <LCD_InitColors>:
 80049a8:	b538      	push	{r3, r4, r5, lr}
 80049aa:	4d09      	ldr	r5, [pc, #36]	; (80049d0 <LCD_InitColors+0x28>)
 80049ac:	682c      	ldr	r4, [r5, #0]
 80049ae:	b95c      	cbnz	r4, 80049c8 <LCD_InitColors+0x20>
 80049b0:	4b08      	ldr	r3, [pc, #32]	; (80049d4 <LCD_InitColors+0x2c>)
 80049b2:	6818      	ldr	r0, [r3, #0]
 80049b4:	0080      	lsls	r0, r0, #2
 80049b6:	f7fe fa5b 	bl	8002e70 <GUI_ALLOC_GetFixedBlock>
 80049ba:	6028      	str	r0, [r5, #0]
 80049bc:	b130      	cbz	r0, 80049cc <LCD_InitColors+0x24>
 80049be:	4806      	ldr	r0, [pc, #24]	; (80049d8 <LCD_InitColors+0x30>)
 80049c0:	4b06      	ldr	r3, [pc, #24]	; (80049dc <LCD_InitColors+0x34>)
 80049c2:	6003      	str	r3, [r0, #0]
 80049c4:	f7fd feb8 	bl	8002738 <GUI__RegisterExit>
 80049c8:	2000      	movs	r0, #0
 80049ca:	bd38      	pop	{r3, r4, r5, pc}
 80049cc:	2001      	movs	r0, #1
 80049ce:	bd38      	pop	{r3, r4, r5, pc}
 80049d0:	20008270 	.word	0x20008270
 80049d4:	20000014 	.word	0x20000014
 80049d8:	20008104 	.word	0x20008104
 80049dc:	08004995 	.word	0x08004995

080049e0 <LCD_InitLUT>:
 80049e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80049e4:	f001 f9b6 	bl	8005d54 <LCD_GetNumLayers>
 80049e8:	2400      	movs	r4, #0
 80049ea:	4680      	mov	r8, r0
 80049ec:	4544      	cmp	r4, r8
 80049ee:	da2c      	bge.n	8004a4a <LCD_InitLUT+0x6a>
 80049f0:	4620      	mov	r0, r4
 80049f2:	f7fd fd67 	bl	80024c4 <GUI_DEVICE__GetpDriver>
 80049f6:	b330      	cbz	r0, 8004a46 <LCD_InitLUT+0x66>
 80049f8:	4e15      	ldr	r6, [pc, #84]	; (8004a50 <LCD_InitLUT+0x70>)
 80049fa:	6833      	ldr	r3, [r6, #0]
 80049fc:	4620      	mov	r0, r4
 80049fe:	f893 9011 	ldrb.w	r9, [r3, #17]
 8004a02:	745c      	strb	r4, [r3, #17]
 8004a04:	f7ff ff18 	bl	8004838 <LCD_GetBitsPerPixelEx>
 8004a08:	2808      	cmp	r0, #8
 8004a0a:	dd03      	ble.n	8004a14 <LCD_InitLUT+0x34>
 8004a0c:	6833      	ldr	r3, [r6, #0]
 8004a0e:	f883 9011 	strb.w	r9, [r3, #17]
 8004a12:	e018      	b.n	8004a46 <LCD_InitLUT+0x66>
 8004a14:	4b0f      	ldr	r3, [pc, #60]	; (8004a54 <LCD_InitLUT+0x74>)
 8004a16:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8004a1a:	691a      	ldr	r2, [r3, #16]
 8004a1c:	4b0e      	ldr	r3, [pc, #56]	; (8004a58 <LCD_InitLUT+0x78>)
 8004a1e:	429a      	cmp	r2, r3
 8004a20:	d0f4      	beq.n	8004a0c <LCD_InitLUT+0x2c>
 8004a22:	4620      	mov	r0, r4
 8004a24:	f7ff ff0b 	bl	800483e <LCD_GetNumColorsEx>
 8004a28:	2500      	movs	r5, #0
 8004a2a:	4682      	mov	sl, r0
 8004a2c:	4555      	cmp	r5, sl
 8004a2e:	daed      	bge.n	8004a0c <LCD_InitLUT+0x2c>
 8004a30:	b2ef      	uxtb	r7, r5
 8004a32:	4638      	mov	r0, r7
 8004a34:	f000 fb00 	bl	8005038 <LCD_Index2Color>
 8004a38:	4639      	mov	r1, r7
 8004a3a:	4602      	mov	r2, r0
 8004a3c:	4620      	mov	r0, r4
 8004a3e:	f7fd fcd1 	bl	80023e4 <LCD_SetLUTEntryEx>
 8004a42:	3501      	adds	r5, #1
 8004a44:	e7f2      	b.n	8004a2c <LCD_InitLUT+0x4c>
 8004a46:	3401      	adds	r4, #1
 8004a48:	e7d0      	b.n	80049ec <LCD_InitLUT+0xc>
 8004a4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004a4e:	bf00      	nop
 8004a50:	2000000c 	.word	0x2000000c
 8004a54:	2000814c 	.word	0x2000814c
 8004a58:	08006bdc 	.word	0x08006bdc

08004a5c <_SetDrawMode>:
 8004a5c:	b570      	push	{r4, r5, r6, lr}
 8004a5e:	4b08      	ldr	r3, [pc, #32]	; (8004a80 <_SetDrawMode+0x24>)
 8004a60:	681b      	ldr	r3, [r3, #0]
 8004a62:	7c1a      	ldrb	r2, [r3, #16]
 8004a64:	ea80 0102 	eor.w	r1, r0, r2
 8004a68:	0749      	lsls	r1, r1, #29
 8004a6a:	d505      	bpl.n	8004a78 <_SetDrawMode+0x1c>
 8004a6c:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8004a6e:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8004a70:	6826      	ldr	r6, [r4, #0]
 8004a72:	680d      	ldr	r5, [r1, #0]
 8004a74:	6025      	str	r5, [r4, #0]
 8004a76:	600e      	str	r6, [r1, #0]
 8004a78:	7418      	strb	r0, [r3, #16]
 8004a7a:	4610      	mov	r0, r2
 8004a7c:	bd70      	pop	{r4, r5, r6, pc}
 8004a7e:	bf00      	nop
 8004a80:	2000000c 	.word	0x2000000c

08004a84 <LCD_SetDrawMode>:
 8004a84:	b508      	push	{r3, lr}
 8004a86:	4b02      	ldr	r3, [pc, #8]	; (8004a90 <LCD_SetDrawMode+0xc>)
 8004a88:	681b      	ldr	r3, [r3, #0]
 8004a8a:	689b      	ldr	r3, [r3, #8]
 8004a8c:	4798      	blx	r3
 8004a8e:	bd08      	pop	{r3, pc}
 8004a90:	20000018 	.word	0x20000018

08004a94 <LCD_DrawPixel>:
 8004a94:	b538      	push	{r3, r4, r5, lr}
 8004a96:	4b14      	ldr	r3, [pc, #80]	; (8004ae8 <LCD_DrawPixel+0x54>)
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	460a      	mov	r2, r1
 8004a9c:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 8004aa0:	428a      	cmp	r2, r1
 8004aa2:	4604      	mov	r4, r0
 8004aa4:	db1e      	blt.n	8004ae4 <LCD_DrawPixel+0x50>
 8004aa6:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8004aaa:	428a      	cmp	r2, r1
 8004aac:	dc1a      	bgt.n	8004ae4 <LCD_DrawPixel+0x50>
 8004aae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8004ab2:	4288      	cmp	r0, r1
 8004ab4:	db16      	blt.n	8004ae4 <LCD_DrawPixel+0x50>
 8004ab6:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 8004aba:	4288      	cmp	r0, r1
 8004abc:	dc12      	bgt.n	8004ae4 <LCD_DrawPixel+0x50>
 8004abe:	7c19      	ldrb	r1, [r3, #16]
 8004ac0:	7c58      	ldrb	r0, [r3, #17]
 8004ac2:	f011 0f01 	tst.w	r1, #1
 8004ac6:	4909      	ldr	r1, [pc, #36]	; (8004aec <LCD_DrawPixel+0x58>)
 8004ac8:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8004acc:	d004      	beq.n	8004ad8 <LCD_DrawPixel+0x44>
 8004ace:	68c3      	ldr	r3, [r0, #12]
 8004ad0:	4621      	mov	r1, r4
 8004ad2:	69db      	ldr	r3, [r3, #28]
 8004ad4:	4798      	blx	r3
 8004ad6:	bd38      	pop	{r3, r4, r5, pc}
 8004ad8:	68c1      	ldr	r1, [r0, #12]
 8004ada:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004adc:	698d      	ldr	r5, [r1, #24]
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	4621      	mov	r1, r4
 8004ae2:	47a8      	blx	r5
 8004ae4:	bd38      	pop	{r3, r4, r5, pc}
 8004ae6:	bf00      	nop
 8004ae8:	2000000c 	.word	0x2000000c
 8004aec:	2000814c 	.word	0x2000814c

08004af0 <LCD_DrawHLine>:
 8004af0:	b538      	push	{r3, r4, r5, lr}
 8004af2:	4b10      	ldr	r3, [pc, #64]	; (8004b34 <LCD_DrawHLine+0x44>)
 8004af4:	681c      	ldr	r4, [r3, #0]
 8004af6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8004afa:	4299      	cmp	r1, r3
 8004afc:	460d      	mov	r5, r1
 8004afe:	db17      	blt.n	8004b30 <LCD_DrawHLine+0x40>
 8004b00:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8004b04:	4299      	cmp	r1, r3
 8004b06:	dc13      	bgt.n	8004b30 <LCD_DrawHLine+0x40>
 8004b08:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8004b0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004b10:	4288      	cmp	r0, r1
 8004b12:	bfa8      	it	ge
 8004b14:	4601      	movge	r1, r0
 8004b16:	429a      	cmp	r2, r3
 8004b18:	bfb8      	it	lt
 8004b1a:	4613      	movlt	r3, r2
 8004b1c:	428b      	cmp	r3, r1
 8004b1e:	db07      	blt.n	8004b30 <LCD_DrawHLine+0x40>
 8004b20:	7c60      	ldrb	r0, [r4, #17]
 8004b22:	4a05      	ldr	r2, [pc, #20]	; (8004b38 <LCD_DrawHLine+0x48>)
 8004b24:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8004b28:	68c2      	ldr	r2, [r0, #12]
 8004b2a:	6894      	ldr	r4, [r2, #8]
 8004b2c:	462a      	mov	r2, r5
 8004b2e:	47a0      	blx	r4
 8004b30:	bd38      	pop	{r3, r4, r5, pc}
 8004b32:	bf00      	nop
 8004b34:	2000000c 	.word	0x2000000c
 8004b38:	2000814c 	.word	0x2000814c

08004b3c <LCD_FillRect>:
 8004b3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004b3e:	460e      	mov	r6, r1
 8004b40:	4912      	ldr	r1, [pc, #72]	; (8004b8c <LCD_FillRect+0x50>)
 8004b42:	680c      	ldr	r4, [r1, #0]
 8004b44:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8004b48:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004b4c:	4288      	cmp	r0, r1
 8004b4e:	bfa8      	it	ge
 8004b50:	4601      	movge	r1, r0
 8004b52:	42aa      	cmp	r2, r5
 8004b54:	bfb8      	it	lt
 8004b56:	4615      	movlt	r5, r2
 8004b58:	428d      	cmp	r5, r1
 8004b5a:	db14      	blt.n	8004b86 <LCD_FillRect+0x4a>
 8004b5c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8004b60:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8004b64:	4296      	cmp	r6, r2
 8004b66:	bfa8      	it	ge
 8004b68:	4632      	movge	r2, r6
 8004b6a:	4283      	cmp	r3, r0
 8004b6c:	bfa8      	it	ge
 8004b6e:	4603      	movge	r3, r0
 8004b70:	4293      	cmp	r3, r2
 8004b72:	db08      	blt.n	8004b86 <LCD_FillRect+0x4a>
 8004b74:	7c64      	ldrb	r4, [r4, #17]
 8004b76:	4806      	ldr	r0, [pc, #24]	; (8004b90 <LCD_FillRect+0x54>)
 8004b78:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8004b7c:	68c4      	ldr	r4, [r0, #12]
 8004b7e:	9300      	str	r3, [sp, #0]
 8004b80:	6924      	ldr	r4, [r4, #16]
 8004b82:	462b      	mov	r3, r5
 8004b84:	47a0      	blx	r4
 8004b86:	b002      	add	sp, #8
 8004b88:	bd70      	pop	{r4, r5, r6, pc}
 8004b8a:	bf00      	nop
 8004b8c:	2000000c 	.word	0x2000000c
 8004b90:	2000814c 	.word	0x2000814c

08004b94 <LCD__DrawBitmap_1bpp>:
 8004b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004b98:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 8004d48 <LCD__DrawBitmap_1bpp+0x1b4>
 8004b9c:	b08f      	sub	sp, #60	; 0x3c
 8004b9e:	f8dc c000 	ldr.w	ip, [ip]
 8004ba2:	9009      	str	r0, [sp, #36]	; 0x24
 8004ba4:	460e      	mov	r6, r1
 8004ba6:	4615      	mov	r5, r2
 8004ba8:	469b      	mov	fp, r3
 8004baa:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8004bac:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 8004bb0:	f1bc 0f00 	cmp.w	ip, #0
 8004bb4:	d00d      	beq.n	8004bd2 <LCD__DrawBitmap_1bpp+0x3e>
 8004bb6:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8004bb8:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8004bba:	9500      	str	r5, [sp, #0]
 8004bbc:	9601      	str	r6, [sp, #4]
 8004bbe:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8004bc0:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8004bc2:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8004bc4:	9702      	str	r7, [sp, #8]
 8004bc6:	9503      	str	r5, [sp, #12]
 8004bc8:	9404      	str	r4, [sp, #16]
 8004bca:	9605      	str	r6, [sp, #20]
 8004bcc:	f8dc 4000 	ldr.w	r4, [ip]
 8004bd0:	e053      	b.n	8004c7a <LCD__DrawBitmap_1bpp+0xe6>
 8004bd2:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8004bd4:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004bd6:	ea47 0300 	orr.w	r3, r7, r0
 8004bda:	2b01      	cmp	r3, #1
 8004bdc:	d14f      	bne.n	8004c7e <LCD__DrawBitmap_1bpp+0xea>
 8004bde:	4b58      	ldr	r3, [pc, #352]	; (8004d40 <LCD__DrawBitmap_1bpp+0x1ac>)
 8004be0:	6818      	ldr	r0, [r3, #0]
 8004be2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8004be6:	1a51      	subs	r1, r2, r1
 8004be8:	2900      	cmp	r1, #0
 8004bea:	dd08      	ble.n	8004bfe <LCD__DrawBitmap_1bpp+0x6a>
 8004bec:	ebc1 030b 	rsb	r3, r1, fp
 8004bf0:	2b00      	cmp	r3, #0
 8004bf2:	f340 80a2 	ble.w	8004d3a <LCD__DrawBitmap_1bpp+0x1a6>
 8004bf6:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8004bf8:	fb07 4401 	mla	r4, r7, r1, r4
 8004bfc:	e001      	b.n	8004c02 <LCD__DrawBitmap_1bpp+0x6e>
 8004bfe:	465b      	mov	r3, fp
 8004c00:	4632      	mov	r2, r6
 8004c02:	445e      	add	r6, fp
 8004c04:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 8004c08:	3e01      	subs	r6, #1
 8004c0a:	1a76      	subs	r6, r6, r1
 8004c0c:	2e00      	cmp	r6, #0
 8004c0e:	dd03      	ble.n	8004c18 <LCD__DrawBitmap_1bpp+0x84>
 8004c10:	1b9b      	subs	r3, r3, r6
 8004c12:	2b00      	cmp	r3, #0
 8004c14:	f340 8091 	ble.w	8004d3a <LCD__DrawBitmap_1bpp+0x1a6>
 8004c18:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004c1a:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 8004c1e:	4429      	add	r1, r5
 8004c20:	3901      	subs	r1, #1
 8004c22:	1b89      	subs	r1, r1, r6
 8004c24:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004c26:	2900      	cmp	r1, #0
 8004c28:	bfc8      	it	gt
 8004c2a:	ebc1 0505 	rsbgt	r5, r1, r5
 8004c2e:	ebc8 0106 	rsb	r1, r8, r6
 8004c32:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8004c36:	42b1      	cmp	r1, r6
 8004c38:	da0c      	bge.n	8004c54 <LCD__DrawBitmap_1bpp+0xc0>
 8004c3a:	ebc1 0c06 	rsb	ip, r1, r6
 8004c3e:	eb08 070c 	add.w	r7, r8, ip
 8004c42:	1b8e      	subs	r6, r1, r6
 8004c44:	f02c 0c07 	bic.w	ip, ip, #7
 8004c48:	4435      	add	r5, r6
 8004c4a:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 8004c4e:	4461      	add	r1, ip
 8004c50:	f007 0807 	and.w	r8, r7, #7
 8004c54:	2d00      	cmp	r5, #0
 8004c56:	dd70      	ble.n	8004d3a <LCD__DrawBitmap_1bpp+0x1a6>
 8004c58:	7c46      	ldrb	r6, [r0, #17]
 8004c5a:	483a      	ldr	r0, [pc, #232]	; (8004d44 <LCD__DrawBitmap_1bpp+0x1b0>)
 8004c5c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8004c5e:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 8004c62:	68c6      	ldr	r6, [r0, #12]
 8004c64:	9701      	str	r7, [sp, #4]
 8004c66:	9403      	str	r4, [sp, #12]
 8004c68:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8004c6a:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 8004c6c:	9300      	str	r3, [sp, #0]
 8004c6e:	9702      	str	r7, [sp, #8]
 8004c70:	f8cd 8010 	str.w	r8, [sp, #16]
 8004c74:	9405      	str	r4, [sp, #20]
 8004c76:	6874      	ldr	r4, [r6, #4]
 8004c78:	462b      	mov	r3, r5
 8004c7a:	47a0      	blx	r4
 8004c7c:	e05d      	b.n	8004d3a <LCD__DrawBitmap_1bpp+0x1a6>
 8004c7e:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8004c80:	f1c7 0708 	rsb	r7, r7, #8
 8004c84:	970c      	str	r7, [sp, #48]	; 0x30
 8004c86:	4667      	mov	r7, ip
 8004c88:	45dc      	cmp	ip, fp
 8004c8a:	da56      	bge.n	8004d3a <LCD__DrawBitmap_1bpp+0x1a6>
 8004c8c:	4b2c      	ldr	r3, [pc, #176]	; (8004d40 <LCD__DrawBitmap_1bpp+0x1ac>)
 8004c8e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	4430      	add	r0, r6
 8004c94:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8004c98:	900a      	str	r0, [sp, #40]	; 0x28
 8004c9a:	1e41      	subs	r1, r0, #1
 8004c9c:	4291      	cmp	r1, r2
 8004c9e:	910b      	str	r1, [sp, #44]	; 0x2c
 8004ca0:	db45      	blt.n	8004d2e <LCD__DrawBitmap_1bpp+0x19a>
 8004ca2:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8004ca6:	429e      	cmp	r6, r3
 8004ca8:	dc41      	bgt.n	8004d2e <LCD__DrawBitmap_1bpp+0x19a>
 8004caa:	f04f 0800 	mov.w	r8, #0
 8004cae:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8004cb2:	9408      	str	r4, [sp, #32]
 8004cb4:	46c2      	mov	sl, r8
 8004cb6:	45aa      	cmp	sl, r5
 8004cb8:	da39      	bge.n	8004d2e <LCD__DrawBitmap_1bpp+0x19a>
 8004cba:	f1b8 0f00 	cmp.w	r8, #0
 8004cbe:	d105      	bne.n	8004ccc <LCD__DrawBitmap_1bpp+0x138>
 8004cc0:	9a08      	ldr	r2, [sp, #32]
 8004cc2:	7817      	ldrb	r7, [r2, #0]
 8004cc4:	3201      	adds	r2, #1
 8004cc6:	9208      	str	r2, [sp, #32]
 8004cc8:	f04f 0808 	mov.w	r8, #8
 8004ccc:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004cce:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004cd0:	4a1b      	ldr	r2, [pc, #108]	; (8004d40 <LCD__DrawBitmap_1bpp+0x1ac>)
 8004cd2:	fa47 f300 	asr.w	r3, r7, r0
 8004cd6:	ebc1 0808 	rsb	r8, r1, r8
 8004cda:	408f      	lsls	r7, r1
 8004cdc:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8004ce0:	b2ff      	uxtb	r7, r7
 8004ce2:	d103      	bne.n	8004cec <LCD__DrawBitmap_1bpp+0x158>
 8004ce4:	6810      	ldr	r0, [r2, #0]
 8004ce6:	7c00      	ldrb	r0, [r0, #16]
 8004ce8:	0780      	lsls	r0, r0, #30
 8004cea:	d41b      	bmi.n	8004d24 <LCD__DrawBitmap_1bpp+0x190>
 8004cec:	6812      	ldr	r2, [r2, #0]
 8004cee:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8004cf0:	6810      	ldr	r0, [r2, #0]
 8004cf2:	900d      	str	r0, [sp, #52]	; 0x34
 8004cf4:	981d      	ldr	r0, [sp, #116]	; 0x74
 8004cf6:	b110      	cbz	r0, 8004cfe <LCD__DrawBitmap_1bpp+0x16a>
 8004cf8:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8004cfc:	e000      	b.n	8004d00 <LCD__DrawBitmap_1bpp+0x16c>
 8004cfe:	b2db      	uxtb	r3, r3
 8004d00:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004d02:	6013      	str	r3, [r2, #0]
 8004d04:	1e4a      	subs	r2, r1, #1
 8004d06:	444a      	add	r2, r9
 8004d08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004d0a:	f8cd c01c 	str.w	ip, [sp, #28]
 8004d0e:	4648      	mov	r0, r9
 8004d10:	4631      	mov	r1, r6
 8004d12:	f7ff ff13 	bl	8004b3c <LCD_FillRect>
 8004d16:	4b0a      	ldr	r3, [pc, #40]	; (8004d40 <LCD__DrawBitmap_1bpp+0x1ac>)
 8004d18:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004d1a:	681b      	ldr	r3, [r3, #0]
 8004d1c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8004d20:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004d22:	601a      	str	r2, [r3, #0]
 8004d24:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8004d26:	f10a 0a01 	add.w	sl, sl, #1
 8004d2a:	4499      	add	r9, r3
 8004d2c:	e7c3      	b.n	8004cb6 <LCD__DrawBitmap_1bpp+0x122>
 8004d2e:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8004d30:	f10c 0c01 	add.w	ip, ip, #1
 8004d34:	4434      	add	r4, r6
 8004d36:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8004d38:	e7a6      	b.n	8004c88 <LCD__DrawBitmap_1bpp+0xf4>
 8004d3a:	b00f      	add	sp, #60	; 0x3c
 8004d3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004d40:	2000000c 	.word	0x2000000c
 8004d44:	2000814c 	.word	0x2000814c
 8004d48:	20008120 	.word	0x20008120

08004d4c <LCD_DrawBitmap>:
 8004d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d50:	f8df c20c 	ldr.w	ip, [pc, #524]	; 8004f60 <LCD_DrawBitmap+0x214>
 8004d54:	b091      	sub	sp, #68	; 0x44
 8004d56:	f8dc 9000 	ldr.w	r9, [ip]
 8004d5a:	9207      	str	r2, [sp, #28]
 8004d5c:	4605      	mov	r5, r0
 8004d5e:	4688      	mov	r8, r1
 8004d60:	469b      	mov	fp, r3
 8004d62:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 8004d64:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8004d66:	f1b9 0f00 	cmp.w	r9, #0
 8004d6a:	d00c      	beq.n	8004d86 <LCD_DrawBitmap+0x3a>
 8004d6c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8004d6e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8004d70:	9500      	str	r5, [sp, #0]
 8004d72:	9701      	str	r7, [sp, #4]
 8004d74:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8004d76:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 8004d78:	9602      	str	r6, [sp, #8]
 8004d7a:	9503      	str	r5, [sp, #12]
 8004d7c:	9404      	str	r4, [sp, #16]
 8004d7e:	9705      	str	r7, [sp, #20]
 8004d80:	f8d9 4000 	ldr.w	r4, [r9]
 8004d84:	e081      	b.n	8004e8a <LCD_DrawBitmap+0x13e>
 8004d86:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8004d88:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004d8a:	ea47 0300 	orr.w	r3, r7, r0
 8004d8e:	2b01      	cmp	r3, #1
 8004d90:	d17d      	bne.n	8004e8e <LCD_DrawBitmap+0x142>
 8004d92:	4b71      	ldr	r3, [pc, #452]	; (8004f58 <LCD_DrawBitmap+0x20c>)
 8004d94:	6818      	ldr	r0, [r3, #0]
 8004d96:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8004d9a:	1a53      	subs	r3, r2, r1
 8004d9c:	2b00      	cmp	r3, #0
 8004d9e:	dd08      	ble.n	8004db2 <LCD_DrawBitmap+0x66>
 8004da0:	ebc3 010b 	rsb	r1, r3, fp
 8004da4:	2900      	cmp	r1, #0
 8004da6:	f340 80d4 	ble.w	8004f52 <LCD_DrawBitmap+0x206>
 8004daa:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8004dac:	fb07 4403 	mla	r4, r7, r3, r4
 8004db0:	e001      	b.n	8004db6 <LCD_DrawBitmap+0x6a>
 8004db2:	4659      	mov	r1, fp
 8004db4:	4642      	mov	r2, r8
 8004db6:	44d8      	add	r8, fp
 8004db8:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 8004dbc:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8004dc0:	ebc3 0808 	rsb	r8, r3, r8
 8004dc4:	f1b8 0f00 	cmp.w	r8, #0
 8004dc8:	dd04      	ble.n	8004dd4 <LCD_DrawBitmap+0x88>
 8004dca:	ebc8 0101 	rsb	r1, r8, r1
 8004dce:	2900      	cmp	r1, #0
 8004dd0:	f340 80bf 	ble.w	8004f52 <LCD_DrawBitmap+0x206>
 8004dd4:	9b07      	ldr	r3, [sp, #28]
 8004dd6:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 8004dda:	442b      	add	r3, r5
 8004ddc:	3b01      	subs	r3, #1
 8004dde:	ebcc 0303 	rsb	r3, ip, r3
 8004de2:	2b00      	cmp	r3, #0
 8004de4:	dd02      	ble.n	8004dec <LCD_DrawBitmap+0xa0>
 8004de6:	9f07      	ldr	r7, [sp, #28]
 8004de8:	1aff      	subs	r7, r7, r3
 8004dea:	9707      	str	r7, [sp, #28]
 8004dec:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8004df0:	4565      	cmp	r5, ip
 8004df2:	da33      	bge.n	8004e5c <LCD_DrawBitmap+0x110>
 8004df4:	9f07      	ldr	r7, [sp, #28]
 8004df6:	ebc5 030c 	rsb	r3, r5, ip
 8004dfa:	1aff      	subs	r7, r7, r3
 8004dfc:	2e08      	cmp	r6, #8
 8004dfe:	9707      	str	r7, [sp, #28]
 8004e00:	d027      	beq.n	8004e52 <LCD_DrawBitmap+0x106>
 8004e02:	dc0d      	bgt.n	8004e20 <LCD_DrawBitmap+0xd4>
 8004e04:	2e02      	cmp	r6, #2
 8004e06:	d014      	beq.n	8004e32 <LCD_DrawBitmap+0xe6>
 8004e08:	2e04      	cmp	r6, #4
 8004e0a:	d01a      	beq.n	8004e42 <LCD_DrawBitmap+0xf6>
 8004e0c:	2e01      	cmp	r6, #1
 8004e0e:	d126      	bne.n	8004e5e <LCD_DrawBitmap+0x112>
 8004e10:	f023 0c07 	bic.w	ip, r3, #7
 8004e14:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 8004e18:	4465      	add	r5, ip
 8004e1a:	f003 0307 	and.w	r3, r3, #7
 8004e1e:	e01e      	b.n	8004e5e <LCD_DrawBitmap+0x112>
 8004e20:	2e18      	cmp	r6, #24
 8004e22:	d018      	beq.n	8004e56 <LCD_DrawBitmap+0x10a>
 8004e24:	2e20      	cmp	r6, #32
 8004e26:	d016      	beq.n	8004e56 <LCD_DrawBitmap+0x10a>
 8004e28:	2e10      	cmp	r6, #16
 8004e2a:	d118      	bne.n	8004e5e <LCD_DrawBitmap+0x112>
 8004e2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8004e30:	e013      	b.n	8004e5a <LCD_DrawBitmap+0x10e>
 8004e32:	f023 0c03 	bic.w	ip, r3, #3
 8004e36:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 8004e3a:	4465      	add	r5, ip
 8004e3c:	f003 0303 	and.w	r3, r3, #3
 8004e40:	e00d      	b.n	8004e5e <LCD_DrawBitmap+0x112>
 8004e42:	f023 0c01 	bic.w	ip, r3, #1
 8004e46:	eb04 0463 	add.w	r4, r4, r3, asr #1
 8004e4a:	4465      	add	r5, ip
 8004e4c:	f003 0301 	and.w	r3, r3, #1
 8004e50:	e005      	b.n	8004e5e <LCD_DrawBitmap+0x112>
 8004e52:	441c      	add	r4, r3
 8004e54:	e001      	b.n	8004e5a <LCD_DrawBitmap+0x10e>
 8004e56:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8004e5a:	4665      	mov	r5, ip
 8004e5c:	2300      	movs	r3, #0
 8004e5e:	9f07      	ldr	r7, [sp, #28]
 8004e60:	2f00      	cmp	r7, #0
 8004e62:	dd76      	ble.n	8004f52 <LCD_DrawBitmap+0x206>
 8004e64:	f890 e011 	ldrb.w	lr, [r0, #17]
 8004e68:	483c      	ldr	r0, [pc, #240]	; (8004f5c <LCD_DrawBitmap+0x210>)
 8004e6a:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8004e6c:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 8004e70:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 8004e74:	9403      	str	r4, [sp, #12]
 8004e76:	e88d 0042 	stmia.w	sp, {r1, r6}
 8004e7a:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8004e7c:	9304      	str	r3, [sp, #16]
 8004e7e:	9702      	str	r7, [sp, #8]
 8004e80:	9405      	str	r4, [sp, #20]
 8004e82:	f8de 4004 	ldr.w	r4, [lr, #4]
 8004e86:	9b07      	ldr	r3, [sp, #28]
 8004e88:	4629      	mov	r1, r5
 8004e8a:	47a0      	blx	r4
 8004e8c:	e061      	b.n	8004f52 <LCD_DrawBitmap+0x206>
 8004e8e:	f1c6 0708 	rsb	r7, r6, #8
 8004e92:	970e      	str	r7, [sp, #56]	; 0x38
 8004e94:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8004e98:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8004e9a:	455f      	cmp	r7, fp
 8004e9c:	da59      	bge.n	8004f52 <LCD_DrawBitmap+0x206>
 8004e9e:	4b2e      	ldr	r3, [pc, #184]	; (8004f58 <LCD_DrawBitmap+0x20c>)
 8004ea0:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	4447      	add	r7, r8
 8004ea6:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8004eaa:	970c      	str	r7, [sp, #48]	; 0x30
 8004eac:	3f01      	subs	r7, #1
 8004eae:	4297      	cmp	r7, r2
 8004eb0:	970d      	str	r7, [sp, #52]	; 0x34
 8004eb2:	db46      	blt.n	8004f42 <LCD_DrawBitmap+0x1f6>
 8004eb4:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8004eb8:	4598      	cmp	r8, r3
 8004eba:	dc42      	bgt.n	8004f42 <LCD_DrawBitmap+0x1f6>
 8004ebc:	f04f 0a00 	mov.w	sl, #0
 8004ec0:	940b      	str	r4, [sp, #44]	; 0x2c
 8004ec2:	46ac      	mov	ip, r5
 8004ec4:	4657      	mov	r7, sl
 8004ec6:	9807      	ldr	r0, [sp, #28]
 8004ec8:	4287      	cmp	r7, r0
 8004eca:	da3a      	bge.n	8004f42 <LCD_DrawBitmap+0x1f6>
 8004ecc:	f1ba 0f00 	cmp.w	sl, #0
 8004ed0:	d106      	bne.n	8004ee0 <LCD_DrawBitmap+0x194>
 8004ed2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004ed4:	f890 9000 	ldrb.w	r9, [r0]
 8004ed8:	3001      	adds	r0, #1
 8004eda:	900b      	str	r0, [sp, #44]	; 0x2c
 8004edc:	f04f 0a08 	mov.w	sl, #8
 8004ee0:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004ee2:	4a1d      	ldr	r2, [pc, #116]	; (8004f58 <LCD_DrawBitmap+0x20c>)
 8004ee4:	fa49 f301 	asr.w	r3, r9, r1
 8004ee8:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8004eec:	fa09 f906 	lsl.w	r9, r9, r6
 8004ef0:	fa5f f989 	uxtb.w	r9, r9
 8004ef4:	ebc6 0a0a 	rsb	sl, r6, sl
 8004ef8:	d103      	bne.n	8004f02 <LCD_DrawBitmap+0x1b6>
 8004efa:	6810      	ldr	r0, [r2, #0]
 8004efc:	7c00      	ldrb	r0, [r0, #16]
 8004efe:	0780      	lsls	r0, r0, #30
 8004f00:	d41b      	bmi.n	8004f3a <LCD_DrawBitmap+0x1ee>
 8004f02:	6812      	ldr	r2, [r2, #0]
 8004f04:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8004f06:	6810      	ldr	r0, [r2, #0]
 8004f08:	900f      	str	r0, [sp, #60]	; 0x3c
 8004f0a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8004f0c:	b110      	cbz	r0, 8004f14 <LCD_DrawBitmap+0x1c8>
 8004f0e:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8004f12:	e000      	b.n	8004f16 <LCD_DrawBitmap+0x1ca>
 8004f14:	b2db      	uxtb	r3, r3
 8004f16:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004f18:	6013      	str	r3, [r2, #0]
 8004f1a:	1e4a      	subs	r2, r1, #1
 8004f1c:	4462      	add	r2, ip
 8004f1e:	4660      	mov	r0, ip
 8004f20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004f22:	f8cd c020 	str.w	ip, [sp, #32]
 8004f26:	4641      	mov	r1, r8
 8004f28:	f7ff fe08 	bl	8004b3c <LCD_FillRect>
 8004f2c:	4b0a      	ldr	r3, [pc, #40]	; (8004f58 <LCD_DrawBitmap+0x20c>)
 8004f2e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004f30:	681b      	ldr	r3, [r3, #0]
 8004f32:	f8dd c020 	ldr.w	ip, [sp, #32]
 8004f36:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004f38:	601a      	str	r2, [r3, #0]
 8004f3a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004f3c:	3701      	adds	r7, #1
 8004f3e:	449c      	add	ip, r3
 8004f40:	e7c1      	b.n	8004ec6 <LCD_DrawBitmap+0x17a>
 8004f42:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8004f44:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8004f48:	3701      	adds	r7, #1
 8004f4a:	970a      	str	r7, [sp, #40]	; 0x28
 8004f4c:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8004f4e:	443c      	add	r4, r7
 8004f50:	e7a2      	b.n	8004e98 <LCD_DrawBitmap+0x14c>
 8004f52:	b011      	add	sp, #68	; 0x44
 8004f54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f58:	2000000c 	.word	0x2000000c
 8004f5c:	2000814c 	.word	0x2000814c
 8004f60:	20008120 	.word	0x20008120

08004f64 <LCD_SetClipRectMax>:
 8004f64:	b508      	push	{r3, lr}
 8004f66:	4b05      	ldr	r3, [pc, #20]	; (8004f7c <LCD_SetClipRectMax+0x18>)
 8004f68:	6819      	ldr	r1, [r3, #0]
 8004f6a:	4b05      	ldr	r3, [pc, #20]	; (8004f80 <LCD_SetClipRectMax+0x1c>)
 8004f6c:	7c4a      	ldrb	r2, [r1, #17]
 8004f6e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8004f72:	68c3      	ldr	r3, [r0, #12]
 8004f74:	3108      	adds	r1, #8
 8004f76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f78:	4798      	blx	r3
 8004f7a:	bd08      	pop	{r3, pc}
 8004f7c:	2000000c 	.word	0x2000000c
 8004f80:	2000814c 	.word	0x2000814c

08004f84 <emWin_LCD_Init>:
 8004f84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004f86:	f7ff ffed 	bl	8004f64 <LCD_SetClipRectMax>
 8004f8a:	f7ff fd0d 	bl	80049a8 <LCD_InitColors>
 8004f8e:	4604      	mov	r4, r0
 8004f90:	2800      	cmp	r0, #0
 8004f92:	d13d      	bne.n	8005010 <emWin_LCD_Init+0x8c>
 8004f94:	4605      	mov	r5, r0
 8004f96:	4628      	mov	r0, r5
 8004f98:	f7fd fa94 	bl	80024c4 <GUI_DEVICE__GetpDriver>
 8004f9c:	9001      	str	r0, [sp, #4]
 8004f9e:	b148      	cbz	r0, 8004fb4 <emWin_LCD_Init+0x30>
 8004fa0:	68c3      	ldr	r3, [r0, #12]
 8004fa2:	210c      	movs	r1, #12
 8004fa4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fa6:	a801      	add	r0, sp, #4
 8004fa8:	4798      	blx	r3
 8004faa:	4603      	mov	r3, r0
 8004fac:	b370      	cbz	r0, 800500c <emWin_LCD_Init+0x88>
 8004fae:	9801      	ldr	r0, [sp, #4]
 8004fb0:	4798      	blx	r3
 8004fb2:	4304      	orrs	r4, r0
 8004fb4:	3501      	adds	r5, #1
 8004fb6:	2d02      	cmp	r5, #2
 8004fb8:	d1ed      	bne.n	8004f96 <emWin_LCD_Init+0x12>
 8004fba:	bb4c      	cbnz	r4, 8005010 <emWin_LCD_Init+0x8c>
 8004fbc:	f7ff fd10 	bl	80049e0 <LCD_InitLUT>
 8004fc0:	2401      	movs	r4, #1
 8004fc2:	4620      	mov	r0, r4
 8004fc4:	f7fd fa7e 	bl	80024c4 <GUI_DEVICE__GetpDriver>
 8004fc8:	9001      	str	r0, [sp, #4]
 8004fca:	b1d0      	cbz	r0, 8005002 <emWin_LCD_Init+0x7e>
 8004fcc:	4620      	mov	r0, r4
 8004fce:	f000 f909 	bl	80051e4 <GUI_SelectLayer>
 8004fd2:	2004      	movs	r0, #4
 8004fd4:	f7ff fd56 	bl	8004a84 <LCD_SetDrawMode>
 8004fd8:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8004fdc:	2000      	movs	r0, #0
 8004fde:	4601      	mov	r1, r0
 8004fe0:	4613      	mov	r3, r2
 8004fe2:	f7ff fdab 	bl	8004b3c <LCD_FillRect>
 8004fe6:	2000      	movs	r0, #0
 8004fe8:	f7ff fd4c 	bl	8004a84 <LCD_SetDrawMode>
 8004fec:	a802      	add	r0, sp, #8
 8004fee:	210e      	movs	r1, #14
 8004ff0:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8004ff4:	68db      	ldr	r3, [r3, #12]
 8004ff6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ff8:	4798      	blx	r3
 8004ffa:	4603      	mov	r3, r0
 8004ffc:	b108      	cbz	r0, 8005002 <emWin_LCD_Init+0x7e>
 8004ffe:	9801      	ldr	r0, [sp, #4]
 8005000:	4798      	blx	r3
 8005002:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
 8005006:	d2dc      	bcs.n	8004fc2 <emWin_LCD_Init+0x3e>
 8005008:	2000      	movs	r0, #0
 800500a:	e002      	b.n	8005012 <emWin_LCD_Init+0x8e>
 800500c:	2001      	movs	r0, #1
 800500e:	e000      	b.n	8005012 <emWin_LCD_Init+0x8e>
 8005010:	4620      	mov	r0, r4
 8005012:	b003      	add	sp, #12
 8005014:	bd30      	pop	{r4, r5, pc}
	...

08005018 <LCD_Color2Index>:
 8005018:	b508      	push	{r3, lr}
 800501a:	4b05      	ldr	r3, [pc, #20]	; (8005030 <LCD_Color2Index+0x18>)
 800501c:	681b      	ldr	r3, [r3, #0]
 800501e:	7c5a      	ldrb	r2, [r3, #17]
 8005020:	4b04      	ldr	r3, [pc, #16]	; (8005034 <LCD_Color2Index+0x1c>)
 8005022:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005026:	691b      	ldr	r3, [r3, #16]
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	4798      	blx	r3
 800502c:	bd08      	pop	{r3, pc}
 800502e:	bf00      	nop
 8005030:	2000000c 	.word	0x2000000c
 8005034:	2000814c 	.word	0x2000814c

08005038 <LCD_Index2Color>:
 8005038:	b508      	push	{r3, lr}
 800503a:	4b05      	ldr	r3, [pc, #20]	; (8005050 <LCD_Index2Color+0x18>)
 800503c:	681b      	ldr	r3, [r3, #0]
 800503e:	7c5a      	ldrb	r2, [r3, #17]
 8005040:	4b04      	ldr	r3, [pc, #16]	; (8005054 <LCD_Index2Color+0x1c>)
 8005042:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005046:	691b      	ldr	r3, [r3, #16]
 8005048:	685b      	ldr	r3, [r3, #4]
 800504a:	4798      	blx	r3
 800504c:	bd08      	pop	{r3, pc}
 800504e:	bf00      	nop
 8005050:	2000000c 	.word	0x2000000c
 8005054:	2000814c 	.word	0x2000814c

08005058 <LCD_SetColorIndex>:
 8005058:	4b04      	ldr	r3, [pc, #16]	; (800506c <LCD_SetColorIndex+0x14>)
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	7c1a      	ldrb	r2, [r3, #16]
 800505e:	0752      	lsls	r2, r2, #29
 8005060:	bf4c      	ite	mi
 8005062:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 8005064:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 8005066:	6018      	str	r0, [r3, #0]
 8005068:	4770      	bx	lr
 800506a:	bf00      	nop
 800506c:	2000000c 	.word	0x2000000c

08005070 <_SetColor>:
 8005070:	b508      	push	{r3, lr}
 8005072:	4b06      	ldr	r3, [pc, #24]	; (800508c <_SetColor+0x1c>)
 8005074:	681b      	ldr	r3, [r3, #0]
 8005076:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005078:	4281      	cmp	r1, r0
 800507a:	d006      	beq.n	800508a <_SetColor+0x1a>
 800507c:	6318      	str	r0, [r3, #48]	; 0x30
 800507e:	f7ff ffcb 	bl	8005018 <LCD_Color2Index>
 8005082:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005086:	f7ff bfe7 	b.w	8005058 <LCD_SetColorIndex>
 800508a:	bd08      	pop	{r3, pc}
 800508c:	2000000c 	.word	0x2000000c

08005090 <LCD_SetBkColorIndex>:
 8005090:	4b04      	ldr	r3, [pc, #16]	; (80050a4 <LCD_SetBkColorIndex+0x14>)
 8005092:	681b      	ldr	r3, [r3, #0]
 8005094:	7c1a      	ldrb	r2, [r3, #16]
 8005096:	0752      	lsls	r2, r2, #29
 8005098:	bf4c      	ite	mi
 800509a:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 800509c:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 800509e:	6018      	str	r0, [r3, #0]
 80050a0:	4770      	bx	lr
 80050a2:	bf00      	nop
 80050a4:	2000000c 	.word	0x2000000c

080050a8 <_SetBkColor>:
 80050a8:	b508      	push	{r3, lr}
 80050aa:	4b06      	ldr	r3, [pc, #24]	; (80050c4 <_SetBkColor+0x1c>)
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80050b0:	4281      	cmp	r1, r0
 80050b2:	d006      	beq.n	80050c2 <_SetBkColor+0x1a>
 80050b4:	6358      	str	r0, [r3, #52]	; 0x34
 80050b6:	f7ff ffaf 	bl	8005018 <LCD_Color2Index>
 80050ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80050be:	f7ff bfe7 	b.w	8005090 <LCD_SetBkColorIndex>
 80050c2:	bd08      	pop	{r3, pc}
 80050c4:	2000000c 	.word	0x2000000c

080050c8 <LCD_SetBkColor>:
 80050c8:	b508      	push	{r3, lr}
 80050ca:	4b02      	ldr	r3, [pc, #8]	; (80050d4 <LCD_SetBkColor+0xc>)
 80050cc:	681b      	ldr	r3, [r3, #0]
 80050ce:	685b      	ldr	r3, [r3, #4]
 80050d0:	4798      	blx	r3
 80050d2:	bd08      	pop	{r3, pc}
 80050d4:	20000018 	.word	0x20000018

080050d8 <LCD_SetColor>:
 80050d8:	b508      	push	{r3, lr}
 80050da:	4b02      	ldr	r3, [pc, #8]	; (80050e4 <LCD_SetColor+0xc>)
 80050dc:	681b      	ldr	r3, [r3, #0]
 80050de:	681b      	ldr	r3, [r3, #0]
 80050e0:	4798      	blx	r3
 80050e2:	bd08      	pop	{r3, pc}
 80050e4:	20000018 	.word	0x20000018

080050e8 <GUI__IntersectRects>:
 80050e8:	b570      	push	{r4, r5, r6, lr}
 80050ea:	f9b2 3000 	ldrsh.w	r3, [r2]
 80050ee:	f9b1 4000 	ldrsh.w	r4, [r1]
 80050f2:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80050f6:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 80050fa:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 80050fe:	429c      	cmp	r4, r3
 8005100:	bfb8      	it	lt
 8005102:	461c      	movlt	r4, r3
 8005104:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8005108:	429d      	cmp	r5, r3
 800510a:	bfa8      	it	ge
 800510c:	462b      	movge	r3, r5
 800510e:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 8005112:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8005116:	42ae      	cmp	r6, r5
 8005118:	bfb8      	it	lt
 800511a:	4635      	movlt	r5, r6
 800511c:	b2a4      	uxth	r4, r4
 800511e:	b2ad      	uxth	r5, r5
 8005120:	4291      	cmp	r1, r2
 8005122:	bfb8      	it	lt
 8005124:	460a      	movlt	r2, r1
 8005126:	8004      	strh	r4, [r0, #0]
 8005128:	8085      	strh	r5, [r0, #4]
 800512a:	b224      	sxth	r4, r4
 800512c:	b22d      	sxth	r5, r5
 800512e:	b29b      	uxth	r3, r3
 8005130:	b292      	uxth	r2, r2
 8005132:	42a5      	cmp	r5, r4
 8005134:	8043      	strh	r3, [r0, #2]
 8005136:	80c2      	strh	r2, [r0, #6]
 8005138:	db06      	blt.n	8005148 <GUI__IntersectRects+0x60>
 800513a:	b210      	sxth	r0, r2
 800513c:	b21b      	sxth	r3, r3
 800513e:	4298      	cmp	r0, r3
 8005140:	bfb4      	ite	lt
 8005142:	2000      	movlt	r0, #0
 8005144:	2001      	movge	r0, #1
 8005146:	bd70      	pop	{r4, r5, r6, pc}
 8005148:	2000      	movs	r0, #0
 800514a:	bd70      	pop	{r4, r5, r6, pc}

0800514c <GUI__IntersectRect>:
 800514c:	880b      	ldrh	r3, [r1, #0]
 800514e:	b510      	push	{r4, lr}
 8005150:	f9b0 4000 	ldrsh.w	r4, [r0]
 8005154:	b21a      	sxth	r2, r3
 8005156:	4294      	cmp	r4, r2
 8005158:	bfb8      	it	lt
 800515a:	8003      	strhlt	r3, [r0, #0]
 800515c:	884b      	ldrh	r3, [r1, #2]
 800515e:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8005162:	b21a      	sxth	r2, r3
 8005164:	4294      	cmp	r4, r2
 8005166:	bfb8      	it	lt
 8005168:	8043      	strhlt	r3, [r0, #2]
 800516a:	888b      	ldrh	r3, [r1, #4]
 800516c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8005170:	b21a      	sxth	r2, r3
 8005172:	4294      	cmp	r4, r2
 8005174:	bfc8      	it	gt
 8005176:	8083      	strhgt	r3, [r0, #4]
 8005178:	88cb      	ldrh	r3, [r1, #6]
 800517a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800517e:	b21a      	sxth	r2, r3
 8005180:	4291      	cmp	r1, r2
 8005182:	bfc8      	it	gt
 8005184:	80c3      	strhgt	r3, [r0, #6]
 8005186:	bd10      	pop	{r4, pc}

08005188 <GUI_SignalEvent>:
 8005188:	b508      	push	{r3, lr}
 800518a:	4b02      	ldr	r3, [pc, #8]	; (8005194 <GUI_SignalEvent+0xc>)
 800518c:	681b      	ldr	r3, [r3, #0]
 800518e:	b103      	cbz	r3, 8005192 <GUI_SignalEvent+0xa>
 8005190:	4798      	blx	r3
 8005192:	bd08      	pop	{r3, pc}
 8005194:	2000810c 	.word	0x2000810c

08005198 <_GetCharCode>:
 8005198:	7800      	ldrb	r0, [r0, #0]
 800519a:	4770      	bx	lr

0800519c <_GetCharSize>:
 800519c:	2001      	movs	r0, #1
 800519e:	4770      	bx	lr

080051a0 <_CalcSizeOfChar>:
 80051a0:	2001      	movs	r0, #1
 80051a2:	4770      	bx	lr

080051a4 <_Encode>:
 80051a4:	7001      	strb	r1, [r0, #0]
 80051a6:	2001      	movs	r0, #1
 80051a8:	4770      	bx	lr
	...

080051ac <GUI_SetOrg>:
 80051ac:	460a      	mov	r2, r1
 80051ae:	4908      	ldr	r1, [pc, #32]	; (80051d0 <GUI_SetOrg+0x24>)
 80051b0:	b510      	push	{r4, lr}
 80051b2:	8008      	strh	r0, [r1, #0]
 80051b4:	4907      	ldr	r1, [pc, #28]	; (80051d4 <GUI_SetOrg+0x28>)
 80051b6:	800a      	strh	r2, [r1, #0]
 80051b8:	4907      	ldr	r1, [pc, #28]	; (80051d8 <GUI_SetOrg+0x2c>)
 80051ba:	6809      	ldr	r1, [r1, #0]
 80051bc:	4603      	mov	r3, r0
 80051be:	7c48      	ldrb	r0, [r1, #17]
 80051c0:	4906      	ldr	r1, [pc, #24]	; (80051dc <GUI_SetOrg+0x30>)
 80051c2:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 80051c6:	68c1      	ldr	r1, [r0, #12]
 80051c8:	6a0c      	ldr	r4, [r1, #32]
 80051ca:	4619      	mov	r1, r3
 80051cc:	47a0      	blx	r4
 80051ce:	bd10      	pop	{r4, pc}
 80051d0:	20008134 	.word	0x20008134
 80051d4:	20008128 	.word	0x20008128
 80051d8:	2000000c 	.word	0x2000000c
 80051dc:	2000814c 	.word	0x2000814c

080051e0 <GUI_SetBkColor>:
 80051e0:	f7ff bf72 	b.w	80050c8 <LCD_SetBkColor>

080051e4 <GUI_SelectLayer>:
 80051e4:	b570      	push	{r4, r5, r6, lr}
 80051e6:	4d08      	ldr	r5, [pc, #32]	; (8005208 <GUI_SelectLayer+0x24>)
 80051e8:	682b      	ldr	r3, [r5, #0]
 80051ea:	2801      	cmp	r0, #1
 80051ec:	4604      	mov	r4, r0
 80051ee:	7c5e      	ldrb	r6, [r3, #17]
 80051f0:	d808      	bhi.n	8005204 <GUI_SelectLayer+0x20>
 80051f2:	f7fd f967 	bl	80024c4 <GUI_DEVICE__GetpDriver>
 80051f6:	b128      	cbz	r0, 8005204 <GUI_SelectLayer+0x20>
 80051f8:	682b      	ldr	r3, [r5, #0]
 80051fa:	745c      	strb	r4, [r3, #17]
 80051fc:	f000 f808 	bl	8005210 <GUI_SelectLCD>
 8005200:	4b02      	ldr	r3, [pc, #8]	; (800520c <GUI_SelectLayer+0x28>)
 8005202:	601c      	str	r4, [r3, #0]
 8005204:	4630      	mov	r0, r6
 8005206:	bd70      	pop	{r4, r5, r6, pc}
 8005208:	2000000c 	.word	0x2000000c
 800520c:	20008244 	.word	0x20008244

08005210 <GUI_SelectLCD>:
 8005210:	b508      	push	{r3, lr}
 8005212:	f000 fd7f 	bl	8005d14 <LCD_SelectLCD>
 8005216:	f7ff fac5 	bl	80047a4 <LCD_UpdateColorIndices>
 800521a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800521e:	f7fe bcad 	b.w	8003b7c <WM_Activate>

08005222 <GUI_RectsIntersect>:
 8005222:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8005226:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800522a:	429a      	cmp	r2, r3
 800522c:	dc14      	bgt.n	8005258 <GUI_RectsIntersect+0x36>
 800522e:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 8005232:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8005236:	429a      	cmp	r2, r3
 8005238:	dc0e      	bgt.n	8005258 <GUI_RectsIntersect+0x36>
 800523a:	f9b0 2000 	ldrsh.w	r2, [r0]
 800523e:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8005242:	429a      	cmp	r2, r3
 8005244:	dc08      	bgt.n	8005258 <GUI_RectsIntersect+0x36>
 8005246:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800524a:	f9b1 2000 	ldrsh.w	r2, [r1]
 800524e:	429a      	cmp	r2, r3
 8005250:	bfcc      	ite	gt
 8005252:	2000      	movgt	r0, #0
 8005254:	2001      	movle	r0, #1
 8005256:	4770      	bx	lr
 8005258:	2000      	movs	r0, #0
 800525a:	4770      	bx	lr

0800525c <GUI_StoreKey>:
 800525c:	4b02      	ldr	r3, [pc, #8]	; (8005268 <GUI_StoreKey+0xc>)
 800525e:	681a      	ldr	r2, [r3, #0]
 8005260:	b902      	cbnz	r2, 8005264 <GUI_StoreKey+0x8>
 8005262:	6018      	str	r0, [r3, #0]
 8005264:	f7ff bf90 	b.w	8005188 <GUI_SignalEvent>
 8005268:	20008110 	.word	0x20008110

0800526c <GUI_MoveRect>:
 800526c:	b168      	cbz	r0, 800528a <GUI_MoveRect+0x1e>
 800526e:	8803      	ldrh	r3, [r0, #0]
 8005270:	b289      	uxth	r1, r1
 8005272:	440b      	add	r3, r1
 8005274:	8003      	strh	r3, [r0, #0]
 8005276:	8883      	ldrh	r3, [r0, #4]
 8005278:	4419      	add	r1, r3
 800527a:	8843      	ldrh	r3, [r0, #2]
 800527c:	8081      	strh	r1, [r0, #4]
 800527e:	b292      	uxth	r2, r2
 8005280:	4413      	add	r3, r2
 8005282:	8043      	strh	r3, [r0, #2]
 8005284:	88c3      	ldrh	r3, [r0, #6]
 8005286:	441a      	add	r2, r3
 8005288:	80c2      	strh	r2, [r0, #6]
 800528a:	4770      	bx	lr

0800528c <GUI_MergeRect>:
 800528c:	b510      	push	{r4, lr}
 800528e:	b338      	cbz	r0, 80052e0 <GUI_MergeRect+0x54>
 8005290:	b309      	cbz	r1, 80052d6 <GUI_MergeRect+0x4a>
 8005292:	b30a      	cbz	r2, 80052d8 <GUI_MergeRect+0x4c>
 8005294:	f9b1 4000 	ldrsh.w	r4, [r1]
 8005298:	f9b2 3000 	ldrsh.w	r3, [r2]
 800529c:	429c      	cmp	r4, r3
 800529e:	bfb8      	it	lt
 80052a0:	4623      	movlt	r3, r4
 80052a2:	8003      	strh	r3, [r0, #0]
 80052a4:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80052a8:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80052ac:	429c      	cmp	r4, r3
 80052ae:	bfb8      	it	lt
 80052b0:	4623      	movlt	r3, r4
 80052b2:	8043      	strh	r3, [r0, #2]
 80052b4:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 80052b8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80052bc:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 80052c0:	429c      	cmp	r4, r3
 80052c2:	bfa8      	it	ge
 80052c4:	4623      	movge	r3, r4
 80052c6:	8083      	strh	r3, [r0, #4]
 80052c8:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 80052cc:	4299      	cmp	r1, r3
 80052ce:	bfa8      	it	ge
 80052d0:	460b      	movge	r3, r1
 80052d2:	80c3      	strh	r3, [r0, #6]
 80052d4:	bd10      	pop	{r4, pc}
 80052d6:	4611      	mov	r1, r2
 80052d8:	680b      	ldr	r3, [r1, #0]
 80052da:	6003      	str	r3, [r0, #0]
 80052dc:	684b      	ldr	r3, [r1, #4]
 80052de:	6043      	str	r3, [r0, #4]
 80052e0:	bd10      	pop	{r4, pc}
	...

080052e4 <GUI_GotoXY>:
 80052e4:	4b02      	ldr	r3, [pc, #8]	; (80052f0 <GUI_GotoXY+0xc>)
 80052e6:	681b      	ldr	r3, [r3, #0]
 80052e8:	8458      	strh	r0, [r3, #34]	; 0x22
 80052ea:	8499      	strh	r1, [r3, #36]	; 0x24
 80052ec:	2000      	movs	r0, #0
 80052ee:	4770      	bx	lr
 80052f0:	2000000c 	.word	0x2000000c

080052f4 <GUI_ALLOC_AllocZero>:
 80052f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80052f6:	4605      	mov	r5, r0
 80052f8:	f7fd fe82 	bl	8003000 <GUI_ALLOC_AllocNoInit>
 80052fc:	4606      	mov	r6, r0
 80052fe:	b158      	cbz	r0, 8005318 <GUI_ALLOC_AllocZero+0x24>
 8005300:	f7fd fc6a 	bl	8002bd8 <GUI_ALLOC_LockH>
 8005304:	ac02      	add	r4, sp, #8
 8005306:	2100      	movs	r1, #0
 8005308:	f844 0d04 	str.w	r0, [r4, #-4]!
 800530c:	462a      	mov	r2, r5
 800530e:	f7fd f8af 	bl	8002470 <GUI__memset>
 8005312:	4620      	mov	r0, r4
 8005314:	f7fd fc6e 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8005318:	4630      	mov	r0, r6
 800531a:	b002      	add	sp, #8
 800531c:	bd70      	pop	{r4, r5, r6, pc}

0800531e <_GetIndexMask_0>:
 800531e:	b508      	push	{r3, lr}
 8005320:	f7ff fa90 	bl	8004844 <LCD_GetNumColors>
 8005324:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8005328:	d010      	beq.n	800534c <_GetIndexMask_0+0x2e>
 800532a:	287f      	cmp	r0, #127	; 0x7f
 800532c:	d810      	bhi.n	8005350 <_GetIndexMask_0+0x32>
 800532e:	283f      	cmp	r0, #63	; 0x3f
 8005330:	d810      	bhi.n	8005354 <_GetIndexMask_0+0x36>
 8005332:	281f      	cmp	r0, #31
 8005334:	d810      	bhi.n	8005358 <_GetIndexMask_0+0x3a>
 8005336:	280f      	cmp	r0, #15
 8005338:	d810      	bhi.n	800535c <_GetIndexMask_0+0x3e>
 800533a:	2807      	cmp	r0, #7
 800533c:	d810      	bhi.n	8005360 <_GetIndexMask_0+0x42>
 800533e:	2803      	cmp	r0, #3
 8005340:	d810      	bhi.n	8005364 <_GetIndexMask_0+0x46>
 8005342:	2801      	cmp	r0, #1
 8005344:	bf94      	ite	ls
 8005346:	2000      	movls	r0, #0
 8005348:	2001      	movhi	r0, #1
 800534a:	e00c      	b.n	8005366 <_GetIndexMask_0+0x48>
 800534c:	2008      	movs	r0, #8
 800534e:	e00a      	b.n	8005366 <_GetIndexMask_0+0x48>
 8005350:	2007      	movs	r0, #7
 8005352:	e008      	b.n	8005366 <_GetIndexMask_0+0x48>
 8005354:	2006      	movs	r0, #6
 8005356:	e006      	b.n	8005366 <_GetIndexMask_0+0x48>
 8005358:	2005      	movs	r0, #5
 800535a:	e004      	b.n	8005366 <_GetIndexMask_0+0x48>
 800535c:	2004      	movs	r0, #4
 800535e:	e002      	b.n	8005366 <_GetIndexMask_0+0x48>
 8005360:	2003      	movs	r0, #3
 8005362:	e000      	b.n	8005366 <_GetIndexMask_0+0x48>
 8005364:	2002      	movs	r0, #2
 8005366:	2301      	movs	r3, #1
 8005368:	fa03 f000 	lsl.w	r0, r3, r0
 800536c:	3801      	subs	r0, #1
 800536e:	bd08      	pop	{r3, pc}

08005370 <_Index2Color_0>:
 8005370:	b538      	push	{r3, r4, r5, lr}
 8005372:	4604      	mov	r4, r0
 8005374:	f7ff fa66 	bl	8004844 <LCD_GetNumColors>
 8005378:	4605      	mov	r5, r0
 800537a:	f7ff fa81 	bl	8004880 <LCD_GetPalette>
 800537e:	42ac      	cmp	r4, r5
 8005380:	d203      	bcs.n	800538a <_Index2Color_0+0x1a>
 8005382:	b118      	cbz	r0, 800538c <_Index2Color_0+0x1c>
 8005384:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8005388:	bd38      	pop	{r3, r4, r5, pc}
 800538a:	2000      	movs	r0, #0
 800538c:	bd38      	pop	{r3, r4, r5, pc}

0800538e <_Color2Index_0>:
 800538e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005392:	4681      	mov	r9, r0
 8005394:	f7ff fa56 	bl	8004844 <LCD_GetNumColors>
 8005398:	4680      	mov	r8, r0
 800539a:	f7ff fa71 	bl	8004880 <LCD_GetPalette>
 800539e:	4606      	mov	r6, r0
 80053a0:	b1d8      	cbz	r0, 80053da <_Color2Index_0+0x4c>
 80053a2:	2300      	movs	r3, #0
 80053a4:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
 80053a8:	4591      	cmp	r9, r2
 80053aa:	d01a      	beq.n	80053e2 <_Color2Index_0+0x54>
 80053ac:	3301      	adds	r3, #1
 80053ae:	4543      	cmp	r3, r8
 80053b0:	dbf8      	blt.n	80053a4 <_Color2Index_0+0x16>
 80053b2:	2500      	movs	r5, #0
 80053b4:	f06f 477f 	mvn.w	r7, #4278190080	; 0xff000000
 80053b8:	462c      	mov	r4, r5
 80053ba:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
 80053be:	4648      	mov	r0, r9
 80053c0:	f000 fd8d 	bl	8005ede <GUI_CalcColorDist>
 80053c4:	42b8      	cmp	r0, r7
 80053c6:	bf38      	it	cc
 80053c8:	4625      	movcc	r5, r4
 80053ca:	f104 0401 	add.w	r4, r4, #1
 80053ce:	bf28      	it	cs
 80053d0:	4638      	movcs	r0, r7
 80053d2:	4544      	cmp	r4, r8
 80053d4:	da02      	bge.n	80053dc <_Color2Index_0+0x4e>
 80053d6:	4607      	mov	r7, r0
 80053d8:	e7ef      	b.n	80053ba <_Color2Index_0+0x2c>
 80053da:	4605      	mov	r5, r0
 80053dc:	4628      	mov	r0, r5
 80053de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80053e2:	4618      	mov	r0, r3
 80053e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080053e8 <WM__SendMessage>:
 80053e8:	b570      	push	{r4, r5, r6, lr}
 80053ea:	4c0d      	ldr	r4, [pc, #52]	; (8005420 <WM__SendMessage+0x38>)
 80053ec:	6823      	ldr	r3, [r4, #0]
 80053ee:	2b13      	cmp	r3, #19
 80053f0:	4606      	mov	r6, r0
 80053f2:	460d      	mov	r5, r1
 80053f4:	dc12      	bgt.n	800541c <WM__SendMessage+0x34>
 80053f6:	f7fd fbe5 	bl	8002bc4 <GUI_ALLOC_h2p>
 80053fa:	6903      	ldr	r3, [r0, #16]
 80053fc:	606e      	str	r6, [r5, #4]
 80053fe:	b143      	cbz	r3, 8005412 <WM__SendMessage+0x2a>
 8005400:	6822      	ldr	r2, [r4, #0]
 8005402:	4628      	mov	r0, r5
 8005404:	3201      	adds	r2, #1
 8005406:	6022      	str	r2, [r4, #0]
 8005408:	4798      	blx	r3
 800540a:	6823      	ldr	r3, [r4, #0]
 800540c:	3b01      	subs	r3, #1
 800540e:	6023      	str	r3, [r4, #0]
 8005410:	bd70      	pop	{r4, r5, r6, pc}
 8005412:	4628      	mov	r0, r5
 8005414:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005418:	f7fe bbb8 	b.w	8003b8c <WM_DefaultProc>
 800541c:	bd70      	pop	{r4, r5, r6, pc}
 800541e:	bf00      	nop
 8005420:	20008114 	.word	0x20008114

08005424 <WM_SendToParent>:
 8005424:	b538      	push	{r3, r4, r5, lr}
 8005426:	4605      	mov	r5, r0
 8005428:	460c      	mov	r4, r1
 800542a:	b141      	cbz	r1, 800543e <WM_SendToParent+0x1a>
 800542c:	f000 f808 	bl	8005440 <WM_GetParent>
 8005430:	b128      	cbz	r0, 800543e <WM_SendToParent+0x1a>
 8005432:	60a5      	str	r5, [r4, #8]
 8005434:	4621      	mov	r1, r4
 8005436:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800543a:	f7ff bfd5 	b.w	80053e8 <WM__SendMessage>
 800543e:	bd38      	pop	{r3, r4, r5, pc}

08005440 <WM_GetParent>:
 8005440:	b508      	push	{r3, lr}
 8005442:	4603      	mov	r3, r0
 8005444:	b110      	cbz	r0, 800544c <WM_GetParent+0xc>
 8005446:	f7fd fbbd 	bl	8002bc4 <GUI_ALLOC_h2p>
 800544a:	6983      	ldr	r3, [r0, #24]
 800544c:	4618      	mov	r0, r3
 800544e:	bd08      	pop	{r3, pc}

08005450 <WM_GetFirstChild>:
 8005450:	b508      	push	{r3, lr}
 8005452:	4603      	mov	r3, r0
 8005454:	b110      	cbz	r0, 800545c <WM_GetFirstChild+0xc>
 8005456:	f7fd fbb5 	bl	8002bc4 <GUI_ALLOC_h2p>
 800545a:	69c3      	ldr	r3, [r0, #28]
 800545c:	4618      	mov	r0, r3
 800545e:	bd08      	pop	{r3, pc}

08005460 <WM__GetClientRectEx>:
 8005460:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005462:	460d      	mov	r5, r1
 8005464:	b158      	cbz	r0, 800547e <WM__GetClientRectEx+0x1e>
 8005466:	b151      	cbz	r1, 800547e <WM__GetClientRectEx+0x1e>
 8005468:	f7fd fbb6 	bl	8002bd8 <GUI_ALLOC_LockH>
 800546c:	ac02      	add	r4, sp, #8
 800546e:	4629      	mov	r1, r5
 8005470:	f844 0d04 	str.w	r0, [r4, #-4]!
 8005474:	f7fe f90f 	bl	8003696 <WM__GetClientRectWin>
 8005478:	4620      	mov	r0, r4
 800547a:	f7fd fbbb 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 800547e:	b003      	add	sp, #12
 8005480:	bd30      	pop	{r4, r5, pc}
	...

08005484 <WM__AddCriticalHandle>:
 8005484:	4b02      	ldr	r3, [pc, #8]	; (8005490 <WM__AddCriticalHandle+0xc>)
 8005486:	681a      	ldr	r2, [r3, #0]
 8005488:	6002      	str	r2, [r0, #0]
 800548a:	6018      	str	r0, [r3, #0]
 800548c:	4770      	bx	lr
 800548e:	bf00      	nop
 8005490:	20008258 	.word	0x20008258

08005494 <WM_BringToBottom>:
 8005494:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005498:	4604      	mov	r4, r0
 800549a:	b087      	sub	sp, #28
 800549c:	2800      	cmp	r0, #0
 800549e:	d039      	beq.n	8005514 <WM_BringToBottom+0x80>
 80054a0:	f7fd fb9a 	bl	8002bd8 <GUI_ALLOC_LockH>
 80054a4:	4603      	mov	r3, r0
 80054a6:	9001      	str	r0, [sp, #4]
 80054a8:	c803      	ldmia	r0, {r0, r1}
 80054aa:	ad04      	add	r5, sp, #16
 80054ac:	e885 0003 	stmia.w	r5, {r0, r1}
 80054b0:	a801      	add	r0, sp, #4
 80054b2:	6a1e      	ldr	r6, [r3, #32]
 80054b4:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 80054b8:	f7fd fb9c 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80054bc:	4620      	mov	r0, r4
 80054be:	f000 fd36 	bl	8005f2e <WM__GetPrevSibling>
 80054c2:	4607      	mov	r7, r0
 80054c4:	b330      	cbz	r0, 8005514 <WM_BringToBottom+0x80>
 80054c6:	4620      	mov	r0, r4
 80054c8:	f7ff ffba 	bl	8005440 <WM_GetParent>
 80054cc:	f019 0f02 	tst.w	r9, #2
 80054d0:	4680      	mov	r8, r0
 80054d2:	d004      	beq.n	80054de <WM_BringToBottom+0x4a>
 80054d4:	4628      	mov	r0, r5
 80054d6:	4641      	mov	r1, r8
 80054d8:	4632      	mov	r2, r6
 80054da:	f7fe f8ce 	bl	800367a <WM__InvalidateRectEx>
 80054de:	4620      	mov	r0, r4
 80054e0:	f7fd fb7a 	bl	8002bd8 <GUI_ALLOC_LockH>
 80054e4:	9001      	str	r0, [sp, #4]
 80054e6:	4640      	mov	r0, r8
 80054e8:	f7fd fb76 	bl	8002bd8 <GUI_ALLOC_LockH>
 80054ec:	9003      	str	r0, [sp, #12]
 80054ee:	4638      	mov	r0, r7
 80054f0:	f7fd fb72 	bl	8002bd8 <GUI_ALLOC_LockH>
 80054f4:	9b03      	ldr	r3, [sp, #12]
 80054f6:	9a01      	ldr	r2, [sp, #4]
 80054f8:	69d9      	ldr	r1, [r3, #28]
 80054fa:	6206      	str	r6, [r0, #32]
 80054fc:	9002      	str	r0, [sp, #8]
 80054fe:	6211      	str	r1, [r2, #32]
 8005500:	a801      	add	r0, sp, #4
 8005502:	61dc      	str	r4, [r3, #28]
 8005504:	f7fd fb76 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8005508:	a803      	add	r0, sp, #12
 800550a:	f7fd fb73 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 800550e:	a802      	add	r0, sp, #8
 8005510:	f7fd fb70 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8005514:	b007      	add	sp, #28
 8005516:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800551a <_Convert16>:
 800551a:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800551e:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8005522:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 8005526:	4605      	mov	r5, r0
 8005528:	460e      	mov	r6, r1
 800552a:	4690      	mov	r8, r2
 800552c:	461f      	mov	r7, r3
 800552e:	4614      	mov	r4, r2
 8005530:	4689      	mov	r9, r1
 8005532:	f835 0b02 	ldrh.w	r0, [r5], #2
 8005536:	47d8      	blx	fp
 8005538:	47d0      	blx	sl
 800553a:	3c01      	subs	r4, #1
 800553c:	f849 0b04 	str.w	r0, [r9], #4
 8005540:	d1f7      	bne.n	8005532 <_Convert16+0x18>
 8005542:	2f1f      	cmp	r7, #31
 8005544:	d806      	bhi.n	8005554 <_Convert16+0x3a>
 8005546:	4630      	mov	r0, r6
 8005548:	4641      	mov	r1, r8
 800554a:	463a      	mov	r2, r7
 800554c:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005550:	f000 bc0f 	b.w	8005d72 <GUI__CompactPixelIndices>
 8005554:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005558 <_Convert8>:
 8005558:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800555c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8005560:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 8005564:	4605      	mov	r5, r0
 8005566:	460e      	mov	r6, r1
 8005568:	4690      	mov	r8, r2
 800556a:	461f      	mov	r7, r3
 800556c:	4689      	mov	r9, r1
 800556e:	4604      	mov	r4, r0
 8005570:	f814 0b01 	ldrb.w	r0, [r4], #1
 8005574:	47d8      	blx	fp
 8005576:	47d0      	blx	sl
 8005578:	1b2b      	subs	r3, r5, r4
 800557a:	4443      	add	r3, r8
 800557c:	f849 0b04 	str.w	r0, [r9], #4
 8005580:	2b00      	cmp	r3, #0
 8005582:	d1f5      	bne.n	8005570 <_Convert8+0x18>
 8005584:	2f1f      	cmp	r7, #31
 8005586:	d806      	bhi.n	8005596 <_Convert8+0x3e>
 8005588:	4630      	mov	r0, r6
 800558a:	4641      	mov	r1, r8
 800558c:	463a      	mov	r2, r7
 800558e:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005592:	f000 bbee 	b.w	8005d72 <GUI__CompactPixelIndices>
 8005596:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800559c <GUI_MEMDEV__WriteToActiveOpaque>:
 800559c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80055a0:	b09d      	sub	sp, #116	; 0x74
 80055a2:	4606      	mov	r6, r0
 80055a4:	910f      	str	r1, [sp, #60]	; 0x3c
 80055a6:	920d      	str	r2, [sp, #52]	; 0x34
 80055a8:	2800      	cmp	r0, #0
 80055aa:	f000 8386 	beq.w	8005cba <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 80055ae:	f7fd fb13 	bl	8002bd8 <GUI_ALLOC_LockH>
 80055b2:	ab1c      	add	r3, sp, #112	; 0x70
 80055b4:	6944      	ldr	r4, [r0, #20]
 80055b6:	f843 0d1c 	str.w	r0, [r3, #-28]!
 80055ba:	4618      	mov	r0, r3
 80055bc:	f7fd fb1a 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80055c0:	4630      	mov	r0, r6
 80055c2:	f7ff f8b7 	bl	8004734 <GUI_MEMDEV_GetBitsPerPixel>
 80055c6:	2808      	cmp	r0, #8
 80055c8:	4601      	mov	r1, r0
 80055ca:	dd02      	ble.n	80055d2 <GUI_MEMDEV__WriteToActiveOpaque+0x36>
 80055cc:	2c00      	cmp	r4, #0
 80055ce:	f000 81c3 	beq.w	8005958 <GUI_MEMDEV__WriteToActiveOpaque+0x3bc>
 80055d2:	2201      	movs	r2, #1
 80055d4:	f04f 0800 	mov.w	r8, #0
 80055d8:	4630      	mov	r0, r6
 80055da:	921b      	str	r2, [sp, #108]	; 0x6c
 80055dc:	920b      	str	r2, [sp, #44]	; 0x2c
 80055de:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 80055e2:	f7fd faf9 	bl	8002bd8 <GUI_ALLOC_LockH>
 80055e6:	6803      	ldr	r3, [r0, #0]
 80055e8:	f8df a60c 	ldr.w	sl, [pc, #1548]	; 8005bf8 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 80055ec:	691b      	ldr	r3, [r3, #16]
 80055ee:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 80055f2:	685b      	ldr	r3, [r3, #4]
 80055f4:	930e      	str	r3, [sp, #56]	; 0x38
 80055f6:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 80055fa:	f8da 3000 	ldr.w	r3, [sl]
 80055fe:	f84b 0d14 	str.w	r0, [fp, #-20]!
 8005602:	6904      	ldr	r4, [r0, #16]
 8005604:	6945      	ldr	r5, [r0, #20]
 8005606:	f8d0 900c 	ldr.w	r9, [r0, #12]
 800560a:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 800560e:	7c58      	ldrb	r0, [r3, #17]
 8005610:	9112      	str	r1, [sp, #72]	; 0x48
 8005612:	f7ff f91f 	bl	8004854 <GUI_GetBitsPerPixelEx>
 8005616:	f8da 3000 	ldr.w	r3, [sl]
 800561a:	9010      	str	r0, [sp, #64]	; 0x40
 800561c:	7c58      	ldrb	r0, [r3, #17]
 800561e:	f7ff f937 	bl	8004890 <GUI_GetpfIndex2ColorEx>
 8005622:	4603      	mov	r3, r0
 8005624:	4658      	mov	r0, fp
 8005626:	9309      	str	r3, [sp, #36]	; 0x24
 8005628:	f7fd fae4 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 800562c:	2c08      	cmp	r4, #8
 800562e:	4651      	mov	r1, sl
 8005630:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005632:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005634:	d904      	bls.n	8005640 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 8005636:	2c10      	cmp	r4, #16
 8005638:	bf8c      	ite	hi
 800563a:	2204      	movhi	r2, #4
 800563c:	2202      	movls	r2, #2
 800563e:	e005      	b.n	800564c <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 8005640:	2c01      	cmp	r4, #1
 8005642:	d103      	bne.n	800564c <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 8005644:	9411      	str	r4, [sp, #68]	; 0x44
 8005646:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 800564a:	e000      	b.n	800564e <GUI_MEMDEV__WriteToActiveOpaque+0xb2>
 800564c:	9211      	str	r2, [sp, #68]	; 0x44
 800564e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005650:	4298      	cmp	r0, r3
 8005652:	f000 80e2 	beq.w	800581a <GUI_MEMDEV__WriteToActiveOpaque+0x27e>
 8005656:	680b      	ldr	r3, [r1, #0]
 8005658:	7c58      	ldrb	r0, [r3, #17]
 800565a:	f7ff f921 	bl	80048a0 <GUI_GetpfColor2IndexEx>
 800565e:	9013      	str	r0, [sp, #76]	; 0x4c
 8005660:	00b8      	lsls	r0, r7, #2
 8005662:	f7fd fccd 	bl	8003000 <GUI_ALLOC_AllocNoInit>
 8005666:	900c      	str	r0, [sp, #48]	; 0x30
 8005668:	2800      	cmp	r0, #0
 800566a:	f000 8326 	beq.w	8005cba <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800566e:	4630      	mov	r0, r6
 8005670:	f7fe fb5e 	bl	8003d30 <GUI_MEMDEV_GetDataPtr>
 8005674:	4606      	mov	r6, r0
 8005676:	2d00      	cmp	r5, #0
 8005678:	f000 80be 	beq.w	80057f8 <GUI_MEMDEV__WriteToActiveOpaque+0x25c>
 800567c:	4628      	mov	r0, r5
 800567e:	f7fd faab 	bl	8002bd8 <GUI_ALLOC_LockH>
 8005682:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 8005686:	9018      	str	r0, [sp, #96]	; 0x60
 8005688:	f04f 0a00 	mov.w	sl, #0
 800568c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800568e:	4592      	cmp	sl, r2
 8005690:	f280 80ae 	bge.w	80057f0 <GUI_MEMDEV__WriteToActiveOpaque+0x254>
 8005694:	9818      	ldr	r0, [sp, #96]	; 0x60
 8005696:	2300      	movs	r3, #0
 8005698:	9319      	str	r3, [sp, #100]	; 0x64
 800569a:	6883      	ldr	r3, [r0, #8]
 800569c:	a919      	add	r1, sp, #100	; 0x64
 800569e:	695b      	ldr	r3, [r3, #20]
 80056a0:	4652      	mov	r2, sl
 80056a2:	4798      	blx	r3
 80056a4:	42b8      	cmp	r0, r7
 80056a6:	4605      	mov	r5, r0
 80056a8:	d12f      	bne.n	800570a <GUI_MEMDEV__WriteToActiveOpaque+0x16e>
 80056aa:	980c      	ldr	r0, [sp, #48]	; 0x30
 80056ac:	f7fd fa94 	bl	8002bd8 <GUI_ALLOC_LockH>
 80056b0:	2c08      	cmp	r4, #8
 80056b2:	4601      	mov	r1, r0
 80056b4:	9016      	str	r0, [sp, #88]	; 0x58
 80056b6:	d909      	bls.n	80056cc <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 80056b8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80056ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80056bc:	9200      	str	r2, [sp, #0]
 80056be:	9301      	str	r3, [sp, #4]
 80056c0:	4630      	mov	r0, r6
 80056c2:	463a      	mov	r2, r7
 80056c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80056c6:	f7ff ff28 	bl	800551a <_Convert16>
 80056ca:	e008      	b.n	80056de <GUI_MEMDEV__WriteToActiveOpaque+0x142>
 80056cc:	980e      	ldr	r0, [sp, #56]	; 0x38
 80056ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80056d0:	9000      	str	r0, [sp, #0]
 80056d2:	9201      	str	r2, [sp, #4]
 80056d4:	4630      	mov	r0, r6
 80056d6:	463a      	mov	r2, r7
 80056d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80056da:	f7ff ff3d 	bl	8005558 <_Convert8>
 80056de:	2301      	movs	r3, #1
 80056e0:	9810      	ldr	r0, [sp, #64]	; 0x40
 80056e2:	9002      	str	r0, [sp, #8]
 80056e4:	ad1c      	add	r5, sp, #112	; 0x70
 80056e6:	2200      	movs	r2, #0
 80056e8:	9300      	str	r3, [sp, #0]
 80056ea:	9301      	str	r3, [sp, #4]
 80056ec:	9203      	str	r2, [sp, #12]
 80056ee:	f855 2d18 	ldr.w	r2, [r5, #-24]!
 80056f2:	9204      	str	r2, [sp, #16]
 80056f4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80056f6:	f8cd 8014 	str.w	r8, [sp, #20]
 80056fa:	4659      	mov	r1, fp
 80056fc:	463a      	mov	r2, r7
 80056fe:	f7ff fb25 	bl	8004d4c <LCD_DrawBitmap>
 8005702:	4628      	mov	r0, r5
 8005704:	f7fd fa76 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8005708:	e060      	b.n	80057cc <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800570a:	2c01      	cmp	r4, #1
 800570c:	d15c      	bne.n	80057c8 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 800570e:	2d00      	cmp	r5, #0
 8005710:	d05c      	beq.n	80057cc <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 8005712:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005714:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005716:	f8cd 900c 	str.w	r9, [sp, #12]
 800571a:	2208      	movs	r2, #8
 800571c:	fb90 f2f2 	sdiv	r2, r0, r2
 8005720:	4432      	add	r2, r6
 8005722:	2301      	movs	r3, #1
 8005724:	9204      	str	r2, [sp, #16]
 8005726:	f000 0207 	and.w	r2, r0, #7
 800572a:	9300      	str	r3, [sp, #0]
 800572c:	4408      	add	r0, r1
 800572e:	9301      	str	r3, [sp, #4]
 8005730:	9302      	str	r3, [sp, #8]
 8005732:	9206      	str	r2, [sp, #24]
 8005734:	4659      	mov	r1, fp
 8005736:	462a      	mov	r2, r5
 8005738:	f8cd 8014 	str.w	r8, [sp, #20]
 800573c:	f7ff fa2a 	bl	8004b94 <LCD__DrawBitmap_1bpp>
 8005740:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005742:	9818      	ldr	r0, [sp, #96]	; 0x60
 8005744:	441d      	add	r5, r3
 8005746:	6883      	ldr	r3, [r0, #8]
 8005748:	9519      	str	r5, [sp, #100]	; 0x64
 800574a:	695b      	ldr	r3, [r3, #20]
 800574c:	a919      	add	r1, sp, #100	; 0x64
 800574e:	4652      	mov	r2, sl
 8005750:	4798      	blx	r3
 8005752:	4605      	mov	r5, r0
 8005754:	e7db      	b.n	800570e <GUI_MEMDEV__WriteToActiveOpaque+0x172>
 8005756:	980c      	ldr	r0, [sp, #48]	; 0x30
 8005758:	f7fd fa3e 	bl	8002bd8 <GUI_ALLOC_LockH>
 800575c:	2c08      	cmp	r4, #8
 800575e:	4601      	mov	r1, r0
 8005760:	9016      	str	r0, [sp, #88]	; 0x58
 8005762:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005764:	d938      	bls.n	80057d8 <GUI_MEMDEV__WriteToActiveOpaque+0x23c>
 8005766:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005768:	9200      	str	r2, [sp, #0]
 800576a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800576c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800576e:	9301      	str	r3, [sp, #4]
 8005770:	fb00 6002 	mla	r0, r0, r2, r6
 8005774:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005776:	462a      	mov	r2, r5
 8005778:	f7ff fecf 	bl	800551a <_Convert16>
 800577c:	2301      	movs	r3, #1
 800577e:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 8005782:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005784:	9300      	str	r3, [sp, #0]
 8005786:	2200      	movs	r2, #0
 8005788:	9301      	str	r3, [sp, #4]
 800578a:	9002      	str	r0, [sp, #8]
 800578c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800578e:	9203      	str	r2, [sp, #12]
 8005790:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005792:	f85c 2d18 	ldr.w	r2, [ip, #-24]!
 8005796:	9204      	str	r2, [sp, #16]
 8005798:	4408      	add	r0, r1
 800579a:	462a      	mov	r2, r5
 800579c:	4659      	mov	r1, fp
 800579e:	f8cd 8014 	str.w	r8, [sp, #20]
 80057a2:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 80057a6:	f7ff fad1 	bl	8004d4c <LCD_DrawBitmap>
 80057aa:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 80057ae:	4660      	mov	r0, ip
 80057b0:	f7fd fa20 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80057b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80057b6:	9818      	ldr	r0, [sp, #96]	; 0x60
 80057b8:	441d      	add	r5, r3
 80057ba:	6883      	ldr	r3, [r0, #8]
 80057bc:	9519      	str	r5, [sp, #100]	; 0x64
 80057be:	695b      	ldr	r3, [r3, #20]
 80057c0:	a919      	add	r1, sp, #100	; 0x64
 80057c2:	4652      	mov	r2, sl
 80057c4:	4798      	blx	r3
 80057c6:	4605      	mov	r5, r0
 80057c8:	2d00      	cmp	r5, #0
 80057ca:	d1c4      	bne.n	8005756 <GUI_MEMDEV__WriteToActiveOpaque+0x1ba>
 80057cc:	444e      	add	r6, r9
 80057ce:	f10a 0a01 	add.w	sl, sl, #1
 80057d2:	f10b 0b01 	add.w	fp, fp, #1
 80057d6:	e759      	b.n	800568c <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 80057d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80057da:	9300      	str	r3, [sp, #0]
 80057dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80057de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80057e0:	9201      	str	r2, [sp, #4]
 80057e2:	fb00 6003 	mla	r0, r0, r3, r6
 80057e6:	462a      	mov	r2, r5
 80057e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80057ea:	f7ff feb5 	bl	8005558 <_Convert8>
 80057ee:	e7c5      	b.n	800577c <GUI_MEMDEV__WriteToActiveOpaque+0x1e0>
 80057f0:	a818      	add	r0, sp, #96	; 0x60
 80057f2:	f7fd f9ff 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 80057f6:	e00e      	b.n	8005816 <GUI_MEMDEV__WriteToActiveOpaque+0x27a>
 80057f8:	2301      	movs	r3, #1
 80057fa:	9300      	str	r3, [sp, #0]
 80057fc:	9301      	str	r3, [sp, #4]
 80057fe:	9004      	str	r0, [sp, #16]
 8005800:	9402      	str	r4, [sp, #8]
 8005802:	f8cd 900c 	str.w	r9, [sp, #12]
 8005806:	f8cd 8014 	str.w	r8, [sp, #20]
 800580a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800580c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800580e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005810:	463a      	mov	r2, r7
 8005812:	f7ff fa9b 	bl	8004d4c <LCD_DrawBitmap>
 8005816:	980c      	ldr	r0, [sp, #48]	; 0x30
 8005818:	e24d      	b.n	8005cb6 <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800581a:	4630      	mov	r0, r6
 800581c:	f7fe fa88 	bl	8003d30 <GUI_MEMDEV_GetDataPtr>
 8005820:	4606      	mov	r6, r0
 8005822:	2d00      	cmp	r5, #0
 8005824:	f000 808a 	beq.w	800593c <GUI_MEMDEV__WriteToActiveOpaque+0x3a0>
 8005828:	4628      	mov	r0, r5
 800582a:	f7fd f9d5 	bl	8002bd8 <GUI_ALLOC_LockH>
 800582e:	2500      	movs	r5, #0
 8005830:	9018      	str	r0, [sp, #96]	; 0x60
 8005832:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005834:	429d      	cmp	r5, r3
 8005836:	da7d      	bge.n	8005934 <GUI_MEMDEV__WriteToActiveOpaque+0x398>
 8005838:	9818      	ldr	r0, [sp, #96]	; 0x60
 800583a:	2300      	movs	r3, #0
 800583c:	9319      	str	r3, [sp, #100]	; 0x64
 800583e:	6883      	ldr	r3, [r0, #8]
 8005840:	a919      	add	r1, sp, #100	; 0x64
 8005842:	695b      	ldr	r3, [r3, #20]
 8005844:	462a      	mov	r2, r5
 8005846:	4798      	blx	r3
 8005848:	42b8      	cmp	r0, r7
 800584a:	4682      	mov	sl, r0
 800584c:	d124      	bne.n	8005898 <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 800584e:	46aa      	mov	sl, r5
 8005850:	9818      	ldr	r0, [sp, #96]	; 0x60
 8005852:	6883      	ldr	r3, [r0, #8]
 8005854:	f10a 0b01 	add.w	fp, sl, #1
 8005858:	695b      	ldr	r3, [r3, #20]
 800585a:	a919      	add	r1, sp, #100	; 0x64
 800585c:	465a      	mov	r2, fp
 800585e:	4798      	blx	r3
 8005860:	42b8      	cmp	r0, r7
 8005862:	d101      	bne.n	8005868 <GUI_MEMDEV__WriteToActiveOpaque+0x2cc>
 8005864:	46da      	mov	sl, fp
 8005866:	e7f3      	b.n	8005850 <GUI_MEMDEV__WriteToActiveOpaque+0x2b4>
 8005868:	ebc5 0b0a 	rsb	fp, r5, sl
 800586c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800586e:	9604      	str	r6, [sp, #16]
 8005870:	2301      	movs	r3, #1
 8005872:	f10b 0b01 	add.w	fp, fp, #1
 8005876:	9300      	str	r3, [sp, #0]
 8005878:	9301      	str	r3, [sp, #4]
 800587a:	4429      	add	r1, r5
 800587c:	9402      	str	r4, [sp, #8]
 800587e:	f8cd 900c 	str.w	r9, [sp, #12]
 8005882:	f8cd 8014 	str.w	r8, [sp, #20]
 8005886:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8005888:	463a      	mov	r2, r7
 800588a:	465b      	mov	r3, fp
 800588c:	f7ff fa5e 	bl	8004d4c <LCD_DrawBitmap>
 8005890:	fb09 660b 	mla	r6, r9, fp, r6
 8005894:	4655      	mov	r5, sl
 8005896:	e04b      	b.n	8005930 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 8005898:	2c01      	cmp	r4, #1
 800589a:	d127      	bne.n	80058ec <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800589c:	f1ba 0f00 	cmp.w	sl, #0
 80058a0:	d022      	beq.n	80058e8 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 80058a2:	9819      	ldr	r0, [sp, #100]	; 0x64
 80058a4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80058a6:	f8cd 900c 	str.w	r9, [sp, #12]
 80058aa:	2208      	movs	r2, #8
 80058ac:	fb90 f2f2 	sdiv	r2, r0, r2
 80058b0:	4432      	add	r2, r6
 80058b2:	9204      	str	r2, [sp, #16]
 80058b4:	f000 0207 	and.w	r2, r0, #7
 80058b8:	4408      	add	r0, r1
 80058ba:	990d      	ldr	r1, [sp, #52]	; 0x34
 80058bc:	9206      	str	r2, [sp, #24]
 80058be:	2301      	movs	r3, #1
 80058c0:	4652      	mov	r2, sl
 80058c2:	9300      	str	r3, [sp, #0]
 80058c4:	9301      	str	r3, [sp, #4]
 80058c6:	9302      	str	r3, [sp, #8]
 80058c8:	4429      	add	r1, r5
 80058ca:	f8cd 8014 	str.w	r8, [sp, #20]
 80058ce:	f7ff f961 	bl	8004b94 <LCD__DrawBitmap_1bpp>
 80058d2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80058d4:	9818      	ldr	r0, [sp, #96]	; 0x60
 80058d6:	4453      	add	r3, sl
 80058d8:	9319      	str	r3, [sp, #100]	; 0x64
 80058da:	6883      	ldr	r3, [r0, #8]
 80058dc:	a919      	add	r1, sp, #100	; 0x64
 80058de:	695b      	ldr	r3, [r3, #20]
 80058e0:	462a      	mov	r2, r5
 80058e2:	4798      	blx	r3
 80058e4:	4682      	mov	sl, r0
 80058e6:	e7d9      	b.n	800589c <GUI_MEMDEV__WriteToActiveOpaque+0x300>
 80058e8:	444e      	add	r6, r9
 80058ea:	e021      	b.n	8005930 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 80058ec:	f1ba 0f00 	cmp.w	sl, #0
 80058f0:	d0fa      	beq.n	80058e8 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 80058f2:	9819      	ldr	r0, [sp, #100]	; 0x64
 80058f4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80058f6:	9402      	str	r4, [sp, #8]
 80058f8:	fb00 6201 	mla	r2, r0, r1, r6
 80058fc:	9204      	str	r2, [sp, #16]
 80058fe:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005900:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005902:	f8cd 900c 	str.w	r9, [sp, #12]
 8005906:	2301      	movs	r3, #1
 8005908:	4410      	add	r0, r2
 800590a:	9300      	str	r3, [sp, #0]
 800590c:	4652      	mov	r2, sl
 800590e:	9301      	str	r3, [sp, #4]
 8005910:	4429      	add	r1, r5
 8005912:	f8cd 8014 	str.w	r8, [sp, #20]
 8005916:	f7ff fa19 	bl	8004d4c <LCD_DrawBitmap>
 800591a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800591c:	9818      	ldr	r0, [sp, #96]	; 0x60
 800591e:	4453      	add	r3, sl
 8005920:	9319      	str	r3, [sp, #100]	; 0x64
 8005922:	6883      	ldr	r3, [r0, #8]
 8005924:	a919      	add	r1, sp, #100	; 0x64
 8005926:	695b      	ldr	r3, [r3, #20]
 8005928:	462a      	mov	r2, r5
 800592a:	4798      	blx	r3
 800592c:	4682      	mov	sl, r0
 800592e:	e7dd      	b.n	80058ec <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 8005930:	3501      	adds	r5, #1
 8005932:	e77e      	b.n	8005832 <GUI_MEMDEV__WriteToActiveOpaque+0x296>
 8005934:	a818      	add	r0, sp, #96	; 0x60
 8005936:	f7fd f95d 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 800593a:	e1be      	b.n	8005cba <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800593c:	2301      	movs	r3, #1
 800593e:	9300      	str	r3, [sp, #0]
 8005940:	9301      	str	r3, [sp, #4]
 8005942:	9004      	str	r0, [sp, #16]
 8005944:	9402      	str	r4, [sp, #8]
 8005946:	f8cd 900c 	str.w	r9, [sp, #12]
 800594a:	f8cd 8014 	str.w	r8, [sp, #20]
 800594e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8005950:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005952:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005954:	463a      	mov	r2, r7
 8005956:	e041      	b.n	80059dc <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 8005958:	4630      	mov	r0, r6
 800595a:	910a      	str	r1, [sp, #40]	; 0x28
 800595c:	f7fd f93c 	bl	8002bd8 <GUI_ALLOC_LockH>
 8005960:	4682      	mov	sl, r0
 8005962:	a81c      	add	r0, sp, #112	; 0x70
 8005964:	f8ba 200a 	ldrh.w	r2, [sl, #10]
 8005968:	f840 ad10 	str.w	sl, [r0, #-16]!
 800596c:	f8da 4000 	ldr.w	r4, [sl]
 8005970:	9210      	str	r2, [sp, #64]	; 0x40
 8005972:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8005976:	f8ba 7008 	ldrh.w	r7, [sl, #8]
 800597a:	4c9e      	ldr	r4, [pc, #632]	; (8005bf4 <GUI_MEMDEV__WriteToActiveOpaque+0x658>)
 800597c:	b213      	sxth	r3, r2
 800597e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8005982:	920b      	str	r2, [sp, #44]	; 0x2c
 8005984:	9309      	str	r3, [sp, #36]	; 0x24
 8005986:	f7fd f935 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 800598a:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800598e:	900e      	str	r0, [sp, #56]	; 0x38
 8005990:	4899      	ldr	r0, [pc, #612]	; (8005bf8 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>)
 8005992:	6800      	ldr	r0, [r0, #0]
 8005994:	7c40      	ldrb	r0, [r0, #17]
 8005996:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 800599a:	6925      	ldr	r5, [r4, #16]
 800599c:	f8d5 8000 	ldr.w	r8, [r5]
 80059a0:	f7fe ff58 	bl	8004854 <GUI_GetBitsPerPixelEx>
 80059a4:	2808      	cmp	r0, #8
 80059a6:	fa0f fb87 	sxth.w	fp, r7
 80059aa:	990a      	ldr	r1, [sp, #40]	; 0x28
 80059ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80059ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80059b0:	d904      	bls.n	80059bc <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 80059b2:	2810      	cmp	r0, #16
 80059b4:	bf8c      	ite	hi
 80059b6:	2404      	movhi	r4, #4
 80059b8:	2402      	movls	r4, #2
 80059ba:	e000      	b.n	80059be <GUI_MEMDEV__WriteToActiveOpaque+0x422>
 80059bc:	2401      	movs	r4, #1
 80059be:	45a9      	cmp	r9, r5
 80059c0:	d10f      	bne.n	80059e2 <GUI_MEMDEV__WriteToActiveOpaque+0x446>
 80059c2:	2001      	movs	r0, #1
 80059c4:	9203      	str	r2, [sp, #12]
 80059c6:	f10a 0218 	add.w	r2, sl, #24
 80059ca:	9000      	str	r0, [sp, #0]
 80059cc:	9001      	str	r0, [sp, #4]
 80059ce:	9102      	str	r1, [sp, #8]
 80059d0:	9204      	str	r2, [sp, #16]
 80059d2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80059d4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80059d6:	2200      	movs	r2, #0
 80059d8:	9205      	str	r2, [sp, #20]
 80059da:	465a      	mov	r2, fp
 80059dc:	f7ff f9b6 	bl	8004d4c <LCD_DrawBitmap>
 80059e0:	e16b      	b.n	8005cba <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 80059e2:	2920      	cmp	r1, #32
 80059e4:	f040 808e 	bne.w	8005b04 <GUI_MEMDEV__WriteToActiveOpaque+0x568>
 80059e8:	fb0b f004 	mul.w	r0, fp, r4
 80059ec:	f7fd fb08 	bl	8003000 <GUI_ALLOC_AllocNoInit>
 80059f0:	900e      	str	r0, [sp, #56]	; 0x38
 80059f2:	2800      	cmp	r0, #0
 80059f4:	f000 8161 	beq.w	8005cba <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 80059f8:	f7fd f8ee 	bl	8002bd8 <GUI_ALLOC_LockH>
 80059fc:	901a      	str	r0, [sp, #104]	; 0x68
 80059fe:	4630      	mov	r0, r6
 8005a00:	f7fd f8ea 	bl	8002bd8 <GUI_ALLOC_LockH>
 8005a04:	9018      	str	r0, [sp, #96]	; 0x60
 8005a06:	692b      	ldr	r3, [r5, #16]
 8005a08:	f100 0a18 	add.w	sl, r0, #24
 8005a0c:	ea4f 068b 	mov.w	r6, fp, lsl #2
 8005a10:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 8005a14:	2b00      	cmp	r3, #0
 8005a16:	d02f      	beq.n	8005a78 <GUI_MEMDEV__WriteToActiveOpaque+0x4dc>
 8005a18:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 8005a1c:	2c02      	cmp	r4, #2
 8005a1e:	d003      	beq.n	8005a28 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 8005a20:	2c04      	cmp	r4, #4
 8005a22:	d001      	beq.n	8005a28 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 8005a24:	2c01      	cmp	r4, #1
 8005a26:	d106      	bne.n	8005a36 <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 8005a28:	4650      	mov	r0, sl
 8005a2a:	692f      	ldr	r7, [r5, #16]
 8005a2c:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005a2e:	465a      	mov	r2, fp
 8005a30:	4623      	mov	r3, r4
 8005a32:	47b8      	blx	r7
 8005a34:	44b2      	add	sl, r6
 8005a36:	2301      	movs	r3, #1
 8005a38:	2200      	movs	r2, #0
 8005a3a:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005a3c:	9300      	str	r3, [sp, #0]
 8005a3e:	9301      	str	r3, [sp, #4]
 8005a40:	9203      	str	r2, [sp, #12]
 8005a42:	9104      	str	r1, [sp, #16]
 8005a44:	9205      	str	r2, [sp, #20]
 8005a46:	4641      	mov	r1, r8
 8005a48:	465a      	mov	r2, fp
 8005a4a:	f8cd 9008 	str.w	r9, [sp, #8]
 8005a4e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8005a50:	f7ff f97c 	bl	8004d4c <LCD_DrawBitmap>
 8005a54:	9910      	ldr	r1, [sp, #64]	; 0x40
 8005a56:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005a58:	f108 0701 	add.w	r7, r8, #1
 8005a5c:	fa02 f381 	sxtah	r3, r2, r1
 8005a60:	42bb      	cmp	r3, r7
 8005a62:	d107      	bne.n	8005a74 <GUI_MEMDEV__WriteToActiveOpaque+0x4d8>
 8005a64:	a818      	add	r0, sp, #96	; 0x60
 8005a66:	f7fd f8c5 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8005a6a:	a81a      	add	r0, sp, #104	; 0x68
 8005a6c:	f7fd f8c2 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8005a70:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005a72:	e120      	b.n	8005cb6 <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 8005a74:	46b8      	mov	r8, r7
 8005a76:	e7d1      	b.n	8005a1c <GUI_MEMDEV__WriteToActiveOpaque+0x480>
 8005a78:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8005a7a:	2c02      	cmp	r4, #2
 8005a7c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8005a7e:	d00e      	beq.n	8005a9e <GUI_MEMDEV__WriteToActiveOpaque+0x502>
 8005a80:	2c04      	cmp	r4, #4
 8005a82:	d018      	beq.n	8005ab6 <GUI_MEMDEV__WriteToActiveOpaque+0x51a>
 8005a84:	2c01      	cmp	r4, #1
 8005a86:	d125      	bne.n	8005ad4 <GUI_MEMDEV__WriteToActiveOpaque+0x538>
 8005a88:	2300      	movs	r3, #0
 8005a8a:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8005a8e:	9309      	str	r3, [sp, #36]	; 0x24
 8005a90:	47c0      	blx	r8
 8005a92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005a94:	54f8      	strb	r0, [r7, r3]
 8005a96:	3301      	adds	r3, #1
 8005a98:	459b      	cmp	fp, r3
 8005a9a:	d1f6      	bne.n	8005a8a <GUI_MEMDEV__WriteToActiveOpaque+0x4ee>
 8005a9c:	e019      	b.n	8005ad2 <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 8005a9e:	2300      	movs	r3, #0
 8005aa0:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8005aa4:	9309      	str	r3, [sp, #36]	; 0x24
 8005aa6:	47c0      	blx	r8
 8005aa8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005aaa:	f827 0013 	strh.w	r0, [r7, r3, lsl #1]
 8005aae:	3301      	adds	r3, #1
 8005ab0:	459b      	cmp	fp, r3
 8005ab2:	d1f5      	bne.n	8005aa0 <GUI_MEMDEV__WriteToActiveOpaque+0x504>
 8005ab4:	e00d      	b.n	8005ad2 <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 8005ab6:	465a      	mov	r2, fp
 8005ab8:	2300      	movs	r3, #0
 8005aba:	f85a 0003 	ldr.w	r0, [sl, r3]
 8005abe:	920b      	str	r2, [sp, #44]	; 0x2c
 8005ac0:	9309      	str	r3, [sp, #36]	; 0x24
 8005ac2:	47c0      	blx	r8
 8005ac4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005ac6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005ac8:	3a01      	subs	r2, #1
 8005aca:	50f8      	str	r0, [r7, r3]
 8005acc:	f103 0304 	add.w	r3, r3, #4
 8005ad0:	d1f3      	bne.n	8005aba <GUI_MEMDEV__WriteToActiveOpaque+0x51e>
 8005ad2:	44b2      	add	sl, r6
 8005ad4:	2301      	movs	r3, #1
 8005ad6:	2200      	movs	r2, #0
 8005ad8:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005ada:	9300      	str	r3, [sp, #0]
 8005adc:	9301      	str	r3, [sp, #4]
 8005ade:	9203      	str	r2, [sp, #12]
 8005ae0:	9104      	str	r1, [sp, #16]
 8005ae2:	9205      	str	r2, [sp, #20]
 8005ae4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8005ae6:	f8cd 9008 	str.w	r9, [sp, #8]
 8005aea:	4629      	mov	r1, r5
 8005aec:	465a      	mov	r2, fp
 8005aee:	f7ff f92d 	bl	8004d4c <LCD_DrawBitmap>
 8005af2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005af4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005af6:	1c6f      	adds	r7, r5, #1
 8005af8:	fa01 f380 	sxtah	r3, r1, r0
 8005afc:	42bb      	cmp	r3, r7
 8005afe:	d0b1      	beq.n	8005a64 <GUI_MEMDEV__WriteToActiveOpaque+0x4c8>
 8005b00:	463d      	mov	r5, r7
 8005b02:	e7ba      	b.n	8005a7a <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 8005b04:	2910      	cmp	r1, #16
 8005b06:	f040 80d8 	bne.w	8005cba <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8005b0a:	fa0f fa87 	sxth.w	sl, r7
 8005b0e:	fb0a f004 	mul.w	r0, sl, r4
 8005b12:	f7fd fa75 	bl	8003000 <GUI_ALLOC_AllocNoInit>
 8005b16:	9012      	str	r0, [sp, #72]	; 0x48
 8005b18:	2800      	cmp	r0, #0
 8005b1a:	f000 80ce 	beq.w	8005cba <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8005b1e:	f7fd f85b 	bl	8002bd8 <GUI_ALLOC_LockH>
 8005b22:	901a      	str	r0, [sp, #104]	; 0x68
 8005b24:	4630      	mov	r0, r6
 8005b26:	f7fd f857 	bl	8002bd8 <GUI_ALLOC_LockH>
 8005b2a:	9018      	str	r0, [sp, #96]	; 0x60
 8005b2c:	692b      	ldr	r3, [r5, #16]
 8005b2e:	f100 0618 	add.w	r6, r0, #24
 8005b32:	b113      	cbz	r3, 8005b3a <GUI_MEMDEV__WriteToActiveOpaque+0x59e>
 8005b34:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8005b38:	b92b      	cbnz	r3, 8005b46 <GUI_MEMDEV__WriteToActiveOpaque+0x5aa>
 8005b3a:	00e2      	lsls	r2, r4, #3
 8005b3c:	b23f      	sxth	r7, r7
 8005b3e:	9211      	str	r2, [sp, #68]	; 0x44
 8005b40:	007f      	lsls	r7, r7, #1
 8005b42:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8005b44:	e088      	b.n	8005c58 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 8005b46:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8005b4a:	0080      	lsls	r0, r0, #2
 8005b4c:	f7fd fa58 	bl	8003000 <GUI_ALLOC_AllocNoInit>
 8005b50:	9011      	str	r0, [sp, #68]	; 0x44
 8005b52:	b118      	cbz	r0, 8005b5c <GUI_MEMDEV__WriteToActiveOpaque+0x5c0>
 8005b54:	f7fd f840 	bl	8002bd8 <GUI_ALLOC_LockH>
 8005b58:	9019      	str	r0, [sp, #100]	; 0x64
 8005b5a:	e001      	b.n	8005b60 <GUI_MEMDEV__WriteToActiveOpaque+0x5c4>
 8005b5c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005b5e:	9319      	str	r3, [sp, #100]	; 0x64
 8005b60:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005b62:	2b00      	cmp	r3, #0
 8005b64:	f000 80a0 	beq.w	8005ca8 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8005b68:	b23f      	sxth	r7, r7
 8005b6a:	007f      	lsls	r7, r7, #1
 8005b6c:	970e      	str	r7, [sp, #56]	; 0x38
 8005b6e:	00e7      	lsls	r7, r4, #3
 8005b70:	9713      	str	r7, [sp, #76]	; 0x4c
 8005b72:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8005b74:	970c      	str	r7, [sp, #48]	; 0x30
 8005b76:	2c02      	cmp	r4, #2
 8005b78:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8005b7c:	d004      	beq.n	8005b88 <GUI_MEMDEV__WriteToActiveOpaque+0x5ec>
 8005b7e:	2c04      	cmp	r4, #4
 8005b80:	d007      	beq.n	8005b92 <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 8005b82:	2c01      	cmp	r4, #1
 8005b84:	d114      	bne.n	8005bb0 <GUI_MEMDEV__WriteToActiveOpaque+0x614>
 8005b86:	e004      	b.n	8005b92 <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 8005b88:	4630      	mov	r0, r6
 8005b8a:	9919      	ldr	r1, [sp, #100]	; 0x64
 8005b8c:	4652      	mov	r2, sl
 8005b8e:	4623      	mov	r3, r4
 8005b90:	e003      	b.n	8005b9a <GUI_MEMDEV__WriteToActiveOpaque+0x5fe>
 8005b92:	9919      	ldr	r1, [sp, #100]	; 0x64
 8005b94:	4630      	mov	r0, r6
 8005b96:	4652      	mov	r2, sl
 8005b98:	2302      	movs	r3, #2
 8005b9a:	f8d9 7014 	ldr.w	r7, [r9, #20]
 8005b9e:	47b8      	blx	r7
 8005ba0:	692f      	ldr	r7, [r5, #16]
 8005ba2:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005ba4:	4641      	mov	r1, r8
 8005ba6:	4652      	mov	r2, sl
 8005ba8:	4623      	mov	r3, r4
 8005baa:	47b8      	blx	r7
 8005bac:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8005bae:	443e      	add	r6, r7
 8005bb0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8005bb2:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005bb4:	9104      	str	r1, [sp, #16]
 8005bb6:	2301      	movs	r3, #1
 8005bb8:	2200      	movs	r2, #0
 8005bba:	f107 0801 	add.w	r8, r7, #1
 8005bbe:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 8005bc0:	9300      	str	r3, [sp, #0]
 8005bc2:	9301      	str	r3, [sp, #4]
 8005bc4:	9702      	str	r7, [sp, #8]
 8005bc6:	9203      	str	r2, [sp, #12]
 8005bc8:	9205      	str	r2, [sp, #20]
 8005bca:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8005bcc:	990c      	ldr	r1, [sp, #48]	; 0x30
 8005bce:	465a      	mov	r2, fp
 8005bd0:	f7ff f8bc 	bl	8004d4c <LCD_DrawBitmap>
 8005bd4:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8005bd6:	980d      	ldr	r0, [sp, #52]	; 0x34
 8005bd8:	fa00 f387 	sxtah	r3, r0, r7
 8005bdc:	4543      	cmp	r3, r8
 8005bde:	d002      	beq.n	8005be6 <GUI_MEMDEV__WriteToActiveOpaque+0x64a>
 8005be0:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8005be4:	e7c7      	b.n	8005b76 <GUI_MEMDEV__WriteToActiveOpaque+0x5da>
 8005be6:	a819      	add	r0, sp, #100	; 0x64
 8005be8:	f7fd f804 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8005bec:	9811      	ldr	r0, [sp, #68]	; 0x44
 8005bee:	f7fd f821 	bl	8002c34 <GUI_ALLOC_Free>
 8005bf2:	e059      	b.n	8005ca8 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8005bf4:	2000814c 	.word	0x2000814c
 8005bf8:	2000000c 	.word	0x2000000c
 8005bfc:	2c04      	cmp	r4, #4
 8005bfe:	d041      	beq.n	8005c84 <GUI_MEMDEV__WriteToActiveOpaque+0x6e8>
 8005c00:	2c01      	cmp	r4, #1
 8005c02:	d111      	bne.n	8005c28 <GUI_MEMDEV__WriteToActiveOpaque+0x68c>
 8005c04:	464a      	mov	r2, r9
 8005c06:	4631      	mov	r1, r6
 8005c08:	f831 0b02 	ldrh.w	r0, [r1], #2
 8005c0c:	910a      	str	r1, [sp, #40]	; 0x28
 8005c0e:	920b      	str	r2, [sp, #44]	; 0x2c
 8005c10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005c12:	4798      	blx	r3
 8005c14:	47c0      	blx	r8
 8005c16:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005c18:	f802 0b01 	strb.w	r0, [r2], #1
 8005c1c:	eb09 000a 	add.w	r0, r9, sl
 8005c20:	4282      	cmp	r2, r0
 8005c22:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005c24:	d1f0      	bne.n	8005c08 <GUI_MEMDEV__WriteToActiveOpaque+0x66c>
 8005c26:	443e      	add	r6, r7
 8005c28:	2301      	movs	r3, #1
 8005c2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8005c2c:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005c2e:	9300      	str	r3, [sp, #0]
 8005c30:	2200      	movs	r2, #0
 8005c32:	9301      	str	r3, [sp, #4]
 8005c34:	9002      	str	r0, [sp, #8]
 8005c36:	9203      	str	r2, [sp, #12]
 8005c38:	9104      	str	r1, [sp, #16]
 8005c3a:	9205      	str	r2, [sp, #20]
 8005c3c:	4629      	mov	r1, r5
 8005c3e:	465a      	mov	r2, fp
 8005c40:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8005c42:	f7ff f883 	bl	8004d4c <LCD_DrawBitmap>
 8005c46:	9910      	ldr	r1, [sp, #64]	; 0x40
 8005c48:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005c4a:	f105 0901 	add.w	r9, r5, #1
 8005c4e:	fa02 f381 	sxtah	r3, r2, r1
 8005c52:	454b      	cmp	r3, r9
 8005c54:	d028      	beq.n	8005ca8 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8005c56:	464d      	mov	r5, r9
 8005c58:	2c02      	cmp	r4, #2
 8005c5a:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 8005c5e:	d1cd      	bne.n	8005bfc <GUI_MEMDEV__WriteToActiveOpaque+0x660>
 8005c60:	464b      	mov	r3, r9
 8005c62:	4631      	mov	r1, r6
 8005c64:	46d9      	mov	r9, fp
 8005c66:	f831 0b02 	ldrh.w	r0, [r1], #2
 8005c6a:	910a      	str	r1, [sp, #40]	; 0x28
 8005c6c:	9309      	str	r3, [sp, #36]	; 0x24
 8005c6e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005c70:	4790      	blx	r2
 8005c72:	47c0      	blx	r8
 8005c74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005c76:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005c78:	f823 0b02 	strh.w	r0, [r3], #2
 8005c7c:	f1b9 0901 	subs.w	r9, r9, #1
 8005c80:	d1f1      	bne.n	8005c66 <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 8005c82:	e7d0      	b.n	8005c26 <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 8005c84:	464b      	mov	r3, r9
 8005c86:	4631      	mov	r1, r6
 8005c88:	46d9      	mov	r9, fp
 8005c8a:	f831 0b02 	ldrh.w	r0, [r1], #2
 8005c8e:	910a      	str	r1, [sp, #40]	; 0x28
 8005c90:	9309      	str	r3, [sp, #36]	; 0x24
 8005c92:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005c94:	4790      	blx	r2
 8005c96:	47c0      	blx	r8
 8005c98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005c9a:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005c9c:	f843 0b04 	str.w	r0, [r3], #4
 8005ca0:	f1b9 0901 	subs.w	r9, r9, #1
 8005ca4:	d1f1      	bne.n	8005c8a <GUI_MEMDEV__WriteToActiveOpaque+0x6ee>
 8005ca6:	e7be      	b.n	8005c26 <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 8005ca8:	a818      	add	r0, sp, #96	; 0x60
 8005caa:	f7fc ffa3 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8005cae:	a81a      	add	r0, sp, #104	; 0x68
 8005cb0:	f7fc ffa0 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8005cb4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005cb6:	f7fc ffbd 	bl	8002c34 <GUI_ALLOC_Free>
 8005cba:	b01d      	add	sp, #116	; 0x74
 8005cbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005cc0 <GUI_USAGE_DecUseCnt>:
 8005cc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005cc2:	4605      	mov	r5, r0
 8005cc4:	f7fc ff88 	bl	8002bd8 <GUI_ALLOC_LockH>
 8005cc8:	4602      	mov	r2, r0
 8005cca:	a802      	add	r0, sp, #8
 8005ccc:	8994      	ldrh	r4, [r2, #12]
 8005cce:	f840 2d04 	str.w	r2, [r0, #-4]!
 8005cd2:	3c01      	subs	r4, #1
 8005cd4:	b2a4      	uxth	r4, r4
 8005cd6:	8194      	strh	r4, [r2, #12]
 8005cd8:	f7fc ff8c 	bl	8002bf4 <GUI_ALLOC_UnlockH>
 8005cdc:	b914      	cbnz	r4, 8005ce4 <GUI_USAGE_DecUseCnt+0x24>
 8005cde:	4628      	mov	r0, r5
 8005ce0:	f7fc ffa8 	bl	8002c34 <GUI_ALLOC_Free>
 8005ce4:	b003      	add	sp, #12
 8005ce6:	bd30      	pop	{r4, r5, pc}

08005ce8 <GUI_USAGE_AddRect>:
 8005ce8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005cec:	4605      	mov	r5, r0
 8005cee:	4688      	mov	r8, r1
 8005cf0:	4617      	mov	r7, r2
 8005cf2:	4699      	mov	r9, r3
 8005cf4:	68a8      	ldr	r0, [r5, #8]
 8005cf6:	464b      	mov	r3, r9
 8005cf8:	6846      	ldr	r6, [r0, #4]
 8005cfa:	4641      	mov	r1, r8
 8005cfc:	4628      	mov	r0, r5
 8005cfe:	1c54      	adds	r4, r2, #1
 8005d00:	47b0      	blx	r6
 8005d02:	9b08      	ldr	r3, [sp, #32]
 8005d04:	443b      	add	r3, r7
 8005d06:	42a3      	cmp	r3, r4
 8005d08:	d001      	beq.n	8005d0e <GUI_USAGE_AddRect+0x26>
 8005d0a:	4622      	mov	r2, r4
 8005d0c:	e7f2      	b.n	8005cf4 <GUI_USAGE_AddRect+0xc>
 8005d0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

08005d14 <LCD_SelectLCD>:
 8005d14:	b510      	push	{r4, lr}
 8005d16:	4b0d      	ldr	r3, [pc, #52]	; (8005d4c <LCD_SelectLCD+0x38>)
 8005d18:	681a      	ldr	r2, [r3, #0]
 8005d1a:	7c51      	ldrb	r1, [r2, #17]
 8005d1c:	4a0c      	ldr	r2, [pc, #48]	; (8005d50 <LCD_SelectLCD+0x3c>)
 8005d1e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 8005d22:	461c      	mov	r4, r3
 8005d24:	b140      	cbz	r0, 8005d38 <LCD_SelectLCD+0x24>
 8005d26:	68c3      	ldr	r3, [r0, #12]
 8005d28:	b113      	cbz	r3, 8005d30 <LCD_SelectLCD+0x1c>
 8005d2a:	681b      	ldr	r3, [r3, #0]
 8005d2c:	2b04      	cmp	r3, #4
 8005d2e:	d001      	beq.n	8005d34 <LCD_SelectLCD+0x20>
 8005d30:	6800      	ldr	r0, [r0, #0]
 8005d32:	e7f7      	b.n	8005d24 <LCD_SelectLCD+0x10>
 8005d34:	f7fc fbfe 	bl	8002534 <GUI_DEVICE_Unlink>
 8005d38:	6823      	ldr	r3, [r4, #0]
 8005d3a:	2200      	movs	r2, #0
 8005d3c:	661a      	str	r2, [r3, #96]	; 0x60
 8005d3e:	f103 0208 	add.w	r2, r3, #8
 8005d42:	615a      	str	r2, [r3, #20]
 8005d44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005d48:	f7ff b90c 	b.w	8004f64 <LCD_SetClipRectMax>
 8005d4c:	2000000c 	.word	0x2000000c
 8005d50:	2000814c 	.word	0x2000814c

08005d54 <LCD_GetNumLayers>:
 8005d54:	b510      	push	{r4, lr}
 8005d56:	2000      	movs	r0, #0
 8005d58:	f7fc fbb4 	bl	80024c4 <GUI_DEVICE__GetpDriver>
 8005d5c:	1c04      	adds	r4, r0, #0
 8005d5e:	f04f 0001 	mov.w	r0, #1
 8005d62:	bf18      	it	ne
 8005d64:	2401      	movne	r4, #1
 8005d66:	f7fc fbad 	bl	80024c4 <GUI_DEVICE__GetpDriver>
 8005d6a:	b100      	cbz	r0, 8005d6e <LCD_GetNumLayers+0x1a>
 8005d6c:	3401      	adds	r4, #1
 8005d6e:	4620      	mov	r0, r4
 8005d70:	bd10      	pop	{r4, pc}

08005d72 <GUI__CompactPixelIndices>:
 8005d72:	2a08      	cmp	r2, #8
 8005d74:	b510      	push	{r4, lr}
 8005d76:	dd0e      	ble.n	8005d96 <GUI__CompactPixelIndices+0x24>
 8005d78:	2a10      	cmp	r2, #16
 8005d7a:	dc0a      	bgt.n	8005d92 <GUI__CompactPixelIndices+0x20>
 8005d7c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8005d80:	4603      	mov	r3, r0
 8005d82:	f850 2b04 	ldr.w	r2, [r0], #4
 8005d86:	f823 2b02 	strh.w	r2, [r3], #2
 8005d8a:	428b      	cmp	r3, r1
 8005d8c:	d1f9      	bne.n	8005d82 <GUI__CompactPixelIndices+0x10>
 8005d8e:	2001      	movs	r0, #1
 8005d90:	bd10      	pop	{r4, pc}
 8005d92:	2000      	movs	r0, #0
 8005d94:	bd10      	pop	{r4, pc}
 8005d96:	2a02      	cmp	r2, #2
 8005d98:	d06d      	beq.n	8005e76 <GUI__CompactPixelIndices+0x104>
 8005d9a:	2a04      	cmp	r2, #4
 8005d9c:	d054      	beq.n	8005e48 <GUI__CompactPixelIndices+0xd6>
 8005d9e:	2a01      	cmp	r2, #1
 8005da0:	f040 8095 	bne.w	8005ece <GUI__CompactPixelIndices+0x15c>
 8005da4:	4604      	mov	r4, r0
 8005da6:	6803      	ldr	r3, [r0, #0]
 8005da8:	2901      	cmp	r1, #1
 8005daa:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 8005dae:	b2db      	uxtb	r3, r3
 8005db0:	d047      	beq.n	8005e42 <GUI__CompactPixelIndices+0xd0>
 8005db2:	6842      	ldr	r2, [r0, #4]
 8005db4:	2902      	cmp	r1, #2
 8005db6:	f002 0201 	and.w	r2, r2, #1
 8005dba:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005dbe:	d102      	bne.n	8005dc6 <GUI__CompactPixelIndices+0x54>
 8005dc0:	f100 0208 	add.w	r2, r0, #8
 8005dc4:	e03e      	b.n	8005e44 <GUI__CompactPixelIndices+0xd2>
 8005dc6:	6882      	ldr	r2, [r0, #8]
 8005dc8:	2903      	cmp	r1, #3
 8005dca:	f002 0201 	and.w	r2, r2, #1
 8005dce:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8005dd2:	d102      	bne.n	8005dda <GUI__CompactPixelIndices+0x68>
 8005dd4:	f100 020c 	add.w	r2, r0, #12
 8005dd8:	e034      	b.n	8005e44 <GUI__CompactPixelIndices+0xd2>
 8005dda:	68c2      	ldr	r2, [r0, #12]
 8005ddc:	2904      	cmp	r1, #4
 8005dde:	f002 0201 	and.w	r2, r2, #1
 8005de2:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8005de6:	d102      	bne.n	8005dee <GUI__CompactPixelIndices+0x7c>
 8005de8:	f100 0210 	add.w	r2, r0, #16
 8005dec:	e02a      	b.n	8005e44 <GUI__CompactPixelIndices+0xd2>
 8005dee:	6902      	ldr	r2, [r0, #16]
 8005df0:	2905      	cmp	r1, #5
 8005df2:	f002 0201 	and.w	r2, r2, #1
 8005df6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005dfa:	d102      	bne.n	8005e02 <GUI__CompactPixelIndices+0x90>
 8005dfc:	f100 0214 	add.w	r2, r0, #20
 8005e00:	e020      	b.n	8005e44 <GUI__CompactPixelIndices+0xd2>
 8005e02:	6942      	ldr	r2, [r0, #20]
 8005e04:	2906      	cmp	r1, #6
 8005e06:	f002 0201 	and.w	r2, r2, #1
 8005e0a:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 8005e0e:	d102      	bne.n	8005e16 <GUI__CompactPixelIndices+0xa4>
 8005e10:	f100 0218 	add.w	r2, r0, #24
 8005e14:	e016      	b.n	8005e44 <GUI__CompactPixelIndices+0xd2>
 8005e16:	6982      	ldr	r2, [r0, #24]
 8005e18:	3907      	subs	r1, #7
 8005e1a:	f002 0201 	and.w	r2, r2, #1
 8005e1e:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 8005e22:	d102      	bne.n	8005e2a <GUI__CompactPixelIndices+0xb8>
 8005e24:	f100 021c 	add.w	r2, r0, #28
 8005e28:	e005      	b.n	8005e36 <GUI__CompactPixelIndices+0xc4>
 8005e2a:	f100 0220 	add.w	r2, r0, #32
 8005e2e:	69c0      	ldr	r0, [r0, #28]
 8005e30:	f000 0001 	and.w	r0, r0, #1
 8005e34:	4303      	orrs	r3, r0
 8005e36:	f804 3b01 	strb.w	r3, [r4], #1
 8005e3a:	2900      	cmp	r1, #0
 8005e3c:	d0a7      	beq.n	8005d8e <GUI__CompactPixelIndices+0x1c>
 8005e3e:	4610      	mov	r0, r2
 8005e40:	e7b1      	b.n	8005da6 <GUI__CompactPixelIndices+0x34>
 8005e42:	1d02      	adds	r2, r0, #4
 8005e44:	2100      	movs	r1, #0
 8005e46:	e7f6      	b.n	8005e36 <GUI__CompactPixelIndices+0xc4>
 8005e48:	4602      	mov	r2, r0
 8005e4a:	6803      	ldr	r3, [r0, #0]
 8005e4c:	2901      	cmp	r1, #1
 8005e4e:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8005e52:	b2db      	uxtb	r3, r3
 8005e54:	d102      	bne.n	8005e5c <GUI__CompactPixelIndices+0xea>
 8005e56:	1d04      	adds	r4, r0, #4
 8005e58:	2100      	movs	r1, #0
 8005e5a:	e006      	b.n	8005e6a <GUI__CompactPixelIndices+0xf8>
 8005e5c:	f100 0408 	add.w	r4, r0, #8
 8005e60:	6840      	ldr	r0, [r0, #4]
 8005e62:	f000 000f 	and.w	r0, r0, #15
 8005e66:	4303      	orrs	r3, r0
 8005e68:	3902      	subs	r1, #2
 8005e6a:	f802 3b01 	strb.w	r3, [r2], #1
 8005e6e:	2900      	cmp	r1, #0
 8005e70:	d08d      	beq.n	8005d8e <GUI__CompactPixelIndices+0x1c>
 8005e72:	4620      	mov	r0, r4
 8005e74:	e7e9      	b.n	8005e4a <GUI__CompactPixelIndices+0xd8>
 8005e76:	4604      	mov	r4, r0
 8005e78:	6803      	ldr	r3, [r0, #0]
 8005e7a:	2901      	cmp	r1, #1
 8005e7c:	ea4f 1383 	mov.w	r3, r3, lsl #6
 8005e80:	b2db      	uxtb	r3, r3
 8005e82:	d021      	beq.n	8005ec8 <GUI__CompactPixelIndices+0x156>
 8005e84:	6842      	ldr	r2, [r0, #4]
 8005e86:	2902      	cmp	r1, #2
 8005e88:	f002 0203 	and.w	r2, r2, #3
 8005e8c:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8005e90:	d102      	bne.n	8005e98 <GUI__CompactPixelIndices+0x126>
 8005e92:	f100 0208 	add.w	r2, r0, #8
 8005e96:	e018      	b.n	8005eca <GUI__CompactPixelIndices+0x158>
 8005e98:	6882      	ldr	r2, [r0, #8]
 8005e9a:	2903      	cmp	r1, #3
 8005e9c:	f002 0203 	and.w	r2, r2, #3
 8005ea0:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 8005ea4:	d102      	bne.n	8005eac <GUI__CompactPixelIndices+0x13a>
 8005ea6:	f100 020c 	add.w	r2, r0, #12
 8005eaa:	e00e      	b.n	8005eca <GUI__CompactPixelIndices+0x158>
 8005eac:	f100 0210 	add.w	r2, r0, #16
 8005eb0:	68c0      	ldr	r0, [r0, #12]
 8005eb2:	f000 0003 	and.w	r0, r0, #3
 8005eb6:	4303      	orrs	r3, r0
 8005eb8:	3904      	subs	r1, #4
 8005eba:	f804 3b01 	strb.w	r3, [r4], #1
 8005ebe:	2900      	cmp	r1, #0
 8005ec0:	f43f af65 	beq.w	8005d8e <GUI__CompactPixelIndices+0x1c>
 8005ec4:	4610      	mov	r0, r2
 8005ec6:	e7d7      	b.n	8005e78 <GUI__CompactPixelIndices+0x106>
 8005ec8:	1d02      	adds	r2, r0, #4
 8005eca:	2100      	movs	r1, #0
 8005ecc:	e7f5      	b.n	8005eba <GUI__CompactPixelIndices+0x148>
 8005ece:	2300      	movs	r3, #0
 8005ed0:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 8005ed4:	54c2      	strb	r2, [r0, r3]
 8005ed6:	3301      	adds	r3, #1
 8005ed8:	428b      	cmp	r3, r1
 8005eda:	d1f9      	bne.n	8005ed0 <GUI__CompactPixelIndices+0x15e>
 8005edc:	e757      	b.n	8005d8e <GUI__CompactPixelIndices+0x1c>

08005ede <GUI_CalcColorDist>:
 8005ede:	b2cb      	uxtb	r3, r1
 8005ee0:	b2c2      	uxtb	r2, r0
 8005ee2:	1ad2      	subs	r2, r2, r3
 8005ee4:	b292      	uxth	r2, r2
 8005ee6:	b293      	uxth	r3, r2
 8005ee8:	b530      	push	{r4, r5, lr}
 8005eea:	041c      	lsls	r4, r3, #16
 8005eec:	bf48      	it	mi
 8005eee:	4253      	negmi	r3, r2
 8005ef0:	f3c1 2507 	ubfx	r5, r1, #8, #8
 8005ef4:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8005ef8:	ebc5 0202 	rsb	r2, r5, r2
 8005efc:	bf48      	it	mi
 8005efe:	b29b      	uxthmi	r3, r3
 8005f00:	b292      	uxth	r2, r2
 8005f02:	0c09      	lsrs	r1, r1, #16
 8005f04:	fb13 f403 	smulbb	r4, r3, r3
 8005f08:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 8005f0c:	b293      	uxth	r3, r2
 8005f0e:	041d      	lsls	r5, r3, #16
 8005f10:	b289      	uxth	r1, r1
 8005f12:	b288      	uxth	r0, r1
 8005f14:	bf44      	itt	mi
 8005f16:	4253      	negmi	r3, r2
 8005f18:	b29b      	uxthmi	r3, r3
 8005f1a:	0402      	lsls	r2, r0, #16
 8005f1c:	bf48      	it	mi
 8005f1e:	4248      	negmi	r0, r1
 8005f20:	fb13 4303 	smlabb	r3, r3, r3, r4
 8005f24:	bf48      	it	mi
 8005f26:	b280      	uxthmi	r0, r0
 8005f28:	fb00 3000 	mla	r0, r0, r0, r3
 8005f2c:	bd30      	pop	{r4, r5, pc}

08005f2e <WM__GetPrevSibling>:
 8005f2e:	b538      	push	{r3, r4, r5, lr}
 8005f30:	4605      	mov	r5, r0
 8005f32:	f000 f80f 	bl	8005f54 <WM__GetFirstSibling>
 8005f36:	4604      	mov	r4, r0
 8005f38:	b154      	cbz	r4, 8005f50 <WM__GetPrevSibling+0x22>
 8005f3a:	42ac      	cmp	r4, r5
 8005f3c:	d007      	beq.n	8005f4e <WM__GetPrevSibling+0x20>
 8005f3e:	4620      	mov	r0, r4
 8005f40:	f7fc fe40 	bl	8002bc4 <GUI_ALLOC_h2p>
 8005f44:	6a03      	ldr	r3, [r0, #32]
 8005f46:	42ab      	cmp	r3, r5
 8005f48:	d002      	beq.n	8005f50 <WM__GetPrevSibling+0x22>
 8005f4a:	461c      	mov	r4, r3
 8005f4c:	e7f4      	b.n	8005f38 <WM__GetPrevSibling+0xa>
 8005f4e:	2400      	movs	r4, #0
 8005f50:	4620      	mov	r0, r4
 8005f52:	bd38      	pop	{r3, r4, r5, pc}

08005f54 <WM__GetFirstSibling>:
 8005f54:	b508      	push	{r3, lr}
 8005f56:	f7ff fa73 	bl	8005440 <WM_GetParent>
 8005f5a:	b118      	cbz	r0, 8005f64 <WM__GetFirstSibling+0x10>
 8005f5c:	f7fc fe32 	bl	8002bc4 <GUI_ALLOC_h2p>
 8005f60:	69c0      	ldr	r0, [r0, #28]
 8005f62:	bd08      	pop	{r3, pc}
 8005f64:	bd08      	pop	{r3, pc}
	...

08005f68 <__libc_init_array>:
 8005f68:	b570      	push	{r4, r5, r6, lr}
 8005f6a:	4d0d      	ldr	r5, [pc, #52]	; (8005fa0 <__libc_init_array+0x38>)
 8005f6c:	4c0d      	ldr	r4, [pc, #52]	; (8005fa4 <__libc_init_array+0x3c>)
 8005f6e:	1b64      	subs	r4, r4, r5
 8005f70:	10a4      	asrs	r4, r4, #2
 8005f72:	2600      	movs	r6, #0
 8005f74:	42a6      	cmp	r6, r4
 8005f76:	d109      	bne.n	8005f8c <__libc_init_array+0x24>
 8005f78:	4d0b      	ldr	r5, [pc, #44]	; (8005fa8 <__libc_init_array+0x40>)
 8005f7a:	4c0c      	ldr	r4, [pc, #48]	; (8005fac <__libc_init_array+0x44>)
 8005f7c:	f000 f848 	bl	8006010 <_init>
 8005f80:	1b64      	subs	r4, r4, r5
 8005f82:	10a4      	asrs	r4, r4, #2
 8005f84:	2600      	movs	r6, #0
 8005f86:	42a6      	cmp	r6, r4
 8005f88:	d105      	bne.n	8005f96 <__libc_init_array+0x2e>
 8005f8a:	bd70      	pop	{r4, r5, r6, pc}
 8005f8c:	f855 3b04 	ldr.w	r3, [r5], #4
 8005f90:	4798      	blx	r3
 8005f92:	3601      	adds	r6, #1
 8005f94:	e7ee      	b.n	8005f74 <__libc_init_array+0xc>
 8005f96:	f855 3b04 	ldr.w	r3, [r5], #4
 8005f9a:	4798      	blx	r3
 8005f9c:	3601      	adds	r6, #1
 8005f9e:	e7f2      	b.n	8005f86 <__libc_init_array+0x1e>
 8005fa0:	08006bfc 	.word	0x08006bfc
 8005fa4:	08006bfc 	.word	0x08006bfc
 8005fa8:	08006bfc 	.word	0x08006bfc
 8005fac:	08006c00 	.word	0x08006c00

08005fb0 <memcpy>:
 8005fb0:	440a      	add	r2, r1
 8005fb2:	4291      	cmp	r1, r2
 8005fb4:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8005fb8:	d100      	bne.n	8005fbc <memcpy+0xc>
 8005fba:	4770      	bx	lr
 8005fbc:	b510      	push	{r4, lr}
 8005fbe:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005fc2:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005fc6:	4291      	cmp	r1, r2
 8005fc8:	d1f9      	bne.n	8005fbe <memcpy+0xe>
 8005fca:	bd10      	pop	{r4, pc}

08005fcc <memmove>:
 8005fcc:	4288      	cmp	r0, r1
 8005fce:	b510      	push	{r4, lr}
 8005fd0:	eb01 0402 	add.w	r4, r1, r2
 8005fd4:	d902      	bls.n	8005fdc <memmove+0x10>
 8005fd6:	4284      	cmp	r4, r0
 8005fd8:	4623      	mov	r3, r4
 8005fda:	d807      	bhi.n	8005fec <memmove+0x20>
 8005fdc:	1e43      	subs	r3, r0, #1
 8005fde:	42a1      	cmp	r1, r4
 8005fe0:	d008      	beq.n	8005ff4 <memmove+0x28>
 8005fe2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005fe6:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005fea:	e7f8      	b.n	8005fde <memmove+0x12>
 8005fec:	4402      	add	r2, r0
 8005fee:	4601      	mov	r1, r0
 8005ff0:	428a      	cmp	r2, r1
 8005ff2:	d100      	bne.n	8005ff6 <memmove+0x2a>
 8005ff4:	bd10      	pop	{r4, pc}
 8005ff6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005ffa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005ffe:	e7f7      	b.n	8005ff0 <memmove+0x24>

08006000 <memset>:
 8006000:	4402      	add	r2, r0
 8006002:	4603      	mov	r3, r0
 8006004:	4293      	cmp	r3, r2
 8006006:	d100      	bne.n	800600a <memset+0xa>
 8006008:	4770      	bx	lr
 800600a:	f803 1b01 	strb.w	r1, [r3], #1
 800600e:	e7f9      	b.n	8006004 <memset+0x4>

08006010 <_init>:
 8006010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006012:	bf00      	nop
 8006014:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006016:	bc08      	pop	{r3}
 8006018:	469e      	mov	lr, r3
 800601a:	4770      	bx	lr

0800601c <_fini>:
 800601c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800601e:	bf00      	nop
 8006020:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006022:	bc08      	pop	{r3}
 8006024:	469e      	mov	lr, r3
 8006026:	4770      	bx	lr
